{"ast":null,"code":"import { selection, select } from \"d3-selection\";\nimport { max, min, sum, cumsum } from \"d3-array\";\nimport { tree, stratify } from \"d3-hierarchy\";\nimport { zoom, zoomIdentity } from \"d3-zoom\";\nimport { flextree } from 'd3-flextree';\nimport { linkHorizontal } from 'd3-shape';\nimport { group, rollup } from 'd3-array';\nconst d3 = {\n  selection,\n  select,\n  max,\n  min,\n  sum,\n  cumsum,\n  tree,\n  stratify,\n  zoom,\n  zoomIdentity,\n  linkHorizontal,\n  group,\n  rollup\n};\nexport class OrgChart {\n  constructor() {\n    // Exposed variables \n    const attrs = {\n      id: `ID${Math.floor(Math.random() * 1000000)}`,\n      // Id for event handlings\n      firstDraw: true,\n      svgWidth: 800,\n      svgHeight: window.innerHeight - 100,\n      container: \"body\",\n      defaultTextFill: \"#2C3E50\",\n      defaultFont: \"Helvetica\",\n      ctx: document.createElement('canvas').getContext('2d'),\n      data: null,\n      duration: 400,\n      initialZoom: 1,\n      setActiveNodeCentered: true,\n      compact: true,\n      rootMargin: 40,\n      nodeDefaultBackground: 'none',\n      connections: [],\n      lastTransform: {\n        x: 0,\n        y: 0,\n        k: 1\n      },\n      nodeId: d => d.nodeId || d.id,\n      parentNodeId: d => d.parentNodeId || d.parentId,\n      backgroundColor: 'none',\n      zoomBehavior: null,\n      defs: function (state, visibleConnections) {\n        return `<defs>\n                    ${visibleConnections.map(conn => {\n          const labelWidth = this.getTextWidth(conn.label, {\n            ctx: state.ctx,\n            fontSize: 2,\n            defaultFont: state.defaultFont\n          });\n          return `\n                       <marker id=\"${conn.from + \"_\" + conn.to}\" refX=\"${conn._source.x < conn._target.x ? -7 : 7}\" refY=\"5\" markerWidth=\"500\"  markerHeight=\"500\"  orient=\"${conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\"}\" >\n                       <rect rx=0.5 width=${conn.label ? labelWidth + 3 : 0} height=3 y=1  fill=\"#152785\"></rect>\n                       <text font-size=\"2px\" x=1 fill=\"white\" y=3>${conn.label || ''}</text>\n                       </marker>\n\n                       <marker id=\"arrow-${conn.from + \"_\" + conn.to}\"  markerWidth=\"500\"  markerHeight=\"500\"  refY=\"2\"  refX=\"1\" orient=\"${conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\"}\" >\n                       <path transform=\"translate(0)\" d='M0,0 V4 L2,2 Z' fill='#152785' />\n                       </marker>\n                    `;\n        }).join(\"\")}\n                    </defs>\n                    }`;\n      },\n      connectionsUpdate: function (d, i, arr) {\n        d3.select(this).attr(\"stroke\", d => '#152785').attr('stroke-linecap', 'round').attr(\"stroke-width\", d => '5').attr('pointer-events', 'none').attr(\"marker-start\", d => `url(#${d.from + \"_\" + d.to})`).attr(\"marker-end\", d => `url(#arrow-${d.from + \"_\" + d.to})`);\n      },\n      linkUpdate: function (d, i, arr) {\n        d3.select(this).attr(\"stroke\", d => d.data._upToTheRootHighlighted ? '#152785' : 'lightgray').attr(\"stroke-width\", d => d.data._upToTheRootHighlighted ? 5 : 2);\n\n        if (d.data._upToTheRootHighlighted) {\n          d3.select(this).raise();\n        }\n      },\n      nodeUpdate: function (d, i, arr) {\n        d3.select(this).select('.node-rect').attr(\"stroke\", d => d.data._highlighted || d.data._upToTheRootHighlighted ? '#152785' : 'none').attr(\"stroke-width\", d.data._highlighted || d.data._upToTheRootHighlighted ? 10 : 1);\n      },\n      nodeWidth: d3Node => 250,\n      nodeHeight: d => 150,\n      siblingsMargin: d3Node => 20,\n      childrenMargin: d => 60,\n      neightbourMargin: (n1, n2) => 80,\n      compactMarginPair: d => 100,\n      compactMarginBetween: d3Node => 20,\n      onNodeClick: d => d,\n      linkGroupArc: d3.linkHorizontal().x(d => d.x).y(d => d.y),\n      // ({ source, target }) => {\n      //     return \n      //     return `M ${source.x} , ${source.y} Q ${(source.x + target.x) / 2 + 100},${source.y-100}  ${target.x}, ${target.y}`;\n      // },\n      nodeContent: d => `<div style=\"padding:5px;font-size:10px;\">Sample Node(id=${d.id}), override using <br/> <br/> \n            <code>chart<br/>\n            &nbsp;.nodeContent({data}=>{ <br/>\n             &nbsp;&nbsp;&nbsp;&nbsp;return '' // Custom HTML <br/>\n             &nbsp;})</code>\n             <br/> <br/>\n             Or check different <a href=\"https://github.com/bumbeishvili/org-chart#jump-to-examples\" target=\"_blank\">layout examples</a>\n             \n             </div>`,\n      layout: \"top\",\n      // top, left,right, bottom\n      buttonContent: _ref => {\n        let {\n          node,\n          state\n        } = _ref;\n        const icons = {\n          \"left\": d => d ? `<div style=\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\">‹</div>` : `<div style=\"margin-top:-10px;font-size:25px;height:23px\">›</div>`,\n          \"bottom\": d => d ? `<div style=\"margin-top:-20px;font-size:25px\">ˬ</div>` : `<div style=\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\">ˆ</div>`,\n          \"right\": d => d ? `<div style=\"margin-top:-10px;font-size:25px;height:23px\">›</div>` : `<div style=\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\">‹</div>`,\n          \"top\": d => d ? `<div style=\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\">ˆ</div>` : `<div style=\"margin-top:-20px;font-size:25px\">ˬ</div>`\n        };\n        return `<div style=\"border-radius:3px;padding:3px;font-size:10px;margin:auto auto;background-color:lightgray\"> ${icons[state.layout](node.children)}  </div>`;\n      },\n      layoutBindings: {\n        \"left\": {\n          \"nodeLeftX\": node => 0,\n          \"nodeRightX\": node => node.width,\n          \"nodeTopY\": node => -node.height / 2,\n          \"nodeBottomY\": node => node.height / 2,\n          \"nodeJoinX\": node => node.x + node.width,\n          \"nodeJoinY\": node => node.y - node.height / 2,\n          \"linkJoinX\": node => node.x + node.width,\n          \"linkJoinY\": node => node.y,\n          \"linkX\": node => node.x,\n          \"linkY\": node => node.y,\n          \"linkCompactXStart\": node => node.x + node.width / 2,\n          //node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n          \"linkCompactYStart\": node => node.y + (node.compactEven ? node.height / 2 : -node.height / 2),\n          \"compactLinkMidX\": (node, state) => node.firstCompactNode.x,\n          // node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"compactLinkMidY\": (node, state) => node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"linkParentX\": node => node.parent.x + node.parent.width,\n          \"linkParentY\": node => node.parent.y,\n          \"buttonX\": node => node.width,\n          \"buttonY\": node => node.height / 2,\n          \"centerTransform\": _ref2 => {\n            let {\n              root,\n              rootMargin,\n              centerY,\n              scale,\n              centerX\n            } = _ref2;\n            return `translate(${rootMargin},${centerY}) scale(${scale})`;\n          },\n          \"compactDimension\": {\n            sizeColumn: node => node.height,\n            sizeRow: node => node.width,\n            reverse: arr => arr.slice().reverse()\n          },\n          \"nodeFlexSize\": _ref3 => {\n            let {\n              height,\n              width,\n              siblingsMargin,\n              childrenMargin,\n              state,\n              node\n            } = _ref3;\n\n            if (state.compact && node.flexCompactDim) {\n              const result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [height + siblingsMargin, width + childrenMargin];\n          },\n          \"zoomTransform\": _ref4 => {\n            let {\n              centerY,\n              scale\n            } = _ref4;\n            return `translate(${0},${centerY}) scale(${scale})`;\n          },\n          \"diagonal\": this.hdiagonal.bind(this),\n          \"swap\": d => {\n            const x = d.x;\n            d.x = d.y;\n            d.y = x;\n          },\n          \"nodeUpdateTransform\": _ref5 => {\n            let {\n              x,\n              y,\n              width,\n              height\n            } = _ref5;\n            return `translate(${x},${y - height / 2})`;\n          }\n        },\n        \"top\": {\n          \"nodeLeftX\": node => -node.width / 2,\n          \"nodeRightX\": node => node.width / 2,\n          \"nodeTopY\": node => 0,\n          \"nodeBottomY\": node => node.height,\n          \"nodeJoinX\": node => node.x - node.width / 2,\n          \"nodeJoinY\": node => node.y + node.height,\n          \"linkJoinX\": node => node.x,\n          \"linkJoinY\": node => node.y + node.height,\n          \"linkCompactXStart\": node => node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n          \"linkCompactYStart\": node => node.y + node.height / 2,\n          \"compactLinkMidX\": (node, state) => node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"compactLinkMidY\": node => node.firstCompactNode.y,\n          \"compactDimension\": {\n            sizeColumn: node => node.width,\n            sizeRow: node => node.height,\n            reverse: arr => arr\n          },\n          \"linkX\": node => node.x,\n          \"linkY\": node => node.y,\n          \"linkParentX\": node => node.parent.x,\n          \"linkParentY\": node => node.parent.y + node.parent.height,\n          \"buttonX\": node => node.width / 2,\n          \"buttonY\": node => node.height,\n          \"centerTransform\": _ref6 => {\n            let {\n              root,\n              rootMargin,\n              centerY,\n              scale,\n              centerX\n            } = _ref6;\n            return `translate(${centerX},${rootMargin}) scale(${scale})`;\n          },\n          \"nodeFlexSize\": _ref7 => {\n            let {\n              height,\n              width,\n              siblingsMargin,\n              childrenMargin,\n              state,\n              node,\n              compactViewIndex\n            } = _ref7;\n\n            if (state.compact && node.flexCompactDim) {\n              const result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [width + siblingsMargin, height + childrenMargin];\n          },\n          \"zoomTransform\": _ref8 => {\n            let {\n              centerX,\n              scale\n            } = _ref8;\n            return `translate(${centerX},0}) scale(${scale})`;\n          },\n          \"diagonal\": this.diagonal.bind(this),\n          \"swap\": d => {},\n          \"nodeUpdateTransform\": _ref9 => {\n            let {\n              x,\n              y,\n              width,\n              height\n            } = _ref9;\n            return `translate(${x - width / 2},${y})`;\n          }\n        },\n        \"bottom\": {\n          \"nodeLeftX\": node => -node.width / 2,\n          \"nodeRightX\": node => node.width / 2,\n          \"nodeTopY\": node => -node.height,\n          \"nodeBottomY\": node => 0,\n          \"nodeJoinX\": node => node.x - node.width / 2,\n          \"nodeJoinY\": node => node.y - node.height - node.height,\n          \"linkJoinX\": node => node.x,\n          \"linkJoinY\": node => node.y - node.height,\n          \"linkCompactXStart\": node => node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n          \"linkCompactYStart\": node => node.y - node.height / 2,\n          \"compactLinkMidX\": (node, state) => node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"compactLinkMidY\": node => node.firstCompactNode.y,\n          \"linkX\": node => node.x,\n          \"linkY\": node => node.y,\n          \"compactDimension\": {\n            sizeColumn: node => node.width,\n            sizeRow: node => node.height,\n            reverse: arr => arr\n          },\n          \"linkParentX\": node => node.parent.x,\n          \"linkParentY\": node => node.parent.y - node.parent.height,\n          \"buttonX\": node => node.width / 2,\n          \"buttonY\": node => 0,\n          \"centerTransform\": _ref10 => {\n            let {\n              root,\n              rootMargin,\n              centerY,\n              scale,\n              centerX,\n              chartHeight\n            } = _ref10;\n            return `translate(${centerX},${chartHeight - rootMargin}) scale(${scale})`;\n          },\n          \"nodeFlexSize\": _ref11 => {\n            let {\n              height,\n              width,\n              siblingsMargin,\n              childrenMargin,\n              state,\n              node\n            } = _ref11;\n\n            if (state.compact && node.flexCompactDim) {\n              const result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [width + siblingsMargin, height + childrenMargin];\n          },\n          \"zoomTransform\": _ref12 => {\n            let {\n              centerX,\n              scale\n            } = _ref12;\n            return `translate(${centerX},0}) scale(${scale})`;\n          },\n          \"diagonal\": this.diagonal.bind(this),\n          \"swap\": d => {\n            d.y = -d.y;\n          },\n          \"nodeUpdateTransform\": _ref13 => {\n            let {\n              x,\n              y,\n              width,\n              height\n            } = _ref13;\n            return `translate(${x - width / 2},${y - height})`;\n          }\n        },\n        \"right\": {\n          \"nodeLeftX\": node => -node.width,\n          \"nodeRightX\": node => 0,\n          \"nodeTopY\": node => -node.height / 2,\n          \"nodeBottomY\": node => node.height / 2,\n          \"nodeJoinX\": node => node.x - node.width - node.width,\n          \"nodeJoinY\": node => node.y - node.height / 2,\n          \"linkJoinX\": node => node.x - node.width,\n          \"linkJoinY\": node => node.y,\n          \"linkX\": node => node.x,\n          \"linkY\": node => node.y,\n          \"linkParentX\": node => node.parent.x - node.parent.width,\n          \"linkParentY\": node => node.parent.y,\n          \"buttonX\": node => 0,\n          \"buttonY\": node => node.height / 2,\n          \"linkCompactXStart\": node => node.x - node.width / 2,\n          //node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n          \"linkCompactYStart\": node => node.y + (node.compactEven ? node.height / 2 : -node.height / 2),\n          \"compactLinkMidX\": (node, state) => node.firstCompactNode.x,\n          // node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"compactLinkMidY\": (node, state) => node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"centerTransform\": _ref14 => {\n            let {\n              root,\n              rootMargin,\n              centerY,\n              scale,\n              centerX,\n              chartWidth\n            } = _ref14;\n            return `translate(${chartWidth - rootMargin},${centerY}) scale(${scale})`;\n          },\n          \"nodeFlexSize\": _ref15 => {\n            let {\n              height,\n              width,\n              siblingsMargin,\n              childrenMargin,\n              state,\n              node\n            } = _ref15;\n\n            if (state.compact && node.flexCompactDim) {\n              const result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [height + siblingsMargin, width + childrenMargin];\n          },\n          \"compactDimension\": {\n            sizeColumn: node => node.height,\n            sizeRow: node => node.width,\n            reverse: arr => arr.slice().reverse()\n          },\n          \"zoomTransform\": _ref16 => {\n            let {\n              centerY,\n              scale\n            } = _ref16;\n            return `translate(${0},${centerY}) scale(${scale})`;\n          },\n          \"diagonal\": this.hdiagonal.bind(this),\n          \"swap\": d => {\n            const x = d.x;\n            d.x = -d.y;\n            d.y = x;\n          },\n          \"nodeUpdateTransform\": _ref17 => {\n            let {\n              x,\n              y,\n              width,\n              height\n            } = _ref17;\n            return `translate(${x - width},${y - height / 2})`;\n          }\n        }\n      }\n    };\n\n    this.getChartState = () => attrs; // Dynamically set getter and setter functions for Chart class\n\n\n    Object.keys(attrs).forEach(key => {\n      //@ts-ignore\n      this[key] = function (_) {\n        if (!arguments.length) {\n          return attrs[key];\n        } else {\n          attrs[key] = _;\n        }\n\n        return this;\n      };\n    });\n    this.initializeEnterExitUpdatePattern();\n  }\n\n  initializeEnterExitUpdatePattern() {\n    d3.selection.prototype.patternify = function (params) {\n      var container = this;\n      var selector = params.selector;\n      var elementTag = params.tag;\n      var data = params.data || [selector]; // Pattern in action\n\n      var selection = container.selectAll(\".\" + selector).data(data, (d, i) => {\n        if (typeof d === \"object\") {\n          if (d.id) {\n            return d.id;\n          }\n        }\n\n        return i;\n      });\n      selection.exit().remove();\n      selection = selection.enter().append(elementTag).merge(selection);\n      selection.attr(\"class\", selector);\n      return selection;\n    };\n  } // This method retrieves passed node's children IDs (including node)\n\n\n  getNodeChildren(_ref18, nodeStore) {\n    let {\n      data,\n      children,\n      _children\n    } = _ref18;\n    // Store current node ID\n    nodeStore.push(data); // Loop over children and recursively store descendants id (expanded nodes)\n\n    if (children) {\n      children.forEach(d => {\n        this.getNodeChildren(d, nodeStore);\n      });\n    } // Loop over _children and recursively store descendants id (collapsed nodes)\n\n\n    if (_children) {\n      _children.forEach(d => {\n        this.getNodeChildren(d, nodeStore);\n      });\n    } // Return result\n\n\n    return nodeStore;\n  } // This method can be invoked via chart.setZoomFactor API, it zooms to particulat scale\n\n\n  setZoomFactor(zoomLevel) {\n    const attrs = this.getChartState();\n    const calc = attrs.calc; // Store passed zoom level\n\n    attrs.initialZoom = zoomLevel;\n    return attrs.layoutBindings[attrs.layout].zoomTransform({\n      centerX: calc.centerX,\n      centerY: calc.centerY,\n      scale: attrs.initialZoom\n    });\n  }\n\n  render() {\n    //InnerFunctions which will update visuals\n    const attrs = this.getChartState();\n\n    if (!attrs.data || attrs.data.length == 0) {\n      console.log('ORG CHART - Data is empty');\n      return this;\n    } //Drawing containers\n\n\n    const container = d3.select(attrs.container);\n    const containerRect = container.node().getBoundingClientRect();\n    if (containerRect.width > 0) attrs.svgWidth = containerRect.width; //Calculated properties\n\n    const calc = {\n      id: `ID${Math.floor(Math.random() * 1000000)}`,\n      // id for event handlings,\n      chartWidth: attrs.svgWidth,\n      chartHeight: attrs.svgHeight\n    };\n    attrs.calc = calc; // Calculate max node depth (it's needed for layout heights calculation)\n\n    calc.centerX = calc.chartWidth / 2;\n    calc.centerY = calc.chartHeight / 2; // ******************* BEHAVIORS  **********************\n\n    if (attrs.firstDraw) {\n      const behaviors = {\n        zoom: null\n      }; // Get zooming function\n\n      behaviors.zoom = d3.zoom().on(\"zoom\", (event, d) => this.zoomed(event, d)).scaleExtent([0.001, 20]);\n      attrs.zoomBehavior = behaviors.zoom;\n    } //****************** ROOT node work ************************\n\n\n    attrs.flexTreeLayout = flextree({\n      nodeSize: node => {\n        const width = attrs.nodeWidth(node);\n        ;\n        const height = attrs.nodeHeight(node);\n        const siblingsMargin = attrs.siblingsMargin(node);\n        const childrenMargin = attrs.childrenMargin(node);\n        return attrs.layoutBindings[attrs.layout].nodeFlexSize({\n          state: attrs,\n          node: node,\n          width,\n          height,\n          siblingsMargin,\n          childrenMargin\n        });\n      }\n    }).spacing((nodeA, nodeB) => nodeA.parent == nodeB.parent ? 0 : attrs.neightbourMargin(nodeA, nodeB));\n    this.setLayouts({\n      expandNodesFirst: false\n    }); // *************************  DRAWING **************************\n    //Add svg\n\n    const svg = container.patternify({\n      tag: \"svg\",\n      selector: \"svg-chart-container\"\n    }).style('background-color', attrs.backgroundColor).attr(\"width\", attrs.svgWidth).attr(\"height\", attrs.svgHeight).attr(\"font-family\", attrs.defaultFont);\n\n    if (attrs.firstDraw) {\n      svg.call(attrs.zoomBehavior).on(\"dblclick.zoom\", null).attr(\"cursor\", \"move\");\n    }\n\n    attrs.svg = svg; //Add container g element\n\n    const chart = svg.patternify({\n      tag: \"g\",\n      selector: \"chart\"\n    }); // Add one more container g element, for better positioning controls\n\n    attrs.centerG = chart.patternify({\n      tag: \"g\",\n      selector: \"center-group\"\n    });\n    attrs.linksWrapper = attrs.centerG.patternify({\n      tag: \"g\",\n      selector: \"links-wrapper\"\n    });\n    attrs.nodesWrapper = attrs.centerG.patternify({\n      tag: \"g\",\n      selector: \"nodes-wrapper\"\n    });\n    attrs.connectionsWrapper = attrs.centerG.patternify({\n      tag: \"g\",\n      selector: \"connections-wrapper\"\n    });\n    attrs.defsWrapper = svg.patternify({\n      tag: \"g\",\n      selector: \"defs-wrapper\"\n    });\n\n    if (attrs.firstDraw) {\n      attrs.centerG.attr(\"transform\", () => {\n        return attrs.layoutBindings[attrs.layout].centerTransform({\n          centerX: calc.centerX,\n          centerY: calc.centerY,\n          scale: attrs.initialZoom,\n          rootMargin: attrs.rootMargin,\n          root: attrs.root,\n          chartHeight: calc.chartHeight,\n          chartWidth: calc.chartWidth\n        });\n      });\n    }\n\n    attrs.chart = chart; // Display tree contenrs\n\n    this.update(attrs.root); //#########################################  UTIL FUNCS ##################################\n    // This function restyles foreign object elements ()\n\n    d3.select(window).on(`resize.${attrs.id}`, () => {\n      const containerRect = d3.select(attrs.container).node().getBoundingClientRect();\n      attrs.svg.attr('width', containerRect.width);\n    });\n\n    if (attrs.firstDraw) {\n      attrs.firstDraw = false;\n    }\n\n    return this;\n  } // This function can be invoked via chart.addNode API, and it adds node in tree at runtime\n\n\n  addNode(obj) {\n    const attrs = this.getChartState();\n    const nodeFound = attrs.allNodes.filter(_ref19 => {\n      let {\n        data\n      } = _ref19;\n      return attrs.nodeId(data) === attrs.nodeId(obj);\n    })[0];\n    const parentFound = attrs.allNodes.filter(_ref20 => {\n      let {\n        data\n      } = _ref20;\n      return attrs.nodeId(data) === attrs.parentNodeId(obj);\n    })[0];\n\n    if (nodeFound) {\n      console.log(`ORG CHART - ADD - Node with id \"${attrs.nodeId(obj)}\" already exists in tree`);\n      return this;\n    }\n\n    if (!parentFound) {\n      console.log(`ORG CHART - ADD - Parent node with id \"${attrs.parentNodeId(obj)}\" not found in the tree`);\n      return this;\n    }\n\n    if (obj._centered && !obj._expanded) obj._expanded = true;\n    attrs.data.push(obj); // Update state of nodes and redraw graph\n\n    this.updateNodesState();\n    return this;\n  } // This function can be invoked via chart.removeNode API, and it removes node from tree at runtime\n\n\n  removeNode(nodeId) {\n    const attrs = this.getChartState();\n    const node = attrs.allNodes.filter(_ref21 => {\n      let {\n        data\n      } = _ref21;\n      return attrs.nodeId(data) == nodeId;\n    })[0];\n\n    if (!node) {\n      console.log(`ORG CHART - REMOVE - Node with id \"${nodeId}\" not found in the tree`);\n      return this;\n    } // Remove all node childs\n    // Retrieve all children nodes ids (including current node itself)\n\n\n    node.descendants().forEach(d => d.data._filteredOut = true);\n    const descendants = this.getNodeChildren(node, [], attrs.nodeId);\n    descendants.forEach(d => d._filtered = true); // Filter out retrieved nodes and reassign data\n\n    attrs.data = attrs.data.filter(d => !d._filtered);\n    const updateNodesState = this.updateNodesState.bind(this); // Update state of nodes and redraw graph\n\n    updateNodesState();\n    return this;\n  }\n\n  calculateCompactFlexDimensions(root) {\n    const attrs = this.getChartState();\n    root.eachBefore(node => {\n      node.firstCompact = null;\n      node.compactEven = null;\n      node.flexCompactDim = null;\n      node.firstCompactNode = null;\n    });\n    root.eachBefore(node => {\n      if (node.children && node.children.length > 1) {\n        const compactChildren = node.children.filter(d => !d.children);\n        if (compactChildren.length < 2) return;\n        compactChildren.forEach((child, i) => {\n          if (!i) child.firstCompact = true;\n          if (i % 2) child.compactEven = false;else child.compactEven = true;\n          child.row = Math.floor(i / 2);\n        });\n        const evenMaxColumnDimension = d3.max(compactChildren.filter(d => d.compactEven), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n        const oddMaxColumnDimension = d3.max(compactChildren.filter(d => !d.compactEven), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n        const columnSize = Math.max(evenMaxColumnDimension, oddMaxColumnDimension) * 2;\n        const rowsMap = d3.rollup(compactChildren, reducedGroup => d3.max(reducedGroup, d => attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d) + attrs.compactMarginBetween(d)), d => d.row);\n        const rowSize = d3.sum([...rowsMap].map(v => v[1]));\n        compactChildren.forEach(node => {\n          node.firstCompactNode = compactChildren[0];\n\n          if (node.firstCompact) {\n            node.flexCompactDim = [columnSize + attrs.compactMarginPair(node), rowSize - attrs.compactMarginBetween(node)];\n          } else {\n            node.flexCompactDim = [0, 0];\n          }\n        });\n        node.flexCompactDim = null;\n      }\n    });\n  }\n\n  calculateCompactFlexPositions(root) {\n    const attrs = this.getChartState();\n    root.eachBefore(node => {\n      if (node.children) {\n        const compactChildren = node.children.filter(d => d.flexCompactDim);\n        const fch = compactChildren[0];\n        if (!fch) return;\n        compactChildren.forEach((child, i, arr) => {\n          if (i == 0) fch.x -= fch.flexCompactDim[0] / 2;\n          if (i & i % 2 - 1) child.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(child) / 4;else if (i) child.x = fch.x + fch.flexCompactDim[0] * 0.75 + attrs.compactMarginPair(child) / 4;\n        });\n        const centerX = fch.x + fch.flexCompactDim[0] * 0.5;\n        fch.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(fch) / 4;\n        const offsetX = node.x - centerX;\n\n        if (Math.abs(offsetX) < 10) {\n          compactChildren.forEach(d => d.x += offsetX);\n        }\n\n        const rowsMap = d3.rollup(compactChildren, reducedGroup => d3.max(reducedGroup, d => attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d)), d => d.row);\n        const cumSum = d3.cumsum([...rowsMap].map(d => d[1] + attrs.compactMarginBetween(d)));\n        compactChildren.forEach((node, i) => {\n          if (node.row) {\n            node.y = fch.y + cumSum[node.row - 1];\n          } else {\n            node.y = fch.y;\n          }\n        });\n      }\n    });\n  } // This function basically redraws visible graph, based on nodes state\n\n\n  update(_ref22) {\n    let {\n      x0,\n      y0,\n      x,\n      y,\n      width,\n      height\n    } = _ref22;\n    const attrs = this.getChartState();\n    const calc = attrs.calc;\n\n    if (attrs.compact) {\n      this.calculateCompactFlexDimensions(attrs.root);\n    } //  Assigns the x and y position for the nodes\n\n\n    const treeData = attrs.flexTreeLayout(attrs.root); // Reassigns the x and y position for the based on the compact layout\n\n    if (attrs.compact) {\n      this.calculateCompactFlexPositions(attrs.root);\n    }\n\n    const nodes = treeData.descendants(); // console.table(nodes.map(d => ({ x: d.x, y: d.y, width: d.width, height: d.height, flexCompactDim: d.flexCompactDim + \"\" })))\n    // Get all links\n\n    const links = treeData.descendants().slice(1);\n    nodes.forEach(attrs.layoutBindings[attrs.layout].swap); // Connections\n\n    const connections = attrs.connections;\n    const allNodesMap = new Map(attrs.allNodes.map(d => [attrs.nodeId(d.data), d]));\n    const visibleNodesMap = new Map(nodes.map(d => [attrs.nodeId(d.data), d]));\n    connections.forEach(connection => {\n      const source = allNodesMap.get(connection.from);\n      const target = allNodesMap.get(connection.to);\n      connection._source = source;\n      connection._target = target;\n    });\n    const visibleConnections = connections.filter(d => visibleNodesMap.has(d.from) && visibleNodesMap.has(d.to));\n    const defsString = attrs.defs.bind(this)(attrs, visibleConnections);\n    const existingString = attrs.defsWrapper.html();\n\n    if (defsString !== existingString) {\n      attrs.defsWrapper.html(defsString);\n    } // --------------------------  LINKS ----------------------\n    // Get links selection\n\n\n    const linkSelection = attrs.linksWrapper.selectAll(\"path.link\").data(links, d => attrs.nodeId(d.data)); // Enter any new links at the parent's previous position.\n\n    const linkEnter = linkSelection.enter().insert(\"path\", \"g\").attr(\"class\", \"link\").attr(\"d\", d => {\n      const xo = attrs.layoutBindings[attrs.layout].linkJoinX({\n        x: x0,\n        y: y0,\n        width,\n        height\n      });\n      const yo = attrs.layoutBindings[attrs.layout].linkJoinY({\n        x: x0,\n        y: y0,\n        width,\n        height\n      });\n      const o = {\n        x: xo,\n        y: yo\n      };\n      return attrs.layoutBindings[attrs.layout].diagonal(o, o, o);\n    }); // Get links update selection\n\n    const linkUpdate = linkEnter.merge(linkSelection); // Styling links\n\n    linkUpdate.attr(\"fill\", \"none\"); // Allow external modifications\n\n    linkUpdate.each(attrs.linkUpdate); // Transition back to the parent element position\n\n    linkUpdate.transition().duration(attrs.duration).attr(\"d\", d => {\n      const n = attrs.compact && d.flexCompactDim ? {\n        x: attrs.layoutBindings[attrs.layout].compactLinkMidX(d, attrs),\n        y: attrs.layoutBindings[attrs.layout].compactLinkMidY(d, attrs)\n      } : {\n        x: attrs.layoutBindings[attrs.layout].linkX(d),\n        y: attrs.layoutBindings[attrs.layout].linkY(d)\n      };\n      const p = {\n        x: attrs.layoutBindings[attrs.layout].linkParentX(d),\n        y: attrs.layoutBindings[attrs.layout].linkParentY(d)\n      };\n      const m = attrs.compact && d.flexCompactDim ? {\n        x: attrs.layoutBindings[attrs.layout].linkCompactXStart(d),\n        y: attrs.layoutBindings[attrs.layout].linkCompactYStart(d)\n      } : n;\n      return attrs.layoutBindings[attrs.layout].diagonal(n, p, m);\n    }); // Remove any  links which is exiting after animation\n\n    const linkExit = linkSelection.exit().transition().duration(attrs.duration).attr(\"d\", d => {\n      const xo = attrs.layoutBindings[attrs.layout].linkJoinX({\n        x,\n        y,\n        width,\n        height\n      });\n      const yo = attrs.layoutBindings[attrs.layout].linkJoinY({\n        x,\n        y,\n        width,\n        height\n      });\n      const o = {\n        x: xo,\n        y: yo\n      };\n      return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n    }).remove(); // --------------------------  CONNECTIONS ----------------------\n\n    const connectionsSel = attrs.connectionsWrapper.selectAll(\"path.connection\").data(visibleConnections); // Enter any new connections at the parent's previous position.\n\n    const connEnter = connectionsSel.enter().insert(\"path\", \"g\").attr(\"class\", \"connection\").attr(\"d\", d => {\n      const xo = attrs.layoutBindings[attrs.layout].linkJoinX({\n        x: x0,\n        y: y0,\n        width,\n        height\n      });\n      const yo = attrs.layoutBindings[attrs.layout].linkJoinY({\n        x: x0,\n        y: y0,\n        width,\n        height\n      });\n      const o = {\n        x: xo,\n        y: yo\n      };\n      return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n    }); // Get connections update selection\n\n    const connUpdate = connEnter.merge(connectionsSel); // Styling connections\n\n    connUpdate.attr(\"fill\", \"none\"); // Transition back to the parent element position\n\n    connUpdate.transition().duration(attrs.duration).attr('d', d => {\n      const xs = attrs.layoutBindings[attrs.layout].linkX({\n        x: d._source.x,\n        y: d._source.y,\n        width: d._source.width,\n        height: d._source.height\n      });\n      const ys = attrs.layoutBindings[attrs.layout].linkY({\n        x: d._source.x,\n        y: d._source.y,\n        width: d._source.width,\n        height: d._source.height\n      });\n      const xt = attrs.layoutBindings[attrs.layout].linkJoinX({\n        x: d._target.x,\n        y: d._target.y,\n        width: d._target.width,\n        height: d._target.height\n      });\n      const yt = attrs.layoutBindings[attrs.layout].linkJoinY({\n        x: d._target.x,\n        y: d._target.y,\n        width: d._target.width,\n        height: d._target.height\n      });\n      return attrs.linkGroupArc({\n        source: {\n          x: xs,\n          y: ys\n        },\n        target: {\n          x: xt,\n          y: yt\n        }\n      });\n    }); // Allow external modifications\n\n    connUpdate.each(attrs.connectionsUpdate); // Remove any  links which is exiting after animation\n\n    const connExit = connectionsSel.exit().transition().duration(attrs.duration).attr('opacity', 0).remove(); // --------------------------  NODES ----------------------\n    // Get nodes selection\n\n    const nodesSelection = attrs.nodesWrapper.selectAll(\"g.node\").data(nodes, _ref23 => {\n      let {\n        data\n      } = _ref23;\n      return attrs.nodeId(data);\n    }); // Enter any new nodes at the parent's previous position.\n\n    const nodeEnter = nodesSelection.enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", d => {\n      if (d == attrs.root) return `translate(${x0},${y0})`;\n      const xj = attrs.layoutBindings[attrs.layout].nodeJoinX({\n        x: x0,\n        y: y0,\n        width,\n        height\n      });\n      const yj = attrs.layoutBindings[attrs.layout].nodeJoinY({\n        x: x0,\n        y: y0,\n        width,\n        height\n      });\n      return `translate(${xj},${yj})`;\n    }).attr(\"cursor\", \"pointer\").on(\"click\", (event, _ref24) => {\n      let {\n        data\n      } = _ref24;\n\n      if ([...event.srcElement.classList].includes(\"node-button-foreign-object\")) {\n        return;\n      }\n\n      attrs.onNodeClick(attrs.nodeId(data));\n    }); // Add background rectangle for the nodes\n\n    nodeEnter.patternify({\n      tag: \"rect\",\n      selector: \"node-rect\",\n      data: d => [d]\n    }); // Node update styles\n\n    const nodeUpdate = nodeEnter.merge(nodesSelection).style(\"font\", \"12px sans-serif\"); // Add foreignObject element inside rectangle\n\n    const fo = nodeUpdate.patternify({\n      tag: \"foreignObject\",\n      selector: \"node-foreign-object\",\n      data: d => [d]\n    }).style('overflow', 'visible'); // Add foreign object\n\n    fo.patternify({\n      tag: \"xhtml:div\",\n      selector: \"node-foreign-object-div\",\n      data: d => [d]\n    });\n    this.restyleForeignObjectElements(); // Add Node button circle's group (expand-collapse button)\n\n    const nodeButtonGroups = nodeEnter.patternify({\n      tag: \"g\",\n      selector: \"node-button-g\",\n      data: d => [d]\n    }).on(\"click\", (event, d) => this.onButtonClick(event, d)); // Add expand collapse button content\n\n    const nodeFo = nodeButtonGroups.patternify({\n      tag: \"foreignObject\",\n      selector: \"node-button-foreign-object\",\n      data: d => [d]\n    }).attr('width', 40).attr('height', 40).attr('x', -20).attr('y', -20).style('overflow', 'visible').patternify({\n      tag: \"xhtml:div\",\n      selector: \"node-button-div\",\n      data: d => [d]\n    }).style('pointer-events', 'none').style('display', 'flex').style('width', '100%').style('height', '100%'); // Transition to the proper position for the node\n\n    nodeUpdate.transition().attr(\"opacity\", 0).duration(attrs.duration).attr(\"transform\", _ref25 => {\n      let {\n        x,\n        y,\n        width,\n        height\n      } = _ref25;\n      return attrs.layoutBindings[attrs.layout].nodeUpdateTransform({\n        x,\n        y,\n        width,\n        height\n      });\n    }).attr(\"opacity\", 1); // Style node rectangles\n\n    nodeUpdate.select(\".node-rect\").attr(\"width\", _ref26 => {\n      let {\n        width\n      } = _ref26;\n      return width;\n    }).attr(\"height\", _ref27 => {\n      let {\n        height\n      } = _ref27;\n      return height;\n    }).attr(\"x\", _ref28 => {\n      let {\n        width\n      } = _ref28;\n      return 0;\n    }).attr(\"y\", _ref29 => {\n      let {\n        height\n      } = _ref29;\n      return 0;\n    }).attr(\"cursor\", \"pointer\").attr('rx', 3).attr(\"fill\", attrs.nodeDefaultBackground); // Move node button group to the desired position\n\n    nodeUpdate.select(\".node-button-g\").attr(\"transform\", _ref30 => {\n      let {\n        data,\n        width,\n        height\n      } = _ref30;\n      const x = attrs.layoutBindings[attrs.layout].buttonX({\n        width,\n        height\n      });\n      const y = attrs.layoutBindings[attrs.layout].buttonY({\n        width,\n        height\n      });\n      return `translate(${x},${y})`;\n    }).attr(\"opacity\", _ref31 => {\n      let {\n        children,\n        _children\n      } = _ref31;\n\n      if (children || _children) {\n        return 1;\n      }\n\n      return 0;\n    }); // Restyle node button circle\n\n    nodeUpdate.select(\".node-button-foreign-object .node-button-div\").html(node => {\n      return attrs.buttonContent({\n        node,\n        state: attrs\n      });\n    }); // Restyle button texts\n\n    nodeUpdate.select(\".node-button-text\").attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").attr(\"fill\", attrs.defaultTextFill).attr(\"font-size\", _ref32 => {\n      let {\n        children\n      } = _ref32;\n      if (children) return 40;\n      return 26;\n    }).text(_ref33 => {\n      let {\n        children\n      } = _ref33;\n      if (children) return \"-\";\n      return \"+\";\n    }).attr(\"y\", this.isEdge() ? 10 : 0);\n    nodeUpdate.each(attrs.nodeUpdate); // Remove any exiting nodes after transition\n\n    const nodeExitTransition = nodesSelection.exit().attr(\"opacity\", 1).transition().duration(attrs.duration).attr(\"transform\", d => {\n      const ex = attrs.layoutBindings[attrs.layout].nodeJoinX({\n        x,\n        y,\n        width,\n        height\n      });\n      const ey = attrs.layoutBindings[attrs.layout].nodeJoinY({\n        x,\n        y,\n        width,\n        height\n      });\n      return `translate(${ex},${ey})`;\n    }).on(\"end\", function () {\n      d3.select(this).remove();\n    }).attr(\"opacity\", 0); // Store the old positions for transition.\n\n    nodes.forEach(d => {\n      d.x0 = d.x;\n      d.y0 = d.y;\n    }); // CHECK FOR CENTERING\n\n    const centeredNode = attrs.allNodes.filter(d => d.data._centered)[0];\n\n    if (centeredNode) {\n      const centeredNodes = centeredNode.data._centeredWithDescendants ? centeredNode.descendants().filter((d, i) => i < 7) : [centeredNode];\n      centeredNode.data._centeredWithDescendants = null;\n      centeredNode.data._centered = null;\n      this.fit({\n        animate: true,\n        scale: false,\n        nodes: centeredNodes\n      });\n    }\n  } // This function detects whether current browser is edge\n\n\n  isEdge() {\n    return window.navigator.userAgent.includes(\"Edge\");\n  } // Generate horizontal diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges-horizontal-d3-v3-v4-v5-v6\n\n\n  hdiagonal(s, t, m) {\n    // Define source and target x,y coordinates\n    const x = s.x;\n    const y = s.y;\n    const ex = t.x;\n    const ey = t.y;\n    let mx = m && m.x || x;\n    let my = m && m.y || y; // Values in case of top reversed and left reversed diagonals\n\n    let xrvs = ex - x < 0 ? -1 : 1;\n    let yrvs = ey - y < 0 ? -1 : 1; // Define preferred curve radius\n\n    let rdef = 35; // Reduce curve radius, if source-target x space is smaller\n\n    let r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef; // Further reduce curve radius, is y space is more small\n\n    r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r; // Defin width and height of link, excluding radius\n\n    let h = Math.abs(ey - y) / 2 - r;\n    let w = Math.abs(ex - x) / 2 - r; // Build and return custom arc command\n\n    return `\n                  M ${mx} ${my}\n                  L ${mx} ${y}\n                  L ${x} ${y}\n                  L ${x + w * xrvs} ${y}\n                  C ${x + w * xrvs + r * xrvs} ${y} \n                    ${x + w * xrvs + r * xrvs} ${y} \n                    ${x + w * xrvs + r * xrvs} ${y + r * yrvs}\n                  L ${x + w * xrvs + r * xrvs} ${ey - r * yrvs} \n                  C ${x + w * xrvs + r * xrvs}  ${ey} \n                    ${x + w * xrvs + r * xrvs}  ${ey} \n                    ${ex - w * xrvs}  ${ey}\n                  L ${ex} ${ey}\n       `;\n  } // Generate custom diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges\n\n\n  diagonal(s, t, m) {\n    const x = s.x;\n    const y = s.y;\n    const ex = t.x;\n    const ey = t.y;\n    let mx = m && m.x || x;\n    let my = m && m.y || y;\n    let xrvs = ex - x < 0 ? -1 : 1;\n    let yrvs = ey - y < 0 ? -1 : 1;\n    let rdef = 35;\n    let r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n    r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r;\n    let h = Math.abs(ey - y) / 2 - r;\n    let w = Math.abs(ex - x) - r * 2; //w=0;\n\n    const path = `\n                  M ${mx} ${my}\n                  L ${x} ${my}\n                  L ${x} ${y}\n                  L ${x} ${y + h * yrvs}\n                  C  ${x} ${y + h * yrvs + r * yrvs} ${x} ${y + h * yrvs + r * yrvs} ${x + r * xrvs} ${y + h * yrvs + r * yrvs}\n                  L ${x + w * xrvs + r * xrvs} ${y + h * yrvs + r * yrvs}\n                  C  ${ex}  ${y + h * yrvs + r * yrvs} ${ex}  ${y + h * yrvs + r * yrvs} ${ex} ${ey - h * yrvs}\n                  L ${ex} ${ey}\n       `;\n    return path;\n  }\n\n  restyleForeignObjectElements() {\n    const attrs = this.getChartState();\n    attrs.svg.selectAll(\".node-foreign-object\").attr(\"width\", _ref34 => {\n      let {\n        width\n      } = _ref34;\n      return width;\n    }).attr(\"height\", _ref35 => {\n      let {\n        height\n      } = _ref35;\n      return height;\n    }).attr(\"x\", _ref36 => {\n      let {\n        width\n      } = _ref36;\n      return 0;\n    }).attr(\"y\", _ref37 => {\n      let {\n        height\n      } = _ref37;\n      return 0;\n    });\n    attrs.svg.selectAll(\".node-foreign-object-div\").style(\"width\", _ref38 => {\n      let {\n        width\n      } = _ref38;\n      return `${width}px`;\n    }).style(\"height\", _ref39 => {\n      let {\n        height\n      } = _ref39;\n      return `${height}px`;\n    }).html(function (d, i, arr) {\n      return attrs.nodeContent.bind(this)(d, i, arr, attrs);\n    });\n  } // Toggle children on click.\n\n\n  onButtonClick(event, d) {\n    const attrs = this.getChartState();\n\n    if (attrs.setActiveNodeCentered) {\n      d.data._centered = true;\n      d.data._centeredWithDescendants = true;\n    } // If childrens are expanded\n\n\n    if (d.children) {\n      //Collapse them\n      d._children = d.children;\n      d.children = null; // Set descendants expanded property to false\n\n      this.setExpansionFlagToChildren(d, false);\n    } else {\n      // Expand children\n      d.children = d._children;\n      d._children = null; // Set each children as expanded\n\n      d.children.forEach(_ref40 => {\n        let {\n          data\n        } = _ref40;\n        return data._expanded = true;\n      });\n    } // Redraw Graph\n\n\n    this.update(d);\n  } // This function changes `expanded` property to descendants\n\n\n  setExpansionFlagToChildren(_ref41, flag) {\n    let {\n      data,\n      children,\n      _children\n    } = _ref41;\n    // Set flag to the current property\n    data._expanded = flag; // Loop over and recursively update expanded children's descendants\n\n    if (children) {\n      children.forEach(d => {\n        this.setExpansionFlagToChildren(d, flag);\n      });\n    } // Loop over and recursively update collapsed children's descendants\n\n\n    if (_children) {\n      _children.forEach(d => {\n        this.setExpansionFlagToChildren(d, flag);\n      });\n    }\n  } // Method which only expands nodes, which have property set \"expanded=true\"\n\n\n  expandSomeNodes(d) {\n    // If node has expanded property set\n    if (d.data._expanded) {\n      // Retrieve node's parent\n      let parent = d.parent; // While we can go up\n\n      while (parent) {\n        // Expand all current parent's children\n        if (parent._children) {\n          parent.children = parent._children;\n        } // Replace current parent holding object\n\n\n        parent = parent.parent;\n      }\n    } // Recursivelly do the same for collapsed nodes\n\n\n    if (d._children) {\n      d._children.forEach(ch => this.expandSomeNodes(ch));\n    } // Recursivelly do the same for expanded nodes\n\n\n    if (d.children) {\n      d.children.forEach(ch => this.expandSomeNodes(ch));\n    }\n  } // This function updates nodes state and redraws graph, usually after data change\n\n\n  updateNodesState() {\n    const attrs = this.getChartState();\n    this.setLayouts({\n      expandNodesFirst: true\n    }); // Redraw Graphs\n\n    this.update(attrs.root);\n  }\n\n  setLayouts(_ref42) {\n    let {\n      expandNodesFirst = true\n    } = _ref42;\n    const attrs = this.getChartState(); // Store new root by converting flat data to hierarchy\n\n    attrs.root = d3.stratify().id(d => attrs.nodeId(d)).parentId(d => attrs.parentNodeId(d))(attrs.data);\n    attrs.root.each((node, i, arr) => {\n      let width = attrs.nodeWidth(node);\n      let height = attrs.nodeHeight(node);\n      Object.assign(node, {\n        width,\n        height\n      });\n    }); // Store positions, where children appear during their enter animation\n\n    attrs.root.x0 = 0;\n    attrs.root.y0 = 0;\n    attrs.allNodes = attrs.root.descendants(); // Store direct and total descendants count\n\n    attrs.allNodes.forEach(d => {\n      Object.assign(d.data, {\n        _directSubordinates: d.children ? d.children.length : 0,\n        _totalSubordinates: d.descendants().length - 1\n      });\n    });\n\n    if (attrs.root.children) {\n      if (expandNodesFirst) {\n        // Expand all nodes first\n        attrs.root.children.forEach(this.expand);\n      } // Then collapse them all\n\n\n      attrs.root.children.forEach(d => this.collapse(d)); // Then only expand nodes, which have expanded proprty set to true\n\n      attrs.root.children.forEach(ch => this.expandSomeNodes(ch));\n    }\n  } // Function which collapses passed node and it's descendants\n\n\n  collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n\n      d._children.forEach(ch => this.collapse(ch));\n\n      d.children = null;\n    }\n  } // Function which expands passed node and it's descendants\n\n\n  expand(d) {\n    if (d._children) {\n      d.children = d._children;\n      d.children.forEach(ch => this.expand(ch));\n      d._children = null;\n    }\n  } // Zoom handler function\n\n\n  zoomed(event, d) {\n    const attrs = this.getChartState();\n    const chart = attrs.chart; // Get d3 event's transform object\n\n    const transform = event.transform; // Store it\n\n    attrs.lastTransform = transform; // Reposition and rescale chart accordingly\n\n    chart.attr(\"transform\", transform); // Apply new styles to the foreign object element\n\n    if (this.isEdge()) {\n      this.restyleForeignObjectElements();\n    }\n  }\n\n  zoomTreeBounds(_ref43) {\n    let {\n      x0,\n      x1,\n      y0,\n      y1,\n      params = {\n        animate: true,\n        scale: true\n      }\n    } = _ref43;\n    const {\n      centerG,\n      svgWidth: w,\n      svgHeight: h,\n      svg,\n      zoomBehavior,\n      duration,\n      lastTransform\n    } = this.getChartState();\n    let scaleVal = Math.min(8, 0.9 / Math.max((x1 - x0) / w, (y1 - y0) / h));\n    let identity = d3.zoomIdentity.translate(w / 2, h / 2);\n    identity = identity.scale(params.scale ? scaleVal : lastTransform.k);\n    identity = identity.translate(-(x0 + x1) / 2, -(y0 + y1) / 2); // Transition zoom wrapper component into specified bounds\n\n    svg.transition().duration(params.animate ? duration : 0).call(zoomBehavior.transform, identity);\n    centerG.transition().duration(params.animate ? duration : 0).attr('transform', 'translate(0,0)');\n  }\n\n  fit() {\n    let {\n      animate = true,\n      nodes,\n      scale = true\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const attrs = this.getChartState();\n    const {\n      root\n    } = attrs;\n    let descendants = nodes ? nodes : root.descendants();\n    const minX = d3.min(descendants, d => d.x + attrs.layoutBindings[attrs.layout].nodeLeftX(d));\n    const maxX = d3.max(descendants, d => d.x + attrs.layoutBindings[attrs.layout].nodeRightX(d));\n    const minY = d3.min(descendants, d => d.y + attrs.layoutBindings[attrs.layout].nodeTopY(d));\n    const maxY = d3.max(descendants, d => d.y + attrs.layoutBindings[attrs.layout].nodeBottomY(d));\n    this.zoomTreeBounds({\n      params: {\n        animate: animate,\n        scale\n      },\n      x0: minX - 50,\n      x1: maxX + 50,\n      y0: minY - 50,\n      y1: maxY + 50\n    });\n    return this;\n  } // This function can be invoked via chart.setExpanded API, it expands or collapses particular node\n\n\n  setExpanded(id) {\n    let expandedFlag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const attrs = this.getChartState(); // Retrieve node by node Id\n\n    const node = attrs.allNodes.filter(_ref44 => {\n      let {\n        data\n      } = _ref44;\n      return attrs.nodeId(data) == id;\n    })[0];\n\n    if (!node) {\n      console.log(`ORG CHART - ${expandedFlag ? \"EXPAND\" : \"COLLAPSE\"} - Node with id (${id})  not found in the tree`);\n      return this;\n    }\n\n    node.data._expanded = expandedFlag;\n    return this;\n  }\n\n  setCentered(nodeId) {\n    const attrs = this.getChartState(); // this.setExpanded(nodeId)\n\n    const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n\n    if (!node) {\n      console.log(`ORG CHART - CENTER - Node with id (${nodeId}) not found in the tree`);\n      return this;\n    }\n\n    node.data._centered = true;\n    node.data._expanded = true;\n    return this;\n  }\n\n  setHighlighted(nodeId) {\n    const attrs = this.getChartState();\n    const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n\n    if (!node) {\n      console.log(`ORG CHART - HIGHLIGHT - Node with id (${nodeId})  not found in the tree`);\n      return this;\n    }\n\n    node.data._highlighted = true;\n    node.data._expanded = true;\n    node.data._centered = true;\n    return this;\n  }\n\n  setUpToTheRootHighlighted(nodeId) {\n    const attrs = this.getChartState();\n    const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n\n    if (!node) {\n      console.log(`ORG CHART - HIGHLIGHTROOT - Node with id (${nodeId}) not found in the tree`);\n      return this;\n    }\n\n    node.data._upToTheRootHighlighted = true;\n    node.data._expanded = true;\n    node.ancestors().forEach(d => d.data._upToTheRootHighlighted = true);\n    return this;\n  }\n\n  clearHighlighting() {\n    const attrs = this.getChartState();\n    attrs.allNodes.forEach(d => {\n      d.data._highlighted = false;\n      d.data._upToTheRootHighlighted = false;\n    });\n    this.update(attrs.root);\n  } // It can take selector which would go fullscreen\n\n\n  fullscreen(elem) {\n    const attrs = this.getChartState();\n    const el = d3.select(elem || attrs.container).node();\n    d3.select(document).on('fullscreenchange.' + attrs.id, function (d) {\n      const fsElement = document.fullscreenElement || document.mozFullscreenElement || document.webkitFullscreenElement;\n\n      if (fsElement == el) {\n        setTimeout(d => {\n          attrs.svg.attr('height', window.innerHeight - 40);\n        }, 500);\n      } else {\n        attrs.svg.attr('height', attrs.svgHeight);\n      }\n    });\n\n    if (el.requestFullscreen) {\n      el.requestFullscreen();\n    } else if (el.mozRequestFullScreen) {\n      el.mozRequestFullScreen();\n    } else if (el.webkitRequestFullscreen) {\n      el.webkitRequestFullscreen();\n    } else if (el.msRequestFullscreen) {\n      el.msRequestFullscreen();\n    }\n  } // Zoom in exposed method\n\n\n  zoomIn() {\n    const {\n      svg,\n      zoomBehavior\n    } = this.getChartState();\n    svg.transition().call(zoomBehavior.scaleBy, 1.3);\n  } // Zoom out exposed method\n\n\n  zoomOut() {\n    const {\n      svg,\n      zoomBehavior\n    } = this.getChartState();\n    svg.transition().call(zoomBehavior.scaleBy, 0.78);\n  }\n\n  toDataURL(url, callback) {\n    var xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        callback(reader.result);\n      };\n\n      reader.readAsDataURL(xhr.response);\n    };\n\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n  }\n\n  exportImg() {\n    let {\n      full = false,\n      scale = 3,\n      onLoad = d => d,\n      save = true\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const that = this;\n    const attrs = this.getChartState();\n    const {\n      svg,\n      root,\n      allNodes\n    } = attrs;\n    let count = 0;\n    const selection = svg.selectAll('img');\n    let total = selection.size();\n    selection.each(function () {\n      that.toDataURL(this.src, dataUrl => {\n        this.src = dataUrl;\n\n        if (++count == total) {\n          that.downloadImage({\n            node: svg.node(),\n            scale,\n            isSvg: false,\n            onAlreadySerialized: d => {\n              that.update(root);\n            },\n            onLoad: onLoad,\n            save\n          });\n        }\n      });\n    });\n  }\n\n  exportSvg() {\n    const {\n      svg\n    } = this.getChartState();\n    this.downloadImage({\n      node: svg.node(),\n      scale: 3,\n      isSvg: true\n    });\n    return this;\n  }\n\n  expandAll() {\n    const {\n      allNodes,\n      root\n    } = this.getChartState();\n    allNodes.forEach(d => d.data._expanded = true);\n    this.render();\n    return this;\n  }\n\n  downloadImage(_ref45) {\n    let {\n      node,\n      scale = 2,\n      isSvg = false,\n      save = true,\n      onAlreadySerialized = d => {},\n      onLoad = d => {}\n    } = _ref45;\n    // Retrieve svg node\n    const svgNode = node;\n\n    if (isSvg) {\n      let source = serializeString(svgNode); //add xml declaration\n\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source; //convert svg source to URI data scheme.\n\n      var url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n      saveAs(url, \"graph.svg\");\n      onAlreadySerialized();\n      return;\n    } // Get image quality index (basically,  index you can zoom in)\n\n\n    const quality = scale; // Create image\n\n    const image = document.createElement('img');\n\n    image.onload = function () {\n      // Create image canvas\n      const canvas = document.createElement('canvas'); // Set width and height based on SVG node\n\n      const rect = svgNode.getBoundingClientRect();\n      canvas.width = rect.width * quality;\n      canvas.height = rect.height * quality; // Draw background\n\n      const context = canvas.getContext('2d');\n      context.fillStyle = '#FAFAFA';\n      context.fillRect(0, 0, rect.width * quality, rect.height * quality);\n      context.drawImage(image, 0, 0, rect.width * quality, rect.height * quality); // Set some image metadata\n\n      let dt = canvas.toDataURL('image/png');\n\n      if (onLoad) {\n        onLoad(dt);\n      }\n\n      if (save) {\n        // Invoke saving function\n        saveAs(dt, 'graph.png');\n      }\n    };\n\n    var url = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(serializeString(svgNode));\n    onAlreadySerialized();\n    image.src = url; // URL.createObjectURL(blob);\n    // This function invokes save window\n\n    function saveAs(uri, filename) {\n      // create link\n      var link = document.createElement('a');\n\n      if (typeof link.download === 'string') {\n        document.body.appendChild(link); // Firefox requires the link to be in the body\n\n        link.download = filename;\n        link.href = uri;\n        link.click();\n        document.body.removeChild(link); // remove the link when done\n      } else {\n        location.replace(uri);\n      }\n    } // This function serializes SVG and sets all necessary attributes\n\n\n    function serializeString(svg) {\n      const xmlns = 'http://www.w3.org/2000/xmlns/';\n      const xlinkns = 'http://www.w3.org/1999/xlink';\n      const svgns = 'http://www.w3.org/2000/svg';\n      svg = svg.cloneNode(true);\n      const fragment = window.location.href + '#';\n      const walker = document.createTreeWalker(svg, NodeFilter.SHOW_ELEMENT, null, false);\n\n      while (walker.nextNode()) {\n        for (const attr of walker.currentNode.attributes) {\n          if (attr.value.includes(fragment)) {\n            attr.value = attr.value.replace(fragment, '#');\n          }\n        }\n      }\n\n      svg.setAttributeNS(xmlns, 'xmlns', svgns);\n      svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns);\n      const serializer = new XMLSerializer();\n      const string = serializer.serializeToString(svg);\n      return string;\n    }\n  } // Calculate what size text will take\n\n\n  getTextWidth(text) {\n    let {\n      fontSize = 14,\n      fontWeight = 400,\n      defaultFont = \"Helvetice\",\n      ctx\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    ctx.font = `${fontWeight || ''} ${fontSize}px ${defaultFont} `;\n    const measurement = ctx.measureText(text);\n    return measurement.width;\n  }\n\n}","map":{"version":3,"names":["selection","select","max","min","sum","cumsum","tree","stratify","zoom","zoomIdentity","flextree","linkHorizontal","group","rollup","d3","OrgChart","constructor","attrs","id","Math","floor","random","firstDraw","svgWidth","svgHeight","window","innerHeight","container","defaultTextFill","defaultFont","ctx","document","createElement","getContext","data","duration","initialZoom","setActiveNodeCentered","compact","rootMargin","nodeDefaultBackground","connections","lastTransform","x","y","k","nodeId","d","parentNodeId","parentId","backgroundColor","zoomBehavior","defs","state","visibleConnections","map","conn","labelWidth","getTextWidth","label","fontSize","from","to","_source","_target","join","connectionsUpdate","i","arr","attr","linkUpdate","_upToTheRootHighlighted","raise","nodeUpdate","_highlighted","nodeWidth","d3Node","nodeHeight","siblingsMargin","childrenMargin","neightbourMargin","n1","n2","compactMarginPair","compactMarginBetween","onNodeClick","linkGroupArc","nodeContent","layout","buttonContent","node","icons","children","layoutBindings","width","height","compactEven","firstCompactNode","flexCompactDim","parent","root","centerY","scale","centerX","sizeColumn","sizeRow","reverse","slice","result","hdiagonal","bind","compactViewIndex","diagonal","chartHeight","chartWidth","getChartState","Object","keys","forEach","key","_","arguments","length","initializeEnterExitUpdatePattern","prototype","patternify","params","selector","elementTag","tag","selectAll","exit","remove","enter","append","merge","getNodeChildren","nodeStore","_children","push","setZoomFactor","zoomLevel","calc","zoomTransform","render","console","log","containerRect","getBoundingClientRect","behaviors","on","event","zoomed","scaleExtent","flexTreeLayout","nodeSize","nodeFlexSize","spacing","nodeA","nodeB","setLayouts","expandNodesFirst","svg","style","call","chart","centerG","linksWrapper","nodesWrapper","connectionsWrapper","defsWrapper","centerTransform","update","addNode","obj","nodeFound","allNodes","filter","parentFound","_centered","_expanded","updateNodesState","removeNode","descendants","_filteredOut","_filtered","calculateCompactFlexDimensions","eachBefore","firstCompact","compactChildren","child","row","evenMaxColumnDimension","compactDimension","oddMaxColumnDimension","columnSize","rowsMap","reducedGroup","rowSize","v","calculateCompactFlexPositions","fch","offsetX","abs","cumSum","x0","y0","treeData","nodes","links","swap","allNodesMap","Map","visibleNodesMap","connection","source","get","target","has","defsString","existingString","html","linkSelection","linkEnter","insert","xo","linkJoinX","yo","linkJoinY","o","each","transition","n","compactLinkMidX","compactLinkMidY","linkX","linkY","p","linkParentX","linkParentY","m","linkCompactXStart","linkCompactYStart","linkExit","connectionsSel","connEnter","connUpdate","xs","ys","xt","yt","connExit","nodesSelection","nodeEnter","xj","nodeJoinX","yj","nodeJoinY","srcElement","classList","includes","fo","restyleForeignObjectElements","nodeButtonGroups","onButtonClick","nodeFo","nodeUpdateTransform","buttonX","buttonY","text","isEdge","nodeExitTransition","ex","ey","centeredNode","centeredNodes","_centeredWithDescendants","fit","animate","navigator","userAgent","s","t","mx","my","xrvs","yrvs","rdef","r","h","w","path","setExpansionFlagToChildren","flag","expandSomeNodes","ch","assign","_directSubordinates","_totalSubordinates","expand","collapse","transform","zoomTreeBounds","x1","y1","scaleVal","identity","translate","minX","nodeLeftX","maxX","nodeRightX","minY","nodeTopY","maxY","nodeBottomY","setExpanded","expandedFlag","setCentered","setHighlighted","setUpToTheRootHighlighted","ancestors","clearHighlighting","fullscreen","elem","el","fsElement","fullscreenElement","mozFullscreenElement","webkitFullscreenElement","setTimeout","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","zoomIn","scaleBy","zoomOut","toDataURL","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","response","open","responseType","send","exportImg","full","onLoad","save","that","count","total","size","src","dataUrl","downloadImage","isSvg","onAlreadySerialized","exportSvg","expandAll","svgNode","serializeString","encodeURIComponent","saveAs","quality","image","canvas","rect","context","fillStyle","fillRect","drawImage","dt","uri","filename","link","download","body","appendChild","href","click","removeChild","location","replace","xmlns","xlinkns","svgns","cloneNode","fragment","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","value","setAttributeNS","serializer","XMLSerializer","string","serializeToString","fontWeight","font","measurement","measureText"],"sources":["/Users/marcomazzucato/Desktop/org-chart/node_modules/d3-org-chart/src/d3-org-chart.js"],"sourcesContent":["import { selection, select } from \"d3-selection\";\nimport { max, min, sum, cumsum } from \"d3-array\";\nimport { tree, stratify } from \"d3-hierarchy\";\nimport { zoom, zoomIdentity } from \"d3-zoom\";\nimport { flextree } from 'd3-flextree';\nimport { linkHorizontal } from 'd3-shape';\nimport { group, rollup } from 'd3-array'\n\nconst d3 = {\n    selection,\n    select,\n    max,\n    min,\n    sum,\n    cumsum,\n    tree,\n    stratify,\n    zoom,\n    zoomIdentity,\n    linkHorizontal,\n    group,\n    rollup\n}\nexport class OrgChart {\n    constructor() {\n        // Exposed variables \n        const attrs = {\n            id: `ID${Math.floor(Math.random() * 1000000)}`, // Id for event handlings\n            firstDraw: true,\n            svgWidth: 800,\n            svgHeight: window.innerHeight - 100,\n            container: \"body\",\n            defaultTextFill: \"#2C3E50\",\n            defaultFont: \"Helvetica\",\n            ctx: document.createElement('canvas').getContext('2d'),\n            data: null,\n            duration: 400,\n            initialZoom: 1,\n            setActiveNodeCentered: true,\n            compact: true,\n            rootMargin: 40,\n            nodeDefaultBackground: 'none',\n            connections: [],\n            lastTransform: { x: 0, y: 0, k: 1 },\n            nodeId: d => d.nodeId || d.id,\n            parentNodeId: d => d.parentNodeId || d.parentId,\n            backgroundColor:'none',\n            zoomBehavior: null,\n            defs: function (state, visibleConnections) {\n                return `<defs>\n                    ${visibleConnections.map(conn => {\n                    const labelWidth = this.getTextWidth(conn.label, { ctx: state.ctx, fontSize: 2, defaultFont: state.defaultFont });\n                    return `\n                       <marker id=\"${conn.from + \"_\" + conn.to}\" refX=\"${conn._source.x < conn._target.x ? -7 : 7}\" refY=\"5\" markerWidth=\"500\"  markerHeight=\"500\"  orient=\"${conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\"}\" >\n                       <rect rx=0.5 width=${conn.label ? labelWidth + 3 : 0} height=3 y=1  fill=\"#152785\"></rect>\n                       <text font-size=\"2px\" x=1 fill=\"white\" y=3>${conn.label||''}</text>\n                       </marker>\n\n                       <marker id=\"arrow-${conn.from + \"_\" + conn.to}\"  markerWidth=\"500\"  markerHeight=\"500\"  refY=\"2\"  refX=\"1\" orient=\"${conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\"}\" >\n                       <path transform=\"translate(0)\" d='M0,0 V4 L2,2 Z' fill='#152785' />\n                       </marker>\n                    `}).join(\"\")}\n                    </defs>\n                    }`},\n            connectionsUpdate: function (d, i, arr) {\n                d3.select(this)\n                    .attr(\"stroke\", d => '#152785')\n                    .attr('stroke-linecap', 'round')\n                    .attr(\"stroke-width\", d => '5')\n                    .attr('pointer-events', 'none')\n                    .attr(\"marker-start\", d => `url(#${d.from + \"_\" + d.to})`)\n                    .attr(\"marker-end\", d => `url(#arrow-${d.from + \"_\" + d.to})`)\n            },\n            linkUpdate: function (d, i, arr) {\n                d3.select(this)\n                    .attr(\"stroke\", d => d.data._upToTheRootHighlighted ? '#152785' : 'lightgray')\n                    .attr(\"stroke-width\", d => d.data._upToTheRootHighlighted ? 5 : 2)\n\n                if (d.data._upToTheRootHighlighted) {\n                    d3.select(this).raise()\n                }\n            },\n            nodeUpdate: function (d, i, arr) {\n                d3.select(this)\n                    .select('.node-rect')\n                    .attr(\"stroke\", d => d.data._highlighted || d.data._upToTheRootHighlighted ? '#152785' : 'none')\n                    .attr(\"stroke-width\", d.data._highlighted || d.data._upToTheRootHighlighted ? 10 : 1)\n            },\n\n            nodeWidth: d3Node => 250,\n            nodeHeight: d => 150,\n            siblingsMargin: d3Node => 20,\n            childrenMargin: d => 60,\n            neightbourMargin: (n1, n2) => 80,\n            compactMarginPair: d => 100,\n            compactMarginBetween: (d3Node => 20),\n            onNodeClick: (d) => d,\n            linkGroupArc: d3.linkHorizontal().x(d => d.x).y(d => d.y),\n            // ({ source, target }) => {\n            //     return \n            //     return `M ${source.x} , ${source.y} Q ${(source.x + target.x) / 2 + 100},${source.y-100}  ${target.x}, ${target.y}`;\n            // },\n            nodeContent: d => `<div style=\"padding:5px;font-size:10px;\">Sample Node(id=${d.id}), override using <br/> <br/> \n            <code>chart<br/>\n            &nbsp;.nodeContent({data}=>{ <br/>\n             &nbsp;&nbsp;&nbsp;&nbsp;return '' // Custom HTML <br/>\n             &nbsp;})</code>\n             <br/> <br/>\n             Or check different <a href=\"https://github.com/bumbeishvili/org-chart#jump-to-examples\" target=\"_blank\">layout examples</a>\n             \n             </div>`,\n            layout: \"top\",// top, left,right, bottom\n            buttonContent: ({ node, state }) => {\n                const icons = {\n                    \"left\": d => d ? `<div style=\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\">‹</div>` : `<div style=\"margin-top:-10px;font-size:25px;height:23px\">›</div>`,\n                    \"bottom\": d => d ? `<div style=\"margin-top:-20px;font-size:25px\">ˬ</div>` : `<div style=\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\">ˆ</div>`,\n                    \"right\": d => d ? `<div style=\"margin-top:-10px;font-size:25px;height:23px\">›</div>` : `<div style=\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\">‹</div>`,\n                    \"top\": d => d ? `<div style=\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\">ˆ</div>` : `<div style=\"margin-top:-20px;font-size:25px\">ˬ</div>`,\n                }\n                return `<div style=\"border-radius:3px;padding:3px;font-size:10px;margin:auto auto;background-color:lightgray\"> ${icons[state.layout](node.children)}  </div>`\n            },\n            layoutBindings: {\n                \"left\": {\n                    \"nodeLeftX\": node => 0,\n                    \"nodeRightX\": node => node.width,\n                    \"nodeTopY\": node => - node.height / 2,\n                    \"nodeBottomY\": node => node.height / 2,\n                    \"nodeJoinX\": node => node.x + node.width,\n                    \"nodeJoinY\": node => node.y - node.height / 2,\n                    \"linkJoinX\": node => node.x + node.width,\n                    \"linkJoinY\": node => node.y,\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"linkCompactXStart\": node => node.x + node.width / 2,//node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y + (node.compactEven ? node.height / 2 : -node.height / 2),\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x,// node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": (node, state) => node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"linkParentX\": node => node.parent.x + node.parent.width,\n                    \"linkParentY\": node => node.parent.y,\n                    \"buttonX\": node => node.width,\n                    \"buttonY\": node => node.height / 2,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX }) => `translate(${rootMargin},${centerY}) scale(${scale})`,\n                    \"compactDimension\": {\n                        sizeColumn: node => node.height,\n                        sizeRow: node => node.width,\n                        reverse: arr => arr.slice().reverse()\n                    },\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [height + siblingsMargin, width + childrenMargin]\n                    },\n                    \"zoomTransform\": ({ centerY, scale }) => `translate(${0},${centerY}) scale(${scale})`,\n                    \"diagonal\": this.hdiagonal.bind(this),\n                    \"swap\": d => { const x = d.x; d.x = d.y; d.y = x; },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x},${y - height / 2})`,\n                },\n                \"top\": {\n                    \"nodeLeftX\": node => -node.width / 2,\n                    \"nodeRightX\": node => node.width / 2,\n                    \"nodeTopY\": node => 0,\n                    \"nodeBottomY\": node => node.height,\n                    \"nodeJoinX\": node => node.x - node.width / 2,\n                    \"nodeJoinY\": node => node.y + node.height,\n                    \"linkJoinX\": node => node.x,\n                    \"linkJoinY\": node => node.y + node.height,\n                    \"linkCompactXStart\": node => node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y + node.height / 2,\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": node => node.firstCompactNode.y,\n                    \"compactDimension\": {\n                        sizeColumn: node => node.width,\n                        sizeRow: node => node.height,\n                        reverse: arr => arr,\n                    },\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"linkParentX\": node => node.parent.x,\n                    \"linkParentY\": node => node.parent.y + node.parent.height,\n                    \"buttonX\": node => node.width / 2,\n                    \"buttonY\": node => node.height,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX }) => `translate(${centerX},${rootMargin}) scale(${scale})`,\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node, compactViewIndex }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [width + siblingsMargin, height + childrenMargin];\n                    },\n                    \"zoomTransform\": ({ centerX, scale }) => `translate(${centerX},0}) scale(${scale})`,\n                    \"diagonal\": this.diagonal.bind(this),\n                    \"swap\": d => { },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x - width / 2},${y})`,\n\n                },\n                \"bottom\": {\n                    \"nodeLeftX\": node => -node.width / 2,\n                    \"nodeRightX\": node => node.width / 2,\n                    \"nodeTopY\": node => -node.height,\n                    \"nodeBottomY\": node => 0,\n                    \"nodeJoinX\": node => node.x - node.width / 2,\n                    \"nodeJoinY\": node => node.y - node.height - node.height,\n                    \"linkJoinX\": node => node.x,\n                    \"linkJoinY\": node => node.y - node.height,\n                    \"linkCompactXStart\": node => node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y - node.height / 2,\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": node => node.firstCompactNode.y,\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"compactDimension\": {\n                        sizeColumn: node => node.width,\n                        sizeRow: node => node.height,\n                        reverse: arr => arr,\n                    },\n                    \"linkParentX\": node => node.parent.x,\n                    \"linkParentY\": node => node.parent.y - node.parent.height,\n                    \"buttonX\": node => node.width / 2,\n                    \"buttonY\": node => 0,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX, chartHeight }) => `translate(${centerX},${chartHeight - rootMargin}) scale(${scale})`,\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [width + siblingsMargin, height + childrenMargin]\n                    },\n                    \"zoomTransform\": ({ centerX, scale }) => `translate(${centerX},0}) scale(${scale})`,\n                    \"diagonal\": this.diagonal.bind(this),\n                    \"swap\": d => { d.y = -d.y; },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x - width / 2},${y - height})`,\n                },\n                \"right\": {\n                    \"nodeLeftX\": node => -node.width,\n                    \"nodeRightX\": node => 0,\n                    \"nodeTopY\": node => - node.height / 2,\n                    \"nodeBottomY\": node => node.height / 2,\n                    \"nodeJoinX\": node => node.x - node.width - node.width,\n                    \"nodeJoinY\": node => node.y - node.height / 2,\n                    \"linkJoinX\": node => node.x - node.width,\n                    \"linkJoinY\": node => node.y,\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"linkParentX\": node => node.parent.x - node.parent.width,\n                    \"linkParentY\": node => node.parent.y,\n                    \"buttonX\": node => 0,\n                    \"buttonY\": node => node.height / 2,\n                    \"linkCompactXStart\": node => node.x - node.width / 2,//node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y + (node.compactEven ? node.height / 2 : -node.height / 2),\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x,// node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": (node, state) => node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX, chartWidth }) => `translate(${chartWidth - rootMargin},${centerY}) scale(${scale})`,\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [height + siblingsMargin, width + childrenMargin]\n                    },\n                    \"compactDimension\": {\n                        sizeColumn: node => node.height,\n                        sizeRow: node => node.width,\n                        reverse: arr => arr.slice().reverse()\n                    },\n                    \"zoomTransform\": ({ centerY, scale }) => `translate(${0},${centerY}) scale(${scale})`,\n                    \"diagonal\": this.hdiagonal.bind(this),\n                    \"swap\": d => { const x = d.x; d.x = -d.y; d.y = x; },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x - width},${y - height / 2})`,\n                },\n            }\n        };\n\n        this.getChartState = () => attrs;\n\n        // Dynamically set getter and setter functions for Chart class\n        Object.keys(attrs).forEach((key) => {\n            //@ts-ignore\n            this[key] = function (_) {\n                if (!arguments.length) {\n                    return attrs[key];\n                } else {\n                    attrs[key] = _;\n                }\n                return this;\n            };\n        });\n\n        this.initializeEnterExitUpdatePattern();\n    }\n\n    initializeEnterExitUpdatePattern() {\n        d3.selection.prototype.patternify = function (params) {\n            var container = this;\n            var selector = params.selector;\n            var elementTag = params.tag;\n            var data = params.data || [selector];\n\n            // Pattern in action\n            var selection = container.selectAll(\".\" + selector).data(data, (d, i) => {\n                if (typeof d === \"object\") {\n                    if (d.id) { return d.id; }\n                }\n                return i;\n            });\n            selection.exit().remove();\n            selection = selection.enter().append(elementTag).merge(selection);\n            selection.attr(\"class\", selector);\n            return selection;\n        };\n    }\n\n    // This method retrieves passed node's children IDs (including node)\n    getNodeChildren({ data, children, _children }, nodeStore) {\n        // Store current node ID\n        nodeStore.push(data);\n\n        // Loop over children and recursively store descendants id (expanded nodes)\n        if (children) {\n            children.forEach((d) => {\n                this.getNodeChildren(d, nodeStore);\n            });\n        }\n\n        // Loop over _children and recursively store descendants id (collapsed nodes)\n        if (_children) {\n            _children.forEach((d) => {\n                this.getNodeChildren(d, nodeStore);\n            });\n        }\n\n        // Return result\n        return nodeStore;\n    }\n\n    // This method can be invoked via chart.setZoomFactor API, it zooms to particulat scale\n    setZoomFactor(zoomLevel) {\n        const attrs = this.getChartState();\n        const calc = attrs.calc;\n\n        // Store passed zoom level\n        attrs.initialZoom = zoomLevel;\n\n        return attrs.layoutBindings[attrs.layout].zoomTransform({\n            centerX: calc.centerX,\n            centerY: calc.centerY,\n            scale: attrs.initialZoom,\n        });\n\n    }\n\n    render() {\n\n        //InnerFunctions which will update visuals\n        const attrs = this.getChartState();\n        if (!attrs.data || attrs.data.length == 0) {\n            console.log('ORG CHART - Data is empty')\n            return this;\n        }\n\n        //Drawing containers\n        const container = d3.select(attrs.container);\n        const containerRect = container.node().getBoundingClientRect();\n        if (containerRect.width > 0) attrs.svgWidth = containerRect.width;\n\n        //Calculated properties\n        const calc = {\n            id: `ID${Math.floor(Math.random() * 1000000)}`, // id for event handlings,\n            chartWidth: attrs.svgWidth,\n            chartHeight: attrs.svgHeight\n        };\n        attrs.calc = calc;\n\n        // Calculate max node depth (it's needed for layout heights calculation)\n        calc.centerX = calc.chartWidth / 2;\n        calc.centerY = calc.chartHeight / 2;\n\n        // ******************* BEHAVIORS  **********************\n        if (attrs.firstDraw) {\n            const behaviors = {\n                zoom: null\n            };\n\n            // Get zooming function\n            behaviors.zoom = d3.zoom().on(\"zoom\", (event, d) => this.zoomed(event, d)).scaleExtent([0.001, 20])\n            attrs.zoomBehavior = behaviors.zoom;\n        }\n\n        //****************** ROOT node work ************************\n\n        attrs.flexTreeLayout = flextree({\n            nodeSize: node => {\n                const width = attrs.nodeWidth(node);;\n                const height = attrs.nodeHeight(node);\n                const siblingsMargin = attrs.siblingsMargin(node)\n                const childrenMargin = attrs.childrenMargin(node);\n                return attrs.layoutBindings[attrs.layout].nodeFlexSize({\n                    state: attrs,\n                    node: node,\n                    width,\n                    height,\n                    siblingsMargin,\n                    childrenMargin\n                });\n            }\n        })\n            .spacing((nodeA, nodeB) => nodeA.parent == nodeB.parent ? 0 : attrs.neightbourMargin(nodeA, nodeB));\n\n        this.setLayouts({ expandNodesFirst: false });\n\n        // *************************  DRAWING **************************\n        //Add svg\n        const svg = container\n            .patternify({\n                tag: \"svg\",\n                selector: \"svg-chart-container\"\n            })\n            .style('background-color',attrs.backgroundColor)\n            .attr(\"width\", attrs.svgWidth)\n            .attr(\"height\", attrs.svgHeight)\n            .attr(\"font-family\", attrs.defaultFont)\n\n        if (attrs.firstDraw) {\n            svg.call(attrs.zoomBehavior)\n                .on(\"dblclick.zoom\", null)\n                .attr(\"cursor\", \"move\")\n        }\n\n        attrs.svg = svg;\n\n        //Add container g element\n        const chart = svg\n            .patternify({\n                tag: \"g\",\n                selector: \"chart\"\n            })\n\n        // Add one more container g element, for better positioning controls\n        attrs.centerG = chart\n            .patternify({\n                tag: \"g\",\n                selector: \"center-group\"\n            })\n\n        attrs.linksWrapper = attrs.centerG.patternify({\n            tag: \"g\",\n            selector: \"links-wrapper\"\n        })\n\n        attrs.nodesWrapper = attrs.centerG.patternify({\n            tag: \"g\",\n            selector: \"nodes-wrapper\"\n        })\n\n        attrs.connectionsWrapper = attrs.centerG.patternify({\n            tag: \"g\",\n            selector: \"connections-wrapper\"\n        })\n\n        attrs.defsWrapper = svg.patternify({\n            tag: \"g\",\n            selector: \"defs-wrapper\"\n        })\n\n        if (attrs.firstDraw) {\n            attrs.centerG.attr(\"transform\", () => {\n                return attrs.layoutBindings[attrs.layout].centerTransform({\n                    centerX: calc.centerX,\n                    centerY: calc.centerY,\n                    scale: attrs.initialZoom,\n                    rootMargin: attrs.rootMargin,\n                    root: attrs.root,\n                    chartHeight: calc.chartHeight,\n                    chartWidth: calc.chartWidth\n                })\n            });\n        }\n\n        attrs.chart = chart;\n\n        // Display tree contenrs\n        this.update(attrs.root);\n\n\n        //#########################################  UTIL FUNCS ##################################\n        // This function restyles foreign object elements ()\n\n        d3.select(window).on(`resize.${attrs.id}`, () => {\n            const containerRect = d3.select(attrs.container).node().getBoundingClientRect();\n            attrs.svg.attr('width', containerRect.width)\n        });\n\n        if (attrs.firstDraw) {\n            attrs.firstDraw = false;\n        }\n\n        return this;\n    }\n\n    // This function can be invoked via chart.addNode API, and it adds node in tree at runtime\n    addNode(obj) {\n        const attrs = this.getChartState();\n        const nodeFound = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) === attrs.nodeId(obj))[0];\n        const parentFound = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) === attrs.parentNodeId(obj))[0];\n        if (nodeFound) {\n            console.log(`ORG CHART - ADD - Node with id \"${attrs.nodeId(obj)}\" already exists in tree`)\n            return this;\n        }\n        if (!parentFound) {\n            console.log(`ORG CHART - ADD - Parent node with id \"${attrs.parentNodeId(obj)}\" not found in the tree`)\n            return this;\n        }\n        if (obj._centered && !obj._expanded) obj._expanded = true;\n        attrs.data.push(obj);\n\n        // Update state of nodes and redraw graph\n        this.updateNodesState();\n\n        return this;\n    }\n\n    // This function can be invoked via chart.removeNode API, and it removes node from tree at runtime\n    removeNode(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) == nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - REMOVE - Node with id \"${nodeId}\" not found in the tree`);\n            return this;\n        }\n\n        // Remove all node childs\n        // Retrieve all children nodes ids (including current node itself)\n        node.descendants()\n            .forEach(d => d.data._filteredOut = true)\n\n        const descendants = this.getNodeChildren(node, [], attrs.nodeId);\n        descendants.forEach(d => d._filtered = true)\n\n        // Filter out retrieved nodes and reassign data\n        attrs.data = attrs.data.filter(d => !d._filtered);\n\n        const updateNodesState = this.updateNodesState.bind(this);\n        // Update state of nodes and redraw graph\n        updateNodesState();\n\n        return this;\n    }\n\n    calculateCompactFlexDimensions(root) {\n        const attrs = this.getChartState();\n        root.eachBefore(node => {\n            node.firstCompact = null;\n            node.compactEven = null;\n            node.flexCompactDim = null;\n            node.firstCompactNode = null;\n        })\n        root.eachBefore(node => {\n            if (node.children && node.children.length > 1) {\n                const compactChildren = node.children.filter(d => !d.children);\n                if (compactChildren.length < 2) return;\n                compactChildren.forEach((child, i) => {\n                    if (!i) child.firstCompact = true;\n                    if (i % 2) child.compactEven = false;\n                    else child.compactEven = true;\n                    child.row = Math.floor(i / 2);\n                })\n                const evenMaxColumnDimension = d3.max(compactChildren.filter(d => d.compactEven), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n                const oddMaxColumnDimension = d3.max(compactChildren.filter(d => !d.compactEven), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n                const columnSize = Math.max(evenMaxColumnDimension, oddMaxColumnDimension) * 2;\n                const rowsMap = d3.rollup(compactChildren, reducedGroup => d3.max(reducedGroup, d => attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d) + attrs.compactMarginBetween(d)), d => d.row);\n                const rowSize = d3.sum([...rowsMap].map(v => v[1]))\n                compactChildren.forEach(node => {\n                    node.firstCompactNode = compactChildren[0];\n                    if (node.firstCompact) {\n                        node.flexCompactDim = [\n                            columnSize + attrs.compactMarginPair(node),\n                            rowSize - attrs.compactMarginBetween(node)\n                        ];\n                    } else {\n                        node.flexCompactDim = [0, 0];\n                    }\n                })\n                node.flexCompactDim = null;\n            }\n        })\n    }\n\n    calculateCompactFlexPositions(root) {\n        const attrs = this.getChartState();\n        root.eachBefore(node => {\n            if (node.children) {\n                const compactChildren = node.children.filter(d => d.flexCompactDim);\n                const fch = compactChildren[0];\n                if (!fch) return;\n                compactChildren.forEach((child, i, arr) => {\n                    if (i == 0) fch.x -= fch.flexCompactDim[0] / 2;\n                    if (i & i % 2 - 1) child.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(child) / 4;\n                    else if (i) child.x = fch.x + fch.flexCompactDim[0] * 0.75 + attrs.compactMarginPair(child) / 4;\n                })\n                const centerX = fch.x + fch.flexCompactDim[0] * 0.5;\n                fch.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(fch) / 4;\n                const offsetX = node.x - centerX;\n                if (Math.abs(offsetX) < 10) {\n                    compactChildren.forEach(d => d.x += offsetX);\n                }\n\n                const rowsMap = d3.rollup(compactChildren, reducedGroup => d3.max(reducedGroup, d => attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d)), d => d.row);\n                const cumSum = d3.cumsum([...rowsMap].map(d => d[1] + attrs.compactMarginBetween(d)));\n                compactChildren\n                    .forEach((node, i) => {\n                        if (node.row) {\n                            node.y = fch.y + cumSum[node.row - 1]\n                        } else {\n                            node.y = fch.y;\n                        }\n                    })\n\n            }\n        })\n    }\n\n    // This function basically redraws visible graph, based on nodes state\n    update({ x0, y0, x, y, width, height }) {\n        const attrs = this.getChartState();\n        const calc = attrs.calc;\n\n\n        if (attrs.compact) {\n            this.calculateCompactFlexDimensions(attrs.root);\n        }\n\n        //  Assigns the x and y position for the nodes\n        const treeData = attrs.flexTreeLayout(attrs.root);\n\n        // Reassigns the x and y position for the based on the compact layout\n        if (attrs.compact) {\n            this.calculateCompactFlexPositions(attrs.root);\n        }\n\n        const nodes = treeData.descendants();\n\n        // console.table(nodes.map(d => ({ x: d.x, y: d.y, width: d.width, height: d.height, flexCompactDim: d.flexCompactDim + \"\" })))\n\n        // Get all links\n        const links = treeData.descendants().slice(1);\n        nodes.forEach(attrs.layoutBindings[attrs.layout].swap)\n\n        // Connections\n        const connections = attrs.connections;\n        const allNodesMap = new Map(attrs.allNodes.map(d => [attrs.nodeId(d.data), d]));\n        const visibleNodesMap = new Map(nodes.map(d => [attrs.nodeId(d.data), d]));\n        connections.forEach(connection => {\n            const source = allNodesMap.get(connection.from);\n            const target = allNodesMap.get(connection.to);\n            connection._source = source;\n            connection._target = target;\n        })\n        const visibleConnections = connections.filter(d => visibleNodesMap.has(d.from) && visibleNodesMap.has(d.to));\n        const defsString = attrs.defs.bind(this)(attrs, visibleConnections);\n        const existingString = attrs.defsWrapper.html();\n        if (defsString !== existingString) {\n            attrs.defsWrapper.html(defsString)\n        }\n\n        // --------------------------  LINKS ----------------------\n        // Get links selection\n        const linkSelection = attrs.linksWrapper\n            .selectAll(\"path.link\")\n            .data(links, (d) => attrs.nodeId(d.data));\n\n        // Enter any new links at the parent's previous position.\n        const linkEnter = linkSelection\n            .enter()\n            .insert(\"path\", \"g\")\n            .attr(\"class\", \"link\")\n            .attr(\"d\", (d) => {\n                const xo = attrs.layoutBindings[attrs.layout].linkJoinX({ x: x0, y: y0, width, height });\n                const yo = attrs.layoutBindings[attrs.layout].linkJoinY({ x: x0, y: y0, width, height });\n                const o = { x: xo, y: yo };\n                return attrs.layoutBindings[attrs.layout].diagonal(o, o, o);\n            });\n\n        // Get links update selection\n        const linkUpdate = linkEnter.merge(linkSelection);\n\n        // Styling links\n        linkUpdate\n            .attr(\"fill\", \"none\")\n\n        // Allow external modifications\n        linkUpdate.each(attrs.linkUpdate);\n\n        // Transition back to the parent element position\n        linkUpdate\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"d\", (d) => {\n                const n = attrs.compact && d.flexCompactDim ?\n                    {\n                        x: attrs.layoutBindings[attrs.layout].compactLinkMidX(d, attrs),\n                        y: attrs.layoutBindings[attrs.layout].compactLinkMidY(d, attrs)\n                    } :\n                    {\n                        x: attrs.layoutBindings[attrs.layout].linkX(d),\n                        y: attrs.layoutBindings[attrs.layout].linkY(d)\n                    };\n\n                const p = {\n                    x: attrs.layoutBindings[attrs.layout].linkParentX(d),\n                    y: attrs.layoutBindings[attrs.layout].linkParentY(d),\n                };\n\n                const m = attrs.compact && d.flexCompactDim ? {\n                    x: attrs.layoutBindings[attrs.layout].linkCompactXStart(d),\n                    y: attrs.layoutBindings[attrs.layout].linkCompactYStart(d),\n                } : n;\n                return attrs.layoutBindings[attrs.layout].diagonal(n, p, m);\n            });\n\n        // Remove any  links which is exiting after animation\n        const linkExit = linkSelection\n            .exit()\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"d\", (d) => {\n                const xo = attrs.layoutBindings[attrs.layout].linkJoinX({ x, y, width, height });\n                const yo = attrs.layoutBindings[attrs.layout].linkJoinY({ x, y, width, height });\n                const o = { x: xo, y: yo };\n                return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n            })\n            .remove();\n\n\n        // --------------------------  CONNECTIONS ----------------------\n\n        const connectionsSel = attrs.connectionsWrapper\n            .selectAll(\"path.connection\")\n            .data(visibleConnections)\n\n        // Enter any new connections at the parent's previous position.\n        const connEnter = connectionsSel\n            .enter()\n            .insert(\"path\", \"g\")\n            .attr(\"class\", \"connection\")\n            .attr(\"d\", (d) => {\n                const xo = attrs.layoutBindings[attrs.layout].linkJoinX({ x: x0, y: y0, width, height });\n                const yo = attrs.layoutBindings[attrs.layout].linkJoinY({ x: x0, y: y0, width, height });\n                const o = { x: xo, y: yo };\n                return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n            });\n\n\n        // Get connections update selection\n        const connUpdate = connEnter.merge(connectionsSel);\n\n        // Styling connections\n        connUpdate.attr(\"fill\", \"none\")\n\n        // Transition back to the parent element position\n        connUpdate\n            .transition()\n            .duration(attrs.duration)\n            .attr('d', (d) => {\n                const xs = attrs.layoutBindings[attrs.layout].linkX({ x: d._source.x, y: d._source.y, width: d._source.width, height: d._source.height });\n                const ys = attrs.layoutBindings[attrs.layout].linkY({ x: d._source.x, y: d._source.y, width: d._source.width, height: d._source.height });\n                const xt = attrs.layoutBindings[attrs.layout].linkJoinX({ x: d._target.x, y: d._target.y, width: d._target.width, height: d._target.height });\n                const yt = attrs.layoutBindings[attrs.layout].linkJoinY({ x: d._target.x, y: d._target.y, width: d._target.width, height: d._target.height });\n                return attrs.linkGroupArc({ source: { x: xs, y: ys }, target: { x: xt, y: yt } })\n            })\n\n        // Allow external modifications\n        connUpdate.each(attrs.connectionsUpdate);\n\n        // Remove any  links which is exiting after animation\n        const connExit = connectionsSel\n            .exit()\n            .transition()\n            .duration(attrs.duration)\n            .attr('opacity', 0)\n            .remove();\n\n        // --------------------------  NODES ----------------------\n        // Get nodes selection\n        const nodesSelection = attrs.nodesWrapper\n            .selectAll(\"g.node\")\n            .data(nodes, ({ data }) => attrs.nodeId(data));\n\n        // Enter any new nodes at the parent's previous position.\n        const nodeEnter = nodesSelection\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"node\")\n            .attr(\"transform\", (d) => {\n                if (d == attrs.root) return `translate(${x0},${y0})`\n                const xj = attrs.layoutBindings[attrs.layout].nodeJoinX({ x: x0, y: y0, width, height });\n                const yj = attrs.layoutBindings[attrs.layout].nodeJoinY({ x: x0, y: y0, width, height });\n                return `translate(${xj},${yj})`\n            })\n            .attr(\"cursor\", \"pointer\")\n            .on(\"click\", (event, { data }) => {\n                if ([...event.srcElement.classList].includes(\"node-button-foreign-object\")) {\n                    return;\n                }\n                attrs.onNodeClick(attrs.nodeId(data));\n            });\n\n        // Add background rectangle for the nodes\n        nodeEnter\n            .patternify({\n                tag: \"rect\",\n                selector: \"node-rect\",\n                data: (d) => [d]\n            })\n\n        // Node update styles\n        const nodeUpdate = nodeEnter\n            .merge(nodesSelection)\n            .style(\"font\", \"12px sans-serif\");\n\n        // Add foreignObject element inside rectangle\n        const fo = nodeUpdate.patternify({\n            tag: \"foreignObject\",\n            selector: \"node-foreign-object\",\n            data: (d) => [d]\n        })\n            .style('overflow', 'visible')\n\n        // Add foreign object\n        fo.patternify({\n            tag: \"xhtml:div\",\n            selector: \"node-foreign-object-div\",\n            data: (d) => [d]\n        })\n\n        this.restyleForeignObjectElements();\n\n        // Add Node button circle's group (expand-collapse button)\n        const nodeButtonGroups = nodeEnter\n            .patternify({\n                tag: \"g\",\n                selector: \"node-button-g\",\n                data: (d) => [d]\n            })\n            .on(\"click\", (event, d) => this.onButtonClick(event, d));\n\n        // Add expand collapse button content\n        const nodeFo = nodeButtonGroups\n            .patternify({\n                tag: \"foreignObject\",\n                selector: \"node-button-foreign-object\",\n                data: (d) => [d]\n            })\n            .attr('width', 40)\n            .attr('height', 40)\n            .attr('x', -20)\n            .attr('y', -20)\n            .style('overflow','visible')\n            .patternify({\n                tag: \"xhtml:div\",\n                selector: \"node-button-div\",\n                data: (d) => [d]\n            })\n            .style('pointer-events','none')\n            .style('display', 'flex')\n            .style('width', '100%')\n            .style('height', '100%')\n\n\n\n        // Transition to the proper position for the node\n        nodeUpdate\n            .transition()\n            .attr(\"opacity\", 0)\n            .duration(attrs.duration)\n            .attr(\"transform\", ({ x, y, width, height }) => {\n                return attrs.layoutBindings[attrs.layout].nodeUpdateTransform({ x, y, width, height });\n\n            })\n            .attr(\"opacity\", 1);\n\n        // Style node rectangles\n        nodeUpdate\n            .select(\".node-rect\")\n            .attr(\"width\", ({ width }) => width)\n            .attr(\"height\", ({ height }) => height)\n            .attr(\"x\", ({ width }) => 0)\n            .attr(\"y\", ({ height }) => 0)\n            .attr(\"cursor\", \"pointer\")\n            .attr('rx', 3)\n            .attr(\"fill\", attrs.nodeDefaultBackground)\n\n        // Move node button group to the desired position\n        nodeUpdate\n            .select(\".node-button-g\")\n            .attr(\"transform\", ({ data, width, height }) => {\n                const x = attrs.layoutBindings[attrs.layout].buttonX({ width, height });\n                const y = attrs.layoutBindings[attrs.layout].buttonY({ width, height });\n                return `translate(${x},${y})`\n            })\n            .attr(\"opacity\", ({ children, _children }) => {\n                if (children || _children) {\n                    return 1;\n                }\n                return 0;\n            });\n\n        // Restyle node button circle\n        nodeUpdate\n            .select(\".node-button-foreign-object .node-button-div\")\n            .html((node) => {\n                return attrs.buttonContent({ node, state: attrs })\n            })\n\n        // Restyle button texts\n        nodeUpdate\n            .select(\".node-button-text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"alignment-baseline\", \"middle\")\n            .attr(\"fill\", attrs.defaultTextFill)\n            .attr(\"font-size\", ({ children }) => {\n                if (children) return 40;\n                return 26;\n            })\n            .text(({ children }) => {\n                if (children) return \"-\";\n                return \"+\";\n            })\n            .attr(\"y\", this.isEdge() ? 10 : 0);\n\n        nodeUpdate.each(attrs.nodeUpdate)\n\n        // Remove any exiting nodes after transition\n        const nodeExitTransition = nodesSelection\n            .exit()\n            .attr(\"opacity\", 1)\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"transform\", (d) => {\n                const ex = attrs.layoutBindings[attrs.layout].nodeJoinX({ x, y, width, height });\n                const ey = attrs.layoutBindings[attrs.layout].nodeJoinY({ x, y, width, height });\n                return `translate(${ex},${ey})`\n            })\n            .on(\"end\", function () {\n                d3.select(this).remove();\n            })\n            .attr(\"opacity\", 0);\n\n        // Store the old positions for transition.\n        nodes.forEach((d) => {\n            d.x0 = d.x;\n            d.y0 = d.y;\n        });\n\n        // CHECK FOR CENTERING\n        const centeredNode = attrs.allNodes.filter(d => d.data._centered)[0]\n        if (centeredNode) {\n            const centeredNodes = centeredNode.data._centeredWithDescendants ? centeredNode.descendants().filter((d, i) => i < 7) : [centeredNode]\n            centeredNode.data._centeredWithDescendants = null;\n            centeredNode.data._centered = null;\n            this.fit({\n                animate: true,\n                scale: false,\n                nodes: centeredNodes\n            })\n        }\n\n    }\n\n    // This function detects whether current browser is edge\n    isEdge() {\n        return window.navigator.userAgent.includes(\"Edge\");\n    }\n\n    // Generate horizontal diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges-horizontal-d3-v3-v4-v5-v6\n    hdiagonal(s, t, m) {\n        // Define source and target x,y coordinates\n        const x = s.x;\n        const y = s.y;\n        const ex = t.x;\n        const ey = t.y;\n\n        let mx = m && m.x || x;\n        let my = m && m.y || y;\n\n        // Values in case of top reversed and left reversed diagonals\n        let xrvs = ex - x < 0 ? -1 : 1;\n        let yrvs = ey - y < 0 ? -1 : 1;\n\n        // Define preferred curve radius\n        let rdef = 35;\n\n        // Reduce curve radius, if source-target x space is smaller\n        let r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n\n        // Further reduce curve radius, is y space is more small\n        r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r;\n\n        // Defin width and height of link, excluding radius\n        let h = Math.abs(ey - y) / 2 - r;\n        let w = Math.abs(ex - x) / 2 - r;\n\n        // Build and return custom arc command\n        return `\n                  M ${mx} ${my}\n                  L ${mx} ${y}\n                  L ${x} ${y}\n                  L ${x + w * xrvs} ${y}\n                  C ${x + w * xrvs + r * xrvs} ${y} \n                    ${x + w * xrvs + r * xrvs} ${y} \n                    ${x + w * xrvs + r * xrvs} ${y + r * yrvs}\n                  L ${x + w * xrvs + r * xrvs} ${ey - r * yrvs} \n                  C ${x + w * xrvs + r * xrvs}  ${ey} \n                    ${x + w * xrvs + r * xrvs}  ${ey} \n                    ${ex - w * xrvs}  ${ey}\n                  L ${ex} ${ey}\n       `;\n    }\n\n    // Generate custom diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges\n    diagonal(s, t, m) {\n        const x = s.x;\n        const y = s.y;\n        const ex = t.x;\n        const ey = t.y;\n\n        let mx = m && m.x || x;\n        let my = m && m.y || y;\n\n        let xrvs = ex - x < 0 ? -1 : 1;\n        let yrvs = ey - y < 0 ? -1 : 1;\n\n        let rdef = 35;\n        let r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n\n        r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r;\n\n        let h = Math.abs(ey - y) / 2 - r;\n        let w = Math.abs(ex - x) - r * 2;\n        //w=0;\n        const path = `\n                  M ${mx} ${my}\n                  L ${x} ${my}\n                  L ${x} ${y}\n                  L ${x} ${y + h * yrvs}\n                  C  ${x} ${y + h * yrvs + r * yrvs} ${x} ${y + h * yrvs + r * yrvs\n            } ${x + r * xrvs} ${y + h * yrvs + r * yrvs}\n                  L ${x + w * xrvs + r * xrvs} ${y + h * yrvs + r * yrvs}\n                  C  ${ex}  ${y + h * yrvs + r * yrvs} ${ex}  ${y + h * yrvs + r * yrvs\n            } ${ex} ${ey - h * yrvs}\n                  L ${ex} ${ey}\n       `;\n        return path;\n    }\n\n    restyleForeignObjectElements() {\n        const attrs = this.getChartState();\n\n        attrs.svg\n            .selectAll(\".node-foreign-object\")\n            .attr(\"width\", ({ width }) => width)\n            .attr(\"height\", ({ height }) => height)\n            .attr(\"x\", ({ width }) => 0)\n            .attr(\"y\", ({ height }) => 0);\n        attrs.svg\n            .selectAll(\".node-foreign-object-div\")\n            .style(\"width\", ({ width }) => `${width}px`)\n            .style(\"height\", ({ height }) => `${height}px`)\n            .html(function (d, i, arr) { return attrs.nodeContent.bind(this)(d, i, arr, attrs) })\n    }\n\n    // Toggle children on click.\n    onButtonClick(event, d) {\n        const attrs = this.getChartState();\n        if (attrs.setActiveNodeCentered) {\n            d.data._centered = true;\n            d.data._centeredWithDescendants = true;\n        }\n\n        // If childrens are expanded\n        if (d.children) {\n            //Collapse them\n            d._children = d.children;\n            d.children = null;\n\n            // Set descendants expanded property to false\n            this.setExpansionFlagToChildren(d, false);\n        } else {\n            // Expand children\n            d.children = d._children;\n            d._children = null;\n\n            // Set each children as expanded\n            d.children.forEach(({ data }) => (data._expanded = true));\n        }\n\n        // Redraw Graph\n        this.update(d);\n    }\n\n    // This function changes `expanded` property to descendants\n    setExpansionFlagToChildren({ data, children, _children }, flag) {\n        // Set flag to the current property\n        data._expanded = flag;\n\n        // Loop over and recursively update expanded children's descendants\n        if (children) {\n            children.forEach((d) => {\n                this.setExpansionFlagToChildren(d, flag);\n            });\n        }\n\n        // Loop over and recursively update collapsed children's descendants\n        if (_children) {\n            _children.forEach((d) => {\n                this.setExpansionFlagToChildren(d, flag);\n            });\n        }\n    }\n\n\n    // Method which only expands nodes, which have property set \"expanded=true\"\n    expandSomeNodes(d) {\n        // If node has expanded property set\n        if (d.data._expanded) {\n            // Retrieve node's parent\n            let parent = d.parent;\n\n            // While we can go up\n            while (parent) {\n                // Expand all current parent's children\n                if (parent._children) {\n                    parent.children = parent._children;\n                }\n\n                // Replace current parent holding object\n                parent = parent.parent;\n            }\n        }\n\n        // Recursivelly do the same for collapsed nodes\n        if (d._children) {\n            d._children.forEach((ch) => this.expandSomeNodes(ch));\n        }\n\n        // Recursivelly do the same for expanded nodes\n        if (d.children) {\n            d.children.forEach((ch) => this.expandSomeNodes(ch));\n        }\n    }\n\n    // This function updates nodes state and redraws graph, usually after data change\n    updateNodesState() {\n        const attrs = this.getChartState();\n\n        this.setLayouts({ expandNodesFirst: true });\n\n        // Redraw Graphs\n        this.update(attrs.root);\n    }\n\n    setLayouts({ expandNodesFirst = true }) {\n        const attrs = this.getChartState();\n        // Store new root by converting flat data to hierarchy\n        attrs.root = d3\n            .stratify()\n            .id((d) => attrs.nodeId(d))\n            .parentId(d => attrs.parentNodeId(d))(attrs.data);\n\n        attrs.root.each((node, i, arr) => {\n            let width = attrs.nodeWidth(node);\n            let height = attrs.nodeHeight(node);\n            Object.assign(node, { width, height })\n        })\n\n        // Store positions, where children appear during their enter animation\n        attrs.root.x0 = 0;\n        attrs.root.y0 = 0;\n        attrs.allNodes = attrs.root.descendants();\n\n        // Store direct and total descendants count\n        attrs.allNodes.forEach((d) => {\n            Object.assign(d.data, {\n                _directSubordinates: d.children ? d.children.length : 0,\n                _totalSubordinates: d.descendants().length - 1\n            });\n        });\n\n        if (attrs.root.children) {\n            if (expandNodesFirst) {\n                // Expand all nodes first\n                attrs.root.children.forEach(this.expand);\n            }\n            // Then collapse them all\n            attrs.root.children.forEach((d) => this.collapse(d));\n\n            // Then only expand nodes, which have expanded proprty set to true\n            attrs.root.children.forEach((ch) => this.expandSomeNodes(ch));\n        }\n    }\n\n    // Function which collapses passed node and it's descendants\n    collapse(d) {\n        if (d.children) {\n            d._children = d.children;\n            d._children.forEach((ch) => this.collapse(ch));\n            d.children = null;\n        }\n    }\n\n    // Function which expands passed node and it's descendants\n    expand(d) {\n        if (d._children) {\n            d.children = d._children;\n            d.children.forEach((ch) => this.expand(ch));\n            d._children = null;\n        }\n    }\n\n    // Zoom handler function\n    zoomed(event, d) {\n        const attrs = this.getChartState();\n        const chart = attrs.chart;\n\n        // Get d3 event's transform object\n        const transform = event.transform;\n\n        // Store it\n        attrs.lastTransform = transform;\n\n        // Reposition and rescale chart accordingly\n        chart.attr(\"transform\", transform);\n\n        // Apply new styles to the foreign object element\n        if (this.isEdge()) {\n            this.restyleForeignObjectElements();\n        }\n    }\n\n    zoomTreeBounds({ x0, x1, y0, y1, params = { animate: true, scale: true } }) {\n        const { centerG, svgWidth: w, svgHeight: h, svg, zoomBehavior, duration, lastTransform } = this.getChartState()\n        let scaleVal = Math.min(8, 0.9 / Math.max((x1 - x0) / w, (y1 - y0) / h));\n        let identity = d3.zoomIdentity.translate(w / 2, h / 2)\n        identity = identity.scale(params.scale ? scaleVal : lastTransform.k)\n\n        identity = identity.translate(-(x0 + x1) / 2, -(y0 + y1) / 2);\n        // Transition zoom wrapper component into specified bounds\n        svg.transition().duration(params.animate ? duration : 0).call(zoomBehavior.transform, identity);\n        centerG.transition().duration(params.animate ? duration : 0).attr('transform', 'translate(0,0)')\n    }\n\n    fit({ animate = true, nodes, scale = true } = {}) {\n        const attrs = this.getChartState();\n        const { root } = attrs;\n        let descendants = nodes ? nodes : root.descendants();\n        const minX = d3.min(descendants, d => d.x + attrs.layoutBindings[attrs.layout].nodeLeftX(d))\n        const maxX = d3.max(descendants, d => d.x + attrs.layoutBindings[attrs.layout].nodeRightX(d))\n        const minY = d3.min(descendants, d => d.y + attrs.layoutBindings[attrs.layout].nodeTopY(d))\n        const maxY = d3.max(descendants, d => d.y + attrs.layoutBindings[attrs.layout].nodeBottomY(d))\n\n        this.zoomTreeBounds({\n            params: { animate: animate, scale },\n            x0: minX - 50,\n            x1: maxX + 50,\n            y0: minY - 50,\n            y1: maxY + 50,\n        });\n        return this;\n    }\n\n    // This function can be invoked via chart.setExpanded API, it expands or collapses particular node\n    setExpanded(id, expandedFlag = true) {\n\n        const attrs = this.getChartState();\n        // Retrieve node by node Id\n        const node = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) == id)[0];\n\n        if (!node) {\n            console.log(`ORG CHART - ${expandedFlag ? \"EXPAND\" : \"COLLAPSE\"} - Node with id (${id})  not found in the tree`)\n            return this;\n        }\n        node.data._expanded = expandedFlag;\n        return this;\n    }\n\n    setCentered(nodeId) {\n        const attrs = this.getChartState();\n        // this.setExpanded(nodeId)\n        const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - CENTER - Node with id (${nodeId}) not found in the tree`)\n            return this;\n        }\n        node.data._centered = true;\n        node.data._expanded = true;\n        return this;\n    }\n\n    setHighlighted(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - HIGHLIGHT - Node with id (${nodeId})  not found in the tree`);\n            return this\n        }\n        node.data._highlighted = true;\n        node.data._expanded = true;\n        node.data._centered = true;\n        return this;\n    }\n\n    setUpToTheRootHighlighted(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - HIGHLIGHTROOT - Node with id (${nodeId}) not found in the tree`)\n            return this;\n        }\n        node.data._upToTheRootHighlighted = true;\n        node.data._expanded = true;\n        node.ancestors().forEach(d => d.data._upToTheRootHighlighted = true)\n        return this;\n    }\n\n    clearHighlighting() {\n        const attrs = this.getChartState();\n        attrs.allNodes.forEach(d => {\n            d.data._highlighted = false;\n            d.data._upToTheRootHighlighted = false;\n        })\n        this.update(attrs.root)\n    }\n\n    // It can take selector which would go fullscreen\n    fullscreen(elem) {\n        const attrs = this.getChartState();\n        const el = d3.select(elem || attrs.container).node();\n\n        d3.select(document).on('fullscreenchange.' + attrs.id, function (d) {\n            const fsElement = document.fullscreenElement || document.mozFullscreenElement || document.webkitFullscreenElement;\n            if (fsElement == el) {\n                setTimeout(d => {\n                    attrs.svg.attr('height', window.innerHeight - 40);\n                }, 500)\n            } else {\n                attrs.svg.attr('height', attrs.svgHeight)\n            }\n        })\n\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        }\n    }\n\n    // Zoom in exposed method\n    zoomIn() {\n        const { svg, zoomBehavior } = this.getChartState();\n        svg.transition().call(zoomBehavior.scaleBy, 1.3);\n    }\n\n    // Zoom out exposed method\n    zoomOut() {\n        const { svg, zoomBehavior } = this.getChartState();\n        svg.transition().call(zoomBehavior.scaleBy, 0.78);\n    }\n\n    toDataURL(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                callback(reader.result);\n            }\n            reader.readAsDataURL(xhr.response);\n        };\n        xhr.open('GET', url);\n        xhr.responseType = 'blob';\n        xhr.send();\n    }\n\n    exportImg({ full = false, scale = 3, onLoad = d => d, save = true } = {}) {\n        const that = this;\n        const attrs = this.getChartState();\n        const { svg, root, allNodes } = attrs\n        let count = 0;\n        const selection = svg.selectAll('img')\n        let total = selection.size()\n        selection\n            .each(function () {\n                that.toDataURL(this.src, (dataUrl) => {\n                    this.src = dataUrl;\n                    if (++count == total) {\n                        that.downloadImage({\n                            node: svg.node(), scale, isSvg: false,\n                            onAlreadySerialized: d => {\n                                that.update(root)\n                            },\n                            onLoad: onLoad,\n                            save\n                        })\n                    }\n                })\n            })\n    }\n\n    exportSvg() {\n        const { svg } = this.getChartState();\n        this.downloadImage({ node: svg.node(), scale: 3, isSvg: true })\n        return this;\n    }\n\n    expandAll() {\n        const { allNodes, root } = this.getChartState();\n        allNodes.forEach(d => d.data._expanded = true);\n        this.render()\n        return this;\n    }\n\n    downloadImage({ node, scale = 2, isSvg = false, save = true, onAlreadySerialized = d => { }, onLoad = d => { } }) {\n        // Retrieve svg node\n        const svgNode = node;\n\n        if (isSvg) {\n            let source = serializeString(svgNode);\n            //add xml declaration\n            source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n            //convert svg source to URI data scheme.\n            var url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n            saveAs(url, \"graph.svg\");\n            onAlreadySerialized()\n            return;\n        }\n        // Get image quality index (basically,  index you can zoom in)\n        const quality = scale\n        // Create image\n        const image = document.createElement('img');\n        image.onload = function () {\n            // Create image canvas\n            const canvas = document.createElement('canvas');\n            // Set width and height based on SVG node\n            const rect = svgNode.getBoundingClientRect();\n            canvas.width = rect.width * quality;\n            canvas.height = rect.height * quality;\n            // Draw background\n            const context = canvas.getContext('2d');\n            context.fillStyle = '#FAFAFA';\n            context.fillRect(0, 0, rect.width * quality, rect.height * quality);\n            context.drawImage(image, 0, 0, rect.width * quality, rect.height * quality);\n            // Set some image metadata\n            let dt = canvas.toDataURL('image/png');\n            if (onLoad) {\n                onLoad(dt)\n            }\n            if (save) {\n                // Invoke saving function\n                saveAs(dt, 'graph.png');\n            }\n\n        };\n\n        var url = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(serializeString(svgNode));\n\n        onAlreadySerialized()\n\n        image.src = url// URL.createObjectURL(blob);\n        // This function invokes save window\n        function saveAs(uri, filename) {\n            // create link\n            var link = document.createElement('a');\n            if (typeof link.download === 'string') {\n                document.body.appendChild(link); // Firefox requires the link to be in the body\n                link.download = filename;\n                link.href = uri;\n                link.click();\n                document.body.removeChild(link); // remove the link when done\n            } else {\n                location.replace(uri);\n            }\n        }\n        // This function serializes SVG and sets all necessary attributes\n        function serializeString(svg) {\n            const xmlns = 'http://www.w3.org/2000/xmlns/';\n            const xlinkns = 'http://www.w3.org/1999/xlink';\n            const svgns = 'http://www.w3.org/2000/svg';\n            svg = svg.cloneNode(true);\n            const fragment = window.location.href + '#';\n            const walker = document.createTreeWalker(svg, NodeFilter.SHOW_ELEMENT, null, false);\n            while (walker.nextNode()) {\n                for (const attr of walker.currentNode.attributes) {\n                    if (attr.value.includes(fragment)) {\n                        attr.value = attr.value.replace(fragment, '#');\n                    }\n                }\n            }\n            svg.setAttributeNS(xmlns, 'xmlns', svgns);\n            svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns);\n            const serializer = new XMLSerializer();\n            const string = serializer.serializeToString(svg);\n            return string;\n        }\n    }\n\n    // Calculate what size text will take\n    getTextWidth(text, {\n        fontSize = 14,\n        fontWeight = 400,\n        defaultFont = \"Helvetice\",\n        ctx\n    } = {}) {\n        ctx.font = `${fontWeight || ''} ${fontSize}px ${defaultFont} `\n        const measurement = ctx.measureText(text);\n        return measurement.width;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}