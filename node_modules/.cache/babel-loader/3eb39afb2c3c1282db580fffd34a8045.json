{"ast":null,"code":"var _jsxFileName = \"/Users/marcomazzucato/Desktop/org-chart/src/grafico/components/OrgChart.js\";\nimport React, { Component } from \"react\";\nimport { OrgChart } from \"d3-org-chart\";\nimport user from \"./user-black-shape.png\";\nimport company from \"./home-page.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class OrgChartComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.createDiagram = this.createDiagram.bind(this);\n  }\n\n  componentDidMount() {\n    this.createDiagram();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.createDiagram();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: node => this.node = node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  }\n\n  createDiagram() {\n    let json = this.props.dataTemplate;\n    let obj = JSON.parse(JSON.stringify(json));\n\n    for (var i = 0; i < 1; i++) {\n      obj[i].nodeId = i;\n      obj[i].nodeId == 0 ? obj[i].parentNodeId = null : obj[i].parentNodeId = prevParent;\n      var prevParent = obj[i].nodeId;\n    }\n\n    console.log(obj);\n    var arrData = Object.values(obj);\n    console.log(arrData);\n    var newData = arrData.map(d => {\n      console.log(d.parentNodeId, d.nodeId);\n      const width = 350; //Math.round(Math.random()*50+300);\n\n      const height = 160; // Math.round(Math.random()*20+130);\n\n      const cornerShape = 'ORIGINAL'; //['ORIGINAL','ROUNDED','CIRCLE']\n\n      const nodeImageWidth = 100;\n      const nodeImageHeight = 100;\n      const centerTopDistance = 0;\n      const centerLeftDistance = 0;\n      const expanded = false; //d.id==\"O-6\"\n\n      const titleMarginLeft = nodeImageWidth / 2 + 20 + centerLeftDistance;\n      const contentMarginLeft = width / 2 + 25;\n      return {\n        //inserire qui i campi che mi servono dal JSON originale\n        nodeId: d.nodeId,\n        parentNodeId: d.parentNodeId,\n        name: d.name,\n        address: d.address.simpleValue,\n        percent: d.percentSharesHeld,\n        width: width,\n        height: height,\n        borderWidth: 0.6,\n        borderRadius: 0,\n        borderColor: {\n          red: 15,\n          green: 140,\n          blue: 121,\n          alpha: 0.7\n        },\n        backgroundColor: {\n          red: 247,\n          green: 247,\n          blue: 249,\n          alpha: 0.4\n        },\n        template: `<div style=\"color:#2A2A2A;height:160px;margin-top:-30px;background-image: linear-gradient(to right , #FFFFFF, #ECEDF0);\">\n                      <div style=\"margin-left:${titleMarginLeft + 77}px;\n                                  margin-top:30px;\n                                  padding-top:20px;\n                                  font-size:20px;\n                                  font-weight:bold;\n                            \">${d.name} </div>\n                    <div style=\"margin-left:${titleMarginLeft + 77}px;\n                                  margin-top:3px;\n                                  font-size:16px;\n                            \">placeHolder </div>\n\n                    <div style=\"margin-left:${titleMarginLeft + 77}px;\n                                  margin-top:3px;\n                                  font-size:14px;\n                            \">placeHolder</div>\n\n                    <div style=\"margin-left:${contentMarginLeft + 70}px;\n                                margin-top:15px;\n                                font-size:13px;\n                                position:absolute;\n                                bottom:5px;\n                                \">\n                          <div>placeHolder</div>\n                          <div style=\"margin-top:5px\">placeHolder</div>\n                    </div>\n                  </div>`,\n        connectorLineColor: {\n          red: 59,\n          green: 60,\n          blue: 63,\n          alpha: 1\n        },\n        connectorLineWidth: 2,\n        dashArray: '',\n        expanded: expanded\n      };\n    });\n    const node = this.node;\n\n    if (!this.props.data) {\n      return;\n    }\n\n    if (!this.chart) {\n      this.chart = new OrgChart();\n    }\n\n    this.chart.container(node).data(newData).svgWidth(500).initialZoom(1).nodeHeight(d => 180).childrenMargin(d => 40).onNodeClick(d => console.log(d + \" node clicked\")).nodeContent(function (d, i, arr, state) {\n      console.log(\"iterazione\", d);\n\n      if (i == 0) {\n        return `\n                <div style=\"padding-top:30px;background-color:none;margin-left:1px;height:${d.height}px;border-radius:2px;overflow:visible\">\n                  <div style=\"height:${d.height - 32}px;padding-top:0px;background-color:white;border:3px solid lightblue;border-radius:3%\">\n\n                    <img src=\"${company}\" style=\"margin-top:-30px;margin-left:${d.width / 2 - 30}px;border-radius:0px;width:60px;height:60px;\" />\n                  \n                  <div style=\"margin-top:-30px;background-color:none;height:10px;width:${d.width - 2}px;border-radius:1px\"></div>\n\n                  <div style=\"padding:20px; padding-top:50px;text-align:center\">\n                      <div style=\"color:#111672;font-size:25px;font-weight:bold\"> ${d.data.address} </div>\n                  </div> \n                  </div>     \n          </div>\n          `;\n      } else {\n        return `\n                <div style=\"padding-top:30px;background-color:none;margin-left:1px;height:${d.height}px;border-radius:2px;overflow:visible\">\n                  <div style=\"height:${d.height - 32}px;padding-top:0px;background-color:white;border:3px solid lightblue;border-radius:3%\">\n\n                    <img src=\"${user}\" style=\"margin-top:-30px;margin-left:${d.width / 2 - 30}px;border-radius:0px;width:60px;height:60px;\" />\n                  \n                  <div style=\"margin-top:-30px;background-color:none;height:10px;width:${d.width - 2}px;border-radius:1px\"></div>\n\n                  <div style=\"padding:20px; padding-top:35px;text-align:center\">\n                      <div style=\"color:#111672;font-size:25px;font-weight:bold\"> Nome Cognome </div>\n                      <div style=\"color:#404040;font-size:19px;margin-top:4px\"> Ruolo </div>\n                  </div> \n                  <div style=\"display:flex;justify-content:center;padding-left:15px;padding-right:15px;\">\n            <div > Quota: ${i} %</div>    \n                  </div>\n                  </div>     \n          </div>\n      `;\n      }\n    }).render();\n  }\n\n}","map":{"version":3,"names":["React","Component","OrgChart","user","company","OrgChartComponent","constructor","props","createDiagram","bind","componentDidMount","componentDidUpdate","prevProps","prevState","render","node","json","dataTemplate","obj","JSON","parse","stringify","i","nodeId","parentNodeId","prevParent","console","log","arrData","Object","values","newData","map","d","width","height","cornerShape","nodeImageWidth","nodeImageHeight","centerTopDistance","centerLeftDistance","expanded","titleMarginLeft","contentMarginLeft","name","address","simpleValue","percent","percentSharesHeld","borderWidth","borderRadius","borderColor","red","green","blue","alpha","backgroundColor","template","connectorLineColor","connectorLineWidth","dashArray","data","chart","container","svgWidth","initialZoom","nodeHeight","childrenMargin","onNodeClick","nodeContent","arr","state"],"sources":["/Users/marcomazzucato/Desktop/org-chart/src/grafico/components/OrgChart.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { OrgChart } from \"d3-org-chart\";\nimport user from \"./user-black-shape.png\";\nimport company from \"./home-page.png\";\n\n\nexport default class OrgChartComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.createDiagram = this.createDiagram.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.createDiagram();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.createDiagram();\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div ref={(node) => (this.node = node)} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcreateDiagram() {\n    let json = this.props.dataTemplate;\n    let obj = JSON.parse(JSON.stringify(json));\n    for(var i=0; i<1; i++){\n      obj[i].nodeId = i ;\n      obj[i].nodeId == 0 ? obj[i].parentNodeId = null : obj[i].parentNodeId = prevParent;\n      var prevParent = obj[i].nodeId;\n    }\n    console.log(obj);\n\n    var arrData = Object.values(obj);\n    console.log(arrData);\n\n    var newData = arrData.map((d)=>{\n      console.log(d.parentNodeId, d.nodeId); \n      const width =  350 //Math.round(Math.random()*50+300);\n      const height = 160 // Math.round(Math.random()*20+130);\n      const cornerShape = 'ORIGINAL'; //['ORIGINAL','ROUNDED','CIRCLE']\n      const nodeImageWidth = 100;\n      const nodeImageHeight = 100;\n      const centerTopDistance = 0;\n      const centerLeftDistance = 0;\n      const expanded = false; //d.id==\"O-6\"\n      const  titleMarginLeft = nodeImageWidth/2+20+centerLeftDistance\n      const  contentMarginLeft = width/2+25\n      return {\n        //inserire qui i campi che mi servono dal JSON originale\n        nodeId:d.nodeId,\n        parentNodeId:d.parentNodeId,\n        name:d.name,\n        address:d.address.simpleValue,\n        percent:d.percentSharesHeld,\n        width:width,\n        height:height,\n        borderWidth:0.6,\n        borderRadius:0,\n        borderColor:{\n            red:15,\n            green:140,\n            blue:121,\n            alpha:0.7,\n        },\n        backgroundColor:{\n          red:247,\n          green:247,\n          blue:249,\n          alpha:0.4,\n        },\n        template:`<div style=\"color:#2A2A2A;height:160px;margin-top:-30px;background-image: linear-gradient(to right , #FFFFFF, #ECEDF0);\">\n                      <div style=\"margin-left:${titleMarginLeft+77}px;\n                                  margin-top:30px;\n                                  padding-top:20px;\n                                  font-size:20px;\n                                  font-weight:bold;\n                            \">${d.name} </div>\n                    <div style=\"margin-left:${titleMarginLeft+77}px;\n                                  margin-top:3px;\n                                  font-size:16px;\n                            \">placeHolder </div>\n\n                    <div style=\"margin-left:${titleMarginLeft+77}px;\n                                  margin-top:3px;\n                                  font-size:14px;\n                            \">placeHolder</div>\n\n                    <div style=\"margin-left:${contentMarginLeft+70}px;\n                                margin-top:15px;\n                                font-size:13px;\n                                position:absolute;\n                                bottom:5px;\n                                \">\n                          <div>placeHolder</div>\n                          <div style=\"margin-top:5px\">placeHolder</div>\n                    </div>\n                  </div>`,\n        connectorLineColor:{\n          red:59,\n          green:60,\n          blue:63,\n          alpha:1\n        },\n        connectorLineWidth:2,\n        dashArray:'',\n        expanded:expanded}\n        });\n\t\tconst node = this.node;\n    if(!this.props.data){\n      return;\n    }\n    if (!this.chart) {\n      this.chart =  new OrgChart();\n    }\n     this.chart.container(node) \n        .data(newData)\n        .svgWidth(500)\n        .initialZoom(1)\n\t\t    .nodeHeight(d=> 180)\n\t\t    .childrenMargin((d) => 40)\n        .onNodeClick(d => console.log(d + \" node clicked\"))\n        .nodeContent(function (d, i, arr, state) {\n          console.log(\"iterazione\", d)\n          if(i==0)\n                {return `\n                <div style=\"padding-top:30px;background-color:none;margin-left:1px;height:${\n                  d.height\n                }px;border-radius:2px;overflow:visible\">\n                  <div style=\"height:${\n                    d.height - 32\n                  }px;padding-top:0px;background-color:white;border:3px solid lightblue;border-radius:3%\">\n\n                    <img src=\"${company}\" style=\"margin-top:-30px;margin-left:${d.width / 2 - 30}px;border-radius:0px;width:60px;height:60px;\" />\n                  \n                  <div style=\"margin-top:-30px;background-color:none;height:10px;width:${\n                    d.width - 2\n                  }px;border-radius:1px\"></div>\n\n                  <div style=\"padding:20px; padding-top:50px;text-align:center\">\n                      <div style=\"color:#111672;font-size:25px;font-weight:bold\"> ${d.data.address} </div>\n                  </div> \n                  </div>     \n          </div>\n          `}else\n                {return `\n                <div style=\"padding-top:30px;background-color:none;margin-left:1px;height:${\n                  d.height\n                }px;border-radius:2px;overflow:visible\">\n                  <div style=\"height:${\n                    d.height - 32\n                  }px;padding-top:0px;background-color:white;border:3px solid lightblue;border-radius:3%\">\n\n                    <img src=\"${user}\" style=\"margin-top:-30px;margin-left:${d.width / 2 - 30}px;border-radius:0px;width:60px;height:60px;\" />\n                  \n                  <div style=\"margin-top:-30px;background-color:none;height:10px;width:${\n                    d.width - 2\n                  }px;border-radius:1px\"></div>\n\n                  <div style=\"padding:20px; padding-top:35px;text-align:center\">\n                      <div style=\"color:#111672;font-size:25px;font-weight:bold\"> Nome Cognome </div>\n                      <div style=\"color:#404040;font-size:19px;margin-top:4px\"> Ruolo </div>\n                  </div> \n                  <div style=\"display:flex;justify-content:center;padding-left:15px;padding-right:15px;\">\n            <div > Quota: ${i} %</div>    \n                  </div>\n                  </div>     \n          </div>\n      `;}\n              })\n            .render();\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}