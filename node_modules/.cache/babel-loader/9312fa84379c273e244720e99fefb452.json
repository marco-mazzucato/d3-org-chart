{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/marcomazzucato/Desktop/org-chart/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/marcomazzucato/Desktop/org-chart/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/marcomazzucato/Desktop/org-chart/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/marcomazzucato/Desktop/org-chart/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { selection, select } from \"d3-selection\";\nimport { max, min, sum, cumsum } from \"d3-array\";\nimport { tree, stratify } from \"d3-hierarchy\";\nimport { zoom, zoomIdentity } from \"d3-zoom\";\nimport { flextree } from 'd3-flextree';\nimport { linkHorizontal } from 'd3-shape';\nvar d3 = {\n  selection: selection,\n  select: select,\n  max: max,\n  min: min,\n  sum: sum,\n  cumsum: cumsum,\n  tree: tree,\n  stratify: stratify,\n  zoom: zoom,\n  zoomIdentity: zoomIdentity,\n  linkHorizontal: linkHorizontal\n};\nexport var OrgChart = /*#__PURE__*/function () {\n  function OrgChart() {\n    var _this2 = this;\n\n    _classCallCheck(this, OrgChart);\n\n    // Exposed variables \n    var attrs = {\n      id: \"ID\".concat(Math.floor(Math.random() * 1000000)),\n      // Id for event handlings\n      firstDraw: true,\n      svgWidth: 800,\n      svgHeight: window.innerHeight - 100,\n      scaleExtent: [0.001, 20],\n      container: \"body\",\n      defaultTextFill: \"#2C3E50\",\n      defaultFont: \"Helvetica\",\n      ctx: document.createElement('canvas').getContext('2d'),\n      data: null,\n      duration: 400,\n      setActiveNodeCentered: true,\n      expandLevel: 1,\n      compact: true,\n      rootMargin: 40,\n      nodeDefaultBackground: 'none',\n      connections: [],\n      lastTransform: {\n        x: 0,\n        y: 0,\n        k: 1\n      },\n      nodeId: function nodeId(d) {\n        return d.nodeId || d.id;\n      },\n      parentNodeId: function parentNodeId(d) {\n        return d.parentNodeId || d.parentId;\n      },\n      backgroundColor: 'none',\n      zoomBehavior: null,\n      defs: function defs(state, visibleConnections) {\n        var _this = this;\n\n        return \"<defs>\\n                    \".concat(visibleConnections.map(function (conn) {\n          var labelWidth = _this.getTextWidth(conn.label, {\n            ctx: state.ctx,\n            fontSize: 2,\n            defaultFont: state.defaultFont\n          });\n\n          return \"\\n                       <marker id=\\\"\".concat(conn.from + \"_\" + conn.to, \"\\\" refX=\\\"\").concat(conn._source.x < conn._target.x ? -7 : 7, \"\\\" refY=\\\"5\\\" markerWidth=\\\"500\\\"  markerHeight=\\\"500\\\"  orient=\\\"\").concat(conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\", \"\\\" >\\n                       <rect rx=0.5 width=\").concat(conn.label ? labelWidth + 3 : 0, \" height=3 y=1  fill=\\\"#152785\\\"></rect>\\n                       <text font-size=\\\"2px\\\" x=1 fill=\\\"white\\\" y=3>\").concat(conn.label || '', \"</text>\\n                       </marker>\\n\\n                       <marker id=\\\"arrow-\").concat(conn.from + \"_\" + conn.to, \"\\\"  markerWidth=\\\"500\\\"  markerHeight=\\\"500\\\"  refY=\\\"2\\\"  refX=\\\"1\\\" orient=\\\"\").concat(conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\", \"\\\" >\\n                       <path transform=\\\"translate(0)\\\" d='M0,0 V4 L2,2 Z' fill='#152785' />\\n                       </marker>\\n                    \");\n        }).join(\"\"), \"\\n                    </defs>\\n                    \");\n      },\n      connectionsUpdate: function connectionsUpdate(d, i, arr) {\n        d3.select(this).attr(\"stroke\", function (d) {\n          return '#152785';\n        }).attr('stroke-linecap', 'round').attr(\"stroke-width\", function (d) {\n          return '5';\n        }).attr('pointer-events', 'none').attr(\"marker-start\", function (d) {\n          return \"url(#\".concat(d.from + \"_\" + d.to, \")\");\n        }).attr(\"marker-end\", function (d) {\n          return \"url(#arrow-\".concat(d.from + \"_\" + d.to, \")\");\n        });\n      },\n      linkUpdate: function linkUpdate(d, i, arr) {\n        d3.select(this).attr(\"stroke\", function (d) {\n          return d.data._upToTheRootHighlighted ? '#152785' : 'lightgray';\n        }).attr(\"stroke-width\", function (d) {\n          return d.data._upToTheRootHighlighted ? 5 : 2;\n        });\n\n        if (d.data._upToTheRootHighlighted) {\n          d3.select(this).raise();\n        }\n      },\n      nodeUpdate: function nodeUpdate(d, i, arr) {\n        d3.select(this).select('.node-rect').attr(\"stroke\", function (d) {\n          return d.data._highlighted || d.data._upToTheRootHighlighted ? '#152785' : 'none';\n        }).attr(\"stroke-width\", d.data._highlighted || d.data._upToTheRootHighlighted ? 10 : 1);\n      },\n      nodeWidth: function nodeWidth(d3Node) {\n        return 250;\n      },\n      nodeHeight: function nodeHeight(d) {\n        return 150;\n      },\n      siblingsMargin: function siblingsMargin(d3Node) {\n        return 20;\n      },\n      childrenMargin: function childrenMargin(d) {\n        return 60;\n      },\n      neightbourMargin: function neightbourMargin(n1, n2) {\n        return 80;\n      },\n      compactMarginPair: function compactMarginPair(d) {\n        return 100;\n      },\n      compactMarginBetween: function compactMarginBetween(d3Node) {\n        return 20;\n      },\n      onNodeClick: function onNodeClick(d) {\n        return d;\n      },\n      linkGroupArc: d3.linkHorizontal().x(function (d) {\n        return d.x;\n      }).y(function (d) {\n        return d.y;\n      }),\n      // ({ source, target }) => {\n      //     return \n      //     return `M ${source.x} , ${source.y} Q ${(source.x + target.x) / 2 + 100},${source.y-100}  ${target.x}, ${target.y}`;\n      // },\n      nodeContent: function nodeContent(d) {\n        return \"<div style=\\\"padding:5px;font-size:10px;\\\">Sample Node(id=\".concat(d.id, \"), override using <br/> <br/> \\n            <code>chart<br/>\\n            &nbsp;.nodeContent({data}=>{ <br/>\\n             &nbsp;&nbsp;&nbsp;&nbsp;return '' // Custom HTML <br/>\\n             &nbsp;})</code>\\n             <br/> <br/>\\n             Or check different <a href=\\\"https://github.com/bumbeishvili/org-chart#jump-to-examples\\\" target=\\\"_blank\\\">layout examples</a>\\n             \\n             </div>\");\n      },\n      layout: \"top\",\n      // top, left,right, bottom\n      buttonContent: function buttonContent(_ref) {\n        var node = _ref.node,\n            state = _ref.state;\n        var icons = {\n          \"left\": function left(d) {\n            return d ? \"<div style=\\\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\\\">\\u2039</div>\" : \"<div style=\\\"margin-top:-10px;font-size:25px;height:23px\\\">\\u203A</div>\";\n          },\n          \"bottom\": function bottom(d) {\n            return d ? \"<div style=\\\"margin-top:-20px;font-size:25px\\\">\\u02EC</div>\" : \"<div style=\\\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\\\">\\u02C6</div>\";\n          },\n          \"right\": function right(d) {\n            return d ? \"<div style=\\\"margin-top:-10px;font-size:25px;height:23px\\\">\\u203A</div>\" : \"<div style=\\\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\\\">\\u2039</div>\";\n          },\n          \"top\": function top(d) {\n            return d ? \"<div style=\\\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\\\">\\u02C6</div>\" : \"<div style=\\\"margin-top:-20px;font-size:25px\\\">\\u02EC</div>\";\n          }\n        };\n        return \"<div style=\\\"border-radius:3px;padding:3px;font-size:10px;margin:auto auto;background-color:lightgray\\\"> \".concat(icons[state.layout](node.children), \"  </div>\");\n      },\n      layoutBindings: {\n        \"left\": {\n          \"nodeLeftX\": function nodeLeftX(node) {\n            return 0;\n          },\n          \"nodeRightX\": function nodeRightX(node) {\n            return node.width;\n          },\n          \"nodeTopY\": function nodeTopY(node) {\n            return -node.height / 2;\n          },\n          \"nodeBottomY\": function nodeBottomY(node) {\n            return node.height / 2;\n          },\n          \"nodeJoinX\": function nodeJoinX(node) {\n            return node.x + node.width;\n          },\n          \"nodeJoinY\": function nodeJoinY(node) {\n            return node.y - node.height / 2;\n          },\n          \"linkJoinX\": function linkJoinX(node) {\n            return node.x + node.width;\n          },\n          \"linkJoinY\": function linkJoinY(node) {\n            return node.y;\n          },\n          \"linkX\": function linkX(node) {\n            return node.x;\n          },\n          \"linkY\": function linkY(node) {\n            return node.y;\n          },\n          \"linkCompactXStart\": function linkCompactXStart(node) {\n            return node.x + node.width / 2;\n          },\n          //node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n          \"linkCompactYStart\": function linkCompactYStart(node) {\n            return node.y + (node.compactEven ? node.height / 2 : -node.height / 2);\n          },\n          \"compactLinkMidX\": function compactLinkMidX(node, state) {\n            return node.firstCompactNode.x;\n          },\n          // node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"compactLinkMidY\": function compactLinkMidY(node, state) {\n            return node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4;\n          },\n          \"linkParentX\": function linkParentX(node) {\n            return node.parent.x + node.parent.width;\n          },\n          \"linkParentY\": function linkParentY(node) {\n            return node.parent.y;\n          },\n          \"buttonX\": function buttonX(node) {\n            return node.width;\n          },\n          \"buttonY\": function buttonY(node) {\n            return node.height / 2;\n          },\n          \"centerTransform\": function centerTransform(_ref2) {\n            var root = _ref2.root,\n                rootMargin = _ref2.rootMargin,\n                centerY = _ref2.centerY,\n                scale = _ref2.scale,\n                centerX = _ref2.centerX;\n            return \"translate(\".concat(rootMargin, \",\").concat(centerY, \") scale(\").concat(scale, \")\");\n          },\n          \"compactDimension\": {\n            sizeColumn: function sizeColumn(node) {\n              return node.height;\n            },\n            sizeRow: function sizeRow(node) {\n              return node.width;\n            },\n            reverse: function reverse(arr) {\n              return arr.slice().reverse();\n            }\n          },\n          \"nodeFlexSize\": function nodeFlexSize(_ref3) {\n            var height = _ref3.height,\n                width = _ref3.width,\n                siblingsMargin = _ref3.siblingsMargin,\n                childrenMargin = _ref3.childrenMargin,\n                state = _ref3.state,\n                node = _ref3.node;\n\n            if (state.compact && node.flexCompactDim) {\n              var result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [height + siblingsMargin, width + childrenMargin];\n          },\n          \"zoomTransform\": function zoomTransform(_ref4) {\n            var centerY = _ref4.centerY,\n                scale = _ref4.scale;\n            return \"translate(\".concat(0, \",\", centerY, \") scale(\").concat(scale, \")\");\n          },\n          \"diagonal\": this.hdiagonal.bind(this),\n          \"swap\": function swap(d) {\n            var x = d.x;\n            d.x = d.y;\n            d.y = x;\n          },\n          \"nodeUpdateTransform\": function nodeUpdateTransform(_ref5) {\n            var x = _ref5.x,\n                y = _ref5.y,\n                width = _ref5.width,\n                height = _ref5.height;\n            return \"translate(\".concat(x, \",\").concat(y - height / 2, \")\");\n          }\n        },\n        \"top\": {\n          \"nodeLeftX\": function nodeLeftX(node) {\n            return -node.width / 2;\n          },\n          \"nodeRightX\": function nodeRightX(node) {\n            return node.width / 2;\n          },\n          \"nodeTopY\": function nodeTopY(node) {\n            return 0;\n          },\n          \"nodeBottomY\": function nodeBottomY(node) {\n            return node.height;\n          },\n          \"nodeJoinX\": function nodeJoinX(node) {\n            return node.x - node.width / 2;\n          },\n          \"nodeJoinY\": function nodeJoinY(node) {\n            return node.y + node.height;\n          },\n          \"linkJoinX\": function linkJoinX(node) {\n            return node.x;\n          },\n          \"linkJoinY\": function linkJoinY(node) {\n            return node.y + node.height;\n          },\n          \"linkCompactXStart\": function linkCompactXStart(node) {\n            return node.x + (node.compactEven ? node.width / 2 : -node.width / 2);\n          },\n          \"linkCompactYStart\": function linkCompactYStart(node) {\n            return node.y + node.height / 2;\n          },\n          \"compactLinkMidX\": function compactLinkMidX(node, state) {\n            return node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4;\n          },\n          \"compactLinkMidY\": function compactLinkMidY(node) {\n            return node.firstCompactNode.y;\n          },\n          \"compactDimension\": {\n            sizeColumn: function sizeColumn(node) {\n              return node.width;\n            },\n            sizeRow: function sizeRow(node) {\n              return node.height;\n            },\n            reverse: function reverse(arr) {\n              return arr;\n            }\n          },\n          \"linkX\": function linkX(node) {\n            return node.x;\n          },\n          \"linkY\": function linkY(node) {\n            return node.y;\n          },\n          \"linkParentX\": function linkParentX(node) {\n            return node.parent.x;\n          },\n          \"linkParentY\": function linkParentY(node) {\n            return node.parent.y + node.parent.height;\n          },\n          \"buttonX\": function buttonX(node) {\n            return node.width / 2;\n          },\n          \"buttonY\": function buttonY(node) {\n            return node.height;\n          },\n          \"centerTransform\": function centerTransform(_ref6) {\n            var root = _ref6.root,\n                rootMargin = _ref6.rootMargin,\n                centerY = _ref6.centerY,\n                scale = _ref6.scale,\n                centerX = _ref6.centerX;\n            return \"translate(\".concat(centerX, \",\").concat(rootMargin, \") scale(\").concat(scale, \")\");\n          },\n          \"nodeFlexSize\": function nodeFlexSize(_ref7) {\n            var height = _ref7.height,\n                width = _ref7.width,\n                siblingsMargin = _ref7.siblingsMargin,\n                childrenMargin = _ref7.childrenMargin,\n                state = _ref7.state,\n                node = _ref7.node,\n                compactViewIndex = _ref7.compactViewIndex;\n\n            if (state.compact && node.flexCompactDim) {\n              var result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [width + siblingsMargin, height + childrenMargin];\n          },\n          \"zoomTransform\": function zoomTransform(_ref8) {\n            var centerX = _ref8.centerX,\n                scale = _ref8.scale;\n            return \"translate(\".concat(centerX, \",0}) scale(\").concat(scale, \")\");\n          },\n          \"diagonal\": this.diagonal.bind(this),\n          \"swap\": function swap(d) {},\n          \"nodeUpdateTransform\": function nodeUpdateTransform(_ref9) {\n            var x = _ref9.x,\n                y = _ref9.y,\n                width = _ref9.width,\n                height = _ref9.height;\n            return \"translate(\".concat(x - width / 2, \",\").concat(y, \")\");\n          }\n        },\n        \"bottom\": {\n          \"nodeLeftX\": function nodeLeftX(node) {\n            return -node.width / 2;\n          },\n          \"nodeRightX\": function nodeRightX(node) {\n            return node.width / 2;\n          },\n          \"nodeTopY\": function nodeTopY(node) {\n            return -node.height;\n          },\n          \"nodeBottomY\": function nodeBottomY(node) {\n            return 0;\n          },\n          \"nodeJoinX\": function nodeJoinX(node) {\n            return node.x - node.width / 2;\n          },\n          \"nodeJoinY\": function nodeJoinY(node) {\n            return node.y - node.height - node.height;\n          },\n          \"linkJoinX\": function linkJoinX(node) {\n            return node.x;\n          },\n          \"linkJoinY\": function linkJoinY(node) {\n            return node.y - node.height;\n          },\n          \"linkCompactXStart\": function linkCompactXStart(node) {\n            return node.x + (node.compactEven ? node.width / 2 : -node.width / 2);\n          },\n          \"linkCompactYStart\": function linkCompactYStart(node) {\n            return node.y - node.height / 2;\n          },\n          \"compactLinkMidX\": function compactLinkMidX(node, state) {\n            return node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4;\n          },\n          \"compactLinkMidY\": function compactLinkMidY(node) {\n            return node.firstCompactNode.y;\n          },\n          \"linkX\": function linkX(node) {\n            return node.x;\n          },\n          \"linkY\": function linkY(node) {\n            return node.y;\n          },\n          \"compactDimension\": {\n            sizeColumn: function sizeColumn(node) {\n              return node.width;\n            },\n            sizeRow: function sizeRow(node) {\n              return node.height;\n            },\n            reverse: function reverse(arr) {\n              return arr;\n            }\n          },\n          \"linkParentX\": function linkParentX(node) {\n            return node.parent.x;\n          },\n          \"linkParentY\": function linkParentY(node) {\n            return node.parent.y - node.parent.height;\n          },\n          \"buttonX\": function buttonX(node) {\n            return node.width / 2;\n          },\n          \"buttonY\": function buttonY(node) {\n            return 0;\n          },\n          \"centerTransform\": function centerTransform(_ref10) {\n            var root = _ref10.root,\n                rootMargin = _ref10.rootMargin,\n                centerY = _ref10.centerY,\n                scale = _ref10.scale,\n                centerX = _ref10.centerX,\n                chartHeight = _ref10.chartHeight;\n            return \"translate(\".concat(centerX, \",\").concat(chartHeight - rootMargin, \") scale(\").concat(scale, \")\");\n          },\n          \"nodeFlexSize\": function nodeFlexSize(_ref11) {\n            var height = _ref11.height,\n                width = _ref11.width,\n                siblingsMargin = _ref11.siblingsMargin,\n                childrenMargin = _ref11.childrenMargin,\n                state = _ref11.state,\n                node = _ref11.node;\n\n            if (state.compact && node.flexCompactDim) {\n              var result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [width + siblingsMargin, height + childrenMargin];\n          },\n          \"zoomTransform\": function zoomTransform(_ref12) {\n            var centerX = _ref12.centerX,\n                scale = _ref12.scale;\n            return \"translate(\".concat(centerX, \",0}) scale(\").concat(scale, \")\");\n          },\n          \"diagonal\": this.diagonal.bind(this),\n          \"swap\": function swap(d) {\n            d.y = -d.y;\n          },\n          \"nodeUpdateTransform\": function nodeUpdateTransform(_ref13) {\n            var x = _ref13.x,\n                y = _ref13.y,\n                width = _ref13.width,\n                height = _ref13.height;\n            return \"translate(\".concat(x - width / 2, \",\").concat(y - height, \")\");\n          }\n        },\n        \"right\": {\n          \"nodeLeftX\": function nodeLeftX(node) {\n            return -node.width;\n          },\n          \"nodeRightX\": function nodeRightX(node) {\n            return 0;\n          },\n          \"nodeTopY\": function nodeTopY(node) {\n            return -node.height / 2;\n          },\n          \"nodeBottomY\": function nodeBottomY(node) {\n            return node.height / 2;\n          },\n          \"nodeJoinX\": function nodeJoinX(node) {\n            return node.x - node.width - node.width;\n          },\n          \"nodeJoinY\": function nodeJoinY(node) {\n            return node.y - node.height / 2;\n          },\n          \"linkJoinX\": function linkJoinX(node) {\n            return node.x - node.width;\n          },\n          \"linkJoinY\": function linkJoinY(node) {\n            return node.y;\n          },\n          \"linkX\": function linkX(node) {\n            return node.x;\n          },\n          \"linkY\": function linkY(node) {\n            return node.y;\n          },\n          \"linkParentX\": function linkParentX(node) {\n            return node.parent.x - node.parent.width;\n          },\n          \"linkParentY\": function linkParentY(node) {\n            return node.parent.y;\n          },\n          \"buttonX\": function buttonX(node) {\n            return 0;\n          },\n          \"buttonY\": function buttonY(node) {\n            return node.height / 2;\n          },\n          \"linkCompactXStart\": function linkCompactXStart(node) {\n            return node.x - node.width / 2;\n          },\n          //node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n          \"linkCompactYStart\": function linkCompactYStart(node) {\n            return node.y + (node.compactEven ? node.height / 2 : -node.height / 2);\n          },\n          \"compactLinkMidX\": function compactLinkMidX(node, state) {\n            return node.firstCompactNode.x;\n          },\n          // node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n          \"compactLinkMidY\": function compactLinkMidY(node, state) {\n            return node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4;\n          },\n          \"centerTransform\": function centerTransform(_ref14) {\n            var root = _ref14.root,\n                rootMargin = _ref14.rootMargin,\n                centerY = _ref14.centerY,\n                scale = _ref14.scale,\n                centerX = _ref14.centerX,\n                chartWidth = _ref14.chartWidth;\n            return \"translate(\".concat(chartWidth - rootMargin, \",\").concat(centerY, \") scale(\").concat(scale, \")\");\n          },\n          \"nodeFlexSize\": function nodeFlexSize(_ref15) {\n            var height = _ref15.height,\n                width = _ref15.width,\n                siblingsMargin = _ref15.siblingsMargin,\n                childrenMargin = _ref15.childrenMargin,\n                state = _ref15.state,\n                node = _ref15.node;\n\n            if (state.compact && node.flexCompactDim) {\n              var result = [node.flexCompactDim[0], node.flexCompactDim[1]];\n              return result;\n            }\n\n            ;\n            return [height + siblingsMargin, width + childrenMargin];\n          },\n          \"compactDimension\": {\n            sizeColumn: function sizeColumn(node) {\n              return node.height;\n            },\n            sizeRow: function sizeRow(node) {\n              return node.width;\n            },\n            reverse: function reverse(arr) {\n              return arr.slice().reverse();\n            }\n          },\n          \"zoomTransform\": function zoomTransform(_ref16) {\n            var centerY = _ref16.centerY,\n                scale = _ref16.scale;\n            return \"translate(\".concat(0, \",\", centerY, \") scale(\").concat(scale, \")\");\n          },\n          \"diagonal\": this.hdiagonal.bind(this),\n          \"swap\": function swap(d) {\n            var x = d.x;\n            d.x = -d.y;\n            d.y = x;\n          },\n          \"nodeUpdateTransform\": function nodeUpdateTransform(_ref17) {\n            var x = _ref17.x,\n                y = _ref17.y,\n                width = _ref17.width,\n                height = _ref17.height;\n            return \"translate(\".concat(x - width, \",\").concat(y - height / 2, \")\");\n          }\n        }\n      }\n    };\n\n    this.getChartState = function () {\n      return attrs;\n    }; // Dynamically set getter and setter functions for Chart class\n\n\n    Object.keys(attrs).forEach(function (key) {\n      //@ts-ignore\n      _this2[key] = function (_) {\n        if (!arguments.length) {\n          return attrs[key];\n        } else {\n          attrs[key] = _;\n        }\n\n        return this;\n      };\n    });\n    this.initializeEnterExitUpdatePattern();\n  }\n\n  _createClass(OrgChart, [{\n    key: \"initializeEnterExitUpdatePattern\",\n    value: function initializeEnterExitUpdatePattern() {\n      d3.selection.prototype.patternify = function (params) {\n        var container = this;\n        var selector = params.selector;\n        var elementTag = params.tag;\n        var data = params.data || [selector]; // Pattern in action\n\n        var selection = container.selectAll(\".\" + selector).data(data, function (d, i) {\n          if (typeof d === \"object\") {\n            if (d.id) {\n              return d.id;\n            }\n          }\n\n          return i;\n        });\n        selection.exit().remove();\n        selection = selection.enter().append(elementTag).merge(selection);\n        selection.attr(\"class\", selector);\n        return selection;\n      };\n    } // This method retrieves passed node's children IDs (including node)\n\n  }, {\n    key: \"getNodeChildren\",\n    value: function getNodeChildren(_ref18, nodeStore) {\n      var _this3 = this;\n\n      var data = _ref18.data,\n          children = _ref18.children,\n          _children = _ref18._children;\n      // Store current node ID\n      nodeStore.push(data); // Loop over children and recursively store descendants id (expanded nodes)\n\n      if (children) {\n        children.forEach(function (d) {\n          _this3.getNodeChildren(d, nodeStore);\n        });\n      } // Loop over _children and recursively store descendants id (collapsed nodes)\n\n\n      if (_children) {\n        _children.forEach(function (d) {\n          _this3.getNodeChildren(d, nodeStore);\n        });\n      } // Return result\n\n\n      return nodeStore;\n    } // This method can be invoked via chart.setZoomFactor API, it zooms to particulat scale\n\n  }, {\n    key: \"initialZoom\",\n    value: function initialZoom(zoomLevel) {\n      var attrs = this.getChartState();\n      attrs.lastTransform.k = zoomLevel;\n      return this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      //InnerFunctions which will update visuals\n      var attrs = this.getChartState();\n\n      if (!attrs.data || attrs.data.length == 0) {\n        console.log('ORG CHART - Data is empty');\n        return this;\n      } //Drawing containers\n\n\n      var container = d3.select(attrs.container);\n      var containerRect = container.node().getBoundingClientRect();\n      if (containerRect.width > 0) attrs.svgWidth = containerRect.width; //Calculated properties\n\n      var calc = {\n        id: \"ID\".concat(Math.floor(Math.random() * 1000000)),\n        // id for event handlings,\n        chartWidth: attrs.svgWidth,\n        chartHeight: attrs.svgHeight\n      };\n      attrs.calc = calc; // Calculate max node depth (it's needed for layout heights calculation)\n\n      calc.centerX = calc.chartWidth / 2;\n      calc.centerY = calc.chartHeight / 2; // ******************* BEHAVIORS  **********************\n\n      if (attrs.firstDraw) {\n        var behaviors = {\n          zoom: null\n        }; // Get zooming function\n\n        behaviors.zoom = d3.zoom().on(\"zoom\", function (event, d) {\n          return _this4.zoomed(event, d);\n        }).scaleExtent(attrs.scaleExtent);\n        attrs.zoomBehavior = behaviors.zoom;\n      } //****************** ROOT node work ************************\n\n\n      attrs.flexTreeLayout = flextree({\n        nodeSize: function nodeSize(node) {\n          var width = attrs.nodeWidth(node);\n          ;\n          var height = attrs.nodeHeight(node);\n          var siblingsMargin = attrs.siblingsMargin(node);\n          var childrenMargin = attrs.childrenMargin(node);\n          return attrs.layoutBindings[attrs.layout].nodeFlexSize({\n            state: attrs,\n            node: node,\n            width: width,\n            height: height,\n            siblingsMargin: siblingsMargin,\n            childrenMargin: childrenMargin\n          });\n        }\n      }).spacing(function (nodeA, nodeB) {\n        return nodeA.parent == nodeB.parent ? 0 : attrs.neightbourMargin(nodeA, nodeB);\n      });\n      this.setLayouts({\n        expandNodesFirst: false\n      }); // *************************  DRAWING **************************\n      //Add svg\n\n      var svg = container.patternify({\n        tag: \"svg\",\n        selector: \"svg-chart-container\"\n      }).style('background-color', attrs.backgroundColor).attr(\"width\", attrs.svgWidth).attr(\"height\", attrs.svgHeight).attr(\"font-family\", attrs.defaultFont);\n\n      if (attrs.firstDraw) {\n        svg.call(attrs.zoomBehavior).on(\"dblclick.zoom\", null).attr(\"cursor\", \"move\");\n      }\n\n      attrs.svg = svg; //Add container g element\n\n      var chart = svg.patternify({\n        tag: \"g\",\n        selector: \"chart\"\n      }); // Add one more container g element, for better positioning controls\n\n      attrs.centerG = chart.patternify({\n        tag: \"g\",\n        selector: \"center-group\"\n      });\n      attrs.linksWrapper = attrs.centerG.patternify({\n        tag: \"g\",\n        selector: \"links-wrapper\"\n      });\n      attrs.nodesWrapper = attrs.centerG.patternify({\n        tag: \"g\",\n        selector: \"nodes-wrapper\"\n      });\n      attrs.connectionsWrapper = attrs.centerG.patternify({\n        tag: \"g\",\n        selector: \"connections-wrapper\"\n      });\n      attrs.defsWrapper = svg.patternify({\n        tag: \"g\",\n        selector: \"defs-wrapper\"\n      });\n\n      if (attrs.firstDraw) {\n        attrs.centerG.attr(\"transform\", function () {\n          return attrs.layoutBindings[attrs.layout].centerTransform({\n            centerX: calc.centerX,\n            centerY: calc.centerY,\n            scale: attrs.lastTransform.k,\n            rootMargin: attrs.rootMargin,\n            root: attrs.root,\n            chartHeight: calc.chartHeight,\n            chartWidth: calc.chartWidth\n          });\n        });\n      }\n\n      attrs.chart = chart; // Display tree contenrs\n\n      this.update(attrs.root); //#########################################  UTIL FUNCS ##################################\n      // This function restyles foreign object elements ()\n\n      d3.select(window).on(\"resize.\".concat(attrs.id), function () {\n        var containerRect = d3.select(attrs.container).node().getBoundingClientRect();\n        attrs.svg.attr('width', containerRect.width);\n      });\n\n      if (attrs.firstDraw) {\n        attrs.firstDraw = false;\n      }\n\n      return this;\n    } // This function can be invoked via chart.addNode API, and it adds node in tree at runtime\n\n  }, {\n    key: \"addNode\",\n    value: function addNode(obj) {\n      var attrs = this.getChartState();\n      var nodeFound = attrs.allNodes.filter(function (_ref19) {\n        var data = _ref19.data;\n        return attrs.nodeId(data) === attrs.nodeId(obj);\n      })[0];\n      var parentFound = attrs.allNodes.filter(function (_ref20) {\n        var data = _ref20.data;\n        return attrs.nodeId(data) === attrs.parentNodeId(obj);\n      })[0];\n\n      if (nodeFound) {\n        console.log(\"ORG CHART - ADD - Node with id \\\"\".concat(attrs.nodeId(obj), \"\\\" already exists in tree\"));\n        return this;\n      }\n\n      if (!parentFound) {\n        console.log(\"ORG CHART - ADD - Parent node with id \\\"\".concat(attrs.parentNodeId(obj), \"\\\" not found in the tree\"));\n        return this;\n      }\n\n      if (obj._centered && !obj._expanded) obj._expanded = true;\n      attrs.data.push(obj); // Update state of nodes and redraw graph\n\n      this.updateNodesState();\n      return this;\n    } // This function can be invoked via chart.removeNode API, and it removes node from tree at runtime\n\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(nodeId) {\n      var attrs = this.getChartState();\n      var node = attrs.allNodes.filter(function (_ref21) {\n        var data = _ref21.data;\n        return attrs.nodeId(data) == nodeId;\n      })[0];\n\n      if (!node) {\n        console.log(\"ORG CHART - REMOVE - Node with id \\\"\".concat(nodeId, \"\\\" not found in the tree\"));\n        return this;\n      } // Remove all node childs\n      // Retrieve all children nodes ids (including current node itself)\n\n\n      node.descendants().forEach(function (d) {\n        return d.data._filteredOut = true;\n      });\n      var descendants = this.getNodeChildren(node, [], attrs.nodeId);\n      descendants.forEach(function (d) {\n        return d._filtered = true;\n      }); // Filter out retrieved nodes and reassign data\n\n      attrs.data = attrs.data.filter(function (d) {\n        return !d._filtered;\n      });\n      var updateNodesState = this.updateNodesState.bind(this); // Update state of nodes and redraw graph\n\n      updateNodesState();\n      return this;\n    }\n  }, {\n    key: \"groupBy\",\n    value: function groupBy(array, accessor, aggegator) {\n      var grouped = {};\n      array.forEach(function (item) {\n        var key = accessor(item);\n\n        if (!grouped[key]) {\n          grouped[key] = [];\n        }\n\n        grouped[key].push(item);\n      });\n      Object.keys(grouped).forEach(function (key) {\n        grouped[key] = aggegator(grouped[key]);\n      });\n      return Object.entries(grouped);\n    }\n  }, {\n    key: \"calculateCompactFlexDimensions\",\n    value: function calculateCompactFlexDimensions(root) {\n      var _this5 = this;\n\n      var attrs = this.getChartState();\n      root.eachBefore(function (node) {\n        node.firstCompact = null;\n        node.compactEven = null;\n        node.flexCompactDim = null;\n        node.firstCompactNode = null;\n      });\n      root.eachBefore(function (node) {\n        if (node.children && node.children.length > 1) {\n          var compactChildren = node.children.filter(function (d) {\n            return !d.children;\n          });\n          if (compactChildren.length < 2) return;\n          compactChildren.forEach(function (child, i) {\n            if (!i) child.firstCompact = true;\n            if (i % 2) child.compactEven = false;else child.compactEven = true;\n            child.row = Math.floor(i / 2);\n          });\n          var evenMaxColumnDimension = d3.max(compactChildren.filter(function (d) {\n            return d.compactEven;\n          }), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n          var oddMaxColumnDimension = d3.max(compactChildren.filter(function (d) {\n            return !d.compactEven;\n          }), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n          var columnSize = Math.max(evenMaxColumnDimension, oddMaxColumnDimension) * 2;\n\n          var rowsMapNew = _this5.groupBy(compactChildren, function (d) {\n            return d.row;\n          }, function (reducedGroup) {\n            return d3.max(reducedGroup, function (d) {\n              return attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d) + attrs.compactMarginBetween(d);\n            });\n          });\n\n          var rowSize = d3.sum(rowsMapNew.map(function (v) {\n            return v[1];\n          }));\n          compactChildren.forEach(function (node) {\n            node.firstCompactNode = compactChildren[0];\n\n            if (node.firstCompact) {\n              node.flexCompactDim = [columnSize + attrs.compactMarginPair(node), rowSize - attrs.compactMarginBetween(node)];\n            } else {\n              node.flexCompactDim = [0, 0];\n            }\n          });\n          node.flexCompactDim = null;\n        }\n      });\n    }\n  }, {\n    key: \"calculateCompactFlexPositions\",\n    value: function calculateCompactFlexPositions(root) {\n      var _this6 = this;\n\n      var attrs = this.getChartState();\n      root.eachBefore(function (node) {\n        if (node.children) {\n          var compactChildren = node.children.filter(function (d) {\n            return d.flexCompactDim;\n          });\n          var fch = compactChildren[0];\n          if (!fch) return;\n          compactChildren.forEach(function (child, i, arr) {\n            if (i == 0) fch.x -= fch.flexCompactDim[0] / 2;\n            if (i & i % 2 - 1) child.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(child) / 4;else if (i) child.x = fch.x + fch.flexCompactDim[0] * 0.75 + attrs.compactMarginPair(child) / 4;\n          });\n          var centerX = fch.x + fch.flexCompactDim[0] * 0.5;\n          fch.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(fch) / 4;\n          var offsetX = node.x - centerX;\n\n          if (Math.abs(offsetX) < 10) {\n            compactChildren.forEach(function (d) {\n              return d.x += offsetX;\n            });\n          }\n\n          var rowsMapNew = _this6.groupBy(compactChildren, function (d) {\n            return d.row;\n          }, function (reducedGroup) {\n            return d3.max(reducedGroup, function (d) {\n              return attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d);\n            });\n          });\n\n          var cumSum = d3.cumsum(rowsMapNew.map(function (d) {\n            return d[1] + attrs.compactMarginBetween(d);\n          }));\n          compactChildren.forEach(function (node, i) {\n            if (node.row) {\n              node.y = fch.y + cumSum[node.row - 1];\n            } else {\n              node.y = fch.y;\n            }\n          });\n        }\n      });\n    } // This function basically redraws visible graph, based on nodes state\n\n  }, {\n    key: \"update\",\n    value: function update(_ref22) {\n      var _this7 = this;\n\n      var x0 = _ref22.x0,\n          y0 = _ref22.y0,\n          _ref22$x = _ref22.x,\n          x = _ref22$x === void 0 ? 0 : _ref22$x,\n          _ref22$y = _ref22.y,\n          y = _ref22$y === void 0 ? 0 : _ref22$y,\n          width = _ref22.width,\n          height = _ref22.height;\n      var attrs = this.getChartState();\n      var calc = attrs.calc;\n\n      if (attrs.compact) {\n        this.calculateCompactFlexDimensions(attrs.root);\n      } //  Assigns the x and y position for the nodes\n\n\n      var treeData = attrs.flexTreeLayout(attrs.root); // Reassigns the x and y position for the based on the compact layout\n\n      if (attrs.compact) {\n        this.calculateCompactFlexPositions(attrs.root);\n      }\n\n      var nodes = treeData.descendants(); // console.table(nodes.map(d => ({ x: d.x, y: d.y, width: d.width, height: d.height, flexCompactDim: d.flexCompactDim + \"\" })))\n      // Get all links\n\n      var links = treeData.descendants().slice(1);\n      nodes.forEach(attrs.layoutBindings[attrs.layout].swap); // Connections\n\n      var connections = attrs.connections;\n      var allNodesMap = {};\n      attrs.allNodes.forEach(function (d) {\n        return allNodesMap[attrs.nodeId(d.data)] = d;\n      });\n      var visibleNodesMap = {};\n      nodes.forEach(function (d) {\n        return visibleNodesMap[attrs.nodeId(d.data)] = d;\n      });\n      connections.forEach(function (connection) {\n        var source = allNodesMap[connection.from];\n        var target = allNodesMap[connection.to];\n        connection._source = source;\n        connection._target = target;\n      });\n      var visibleConnections = connections.filter(function (d) {\n        return visibleNodesMap[d.from] && visibleNodesMap[d.to];\n      });\n      var defsString = attrs.defs.bind(this)(attrs, visibleConnections);\n      var existingString = attrs.defsWrapper.html();\n\n      if (defsString !== existingString) {\n        attrs.defsWrapper.html(defsString);\n      } // --------------------------  LINKS ----------------------\n      // Get links selection\n\n\n      var linkSelection = attrs.linksWrapper.selectAll(\"path.link\").data(links, function (d) {\n        return attrs.nodeId(d.data);\n      }); // Enter any new links at the parent's previous position.\n\n      var linkEnter = linkSelection.enter().insert(\"path\", \"g\").attr(\"class\", \"link\").attr(\"d\", function (d) {\n        var xo = attrs.layoutBindings[attrs.layout].linkJoinX({\n          x: x0,\n          y: y0,\n          width: width,\n          height: height\n        });\n        var yo = attrs.layoutBindings[attrs.layout].linkJoinY({\n          x: x0,\n          y: y0,\n          width: width,\n          height: height\n        });\n        var o = {\n          x: xo,\n          y: yo\n        };\n        return attrs.layoutBindings[attrs.layout].diagonal(o, o, o);\n      }); // Get links update selection\n\n      var linkUpdate = linkEnter.merge(linkSelection); // Styling links\n\n      linkUpdate.attr(\"fill\", \"none\"); // Allow external modifications\n\n      linkUpdate.each(attrs.linkUpdate); // Transition back to the parent element position\n\n      linkUpdate.transition().duration(attrs.duration).attr(\"d\", function (d) {\n        var n = attrs.compact && d.flexCompactDim ? {\n          x: attrs.layoutBindings[attrs.layout].compactLinkMidX(d, attrs),\n          y: attrs.layoutBindings[attrs.layout].compactLinkMidY(d, attrs)\n        } : {\n          x: attrs.layoutBindings[attrs.layout].linkX(d),\n          y: attrs.layoutBindings[attrs.layout].linkY(d)\n        };\n        var p = {\n          x: attrs.layoutBindings[attrs.layout].linkParentX(d),\n          y: attrs.layoutBindings[attrs.layout].linkParentY(d)\n        };\n        var m = attrs.compact && d.flexCompactDim ? {\n          x: attrs.layoutBindings[attrs.layout].linkCompactXStart(d),\n          y: attrs.layoutBindings[attrs.layout].linkCompactYStart(d)\n        } : n;\n        return attrs.layoutBindings[attrs.layout].diagonal(n, p, m);\n      }); // Remove any  links which is exiting after animation\n\n      var linkExit = linkSelection.exit().transition().duration(attrs.duration).attr(\"d\", function (d) {\n        var xo = attrs.layoutBindings[attrs.layout].linkJoinX({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n        var yo = attrs.layoutBindings[attrs.layout].linkJoinY({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n        var o = {\n          x: xo,\n          y: yo\n        };\n        return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n      }).remove(); // --------------------------  CONNECTIONS ----------------------\n\n      var connectionsSel = attrs.connectionsWrapper.selectAll(\"path.connection\").data(visibleConnections); // Enter any new connections at the parent's previous position.\n\n      var connEnter = connectionsSel.enter().insert(\"path\", \"g\").attr(\"class\", \"connection\").attr(\"d\", function (d) {\n        var xo = attrs.layoutBindings[attrs.layout].linkJoinX({\n          x: x0,\n          y: y0,\n          width: width,\n          height: height\n        });\n        var yo = attrs.layoutBindings[attrs.layout].linkJoinY({\n          x: x0,\n          y: y0,\n          width: width,\n          height: height\n        });\n        var o = {\n          x: xo,\n          y: yo\n        };\n        return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n      }); // Get connections update selection\n\n      var connUpdate = connEnter.merge(connectionsSel); // Styling connections\n\n      connUpdate.attr(\"fill\", \"none\"); // Transition back to the parent element position\n\n      connUpdate.transition().duration(attrs.duration).attr('d', function (d) {\n        var xs = attrs.layoutBindings[attrs.layout].linkX({\n          x: d._source.x,\n          y: d._source.y,\n          width: d._source.width,\n          height: d._source.height\n        });\n        var ys = attrs.layoutBindings[attrs.layout].linkY({\n          x: d._source.x,\n          y: d._source.y,\n          width: d._source.width,\n          height: d._source.height\n        });\n        var xt = attrs.layoutBindings[attrs.layout].linkJoinX({\n          x: d._target.x,\n          y: d._target.y,\n          width: d._target.width,\n          height: d._target.height\n        });\n        var yt = attrs.layoutBindings[attrs.layout].linkJoinY({\n          x: d._target.x,\n          y: d._target.y,\n          width: d._target.width,\n          height: d._target.height\n        });\n        return attrs.linkGroupArc({\n          source: {\n            x: xs,\n            y: ys\n          },\n          target: {\n            x: xt,\n            y: yt\n          }\n        });\n      }); // Allow external modifications\n\n      connUpdate.each(attrs.connectionsUpdate); // Remove any  links which is exiting after animation\n\n      var connExit = connectionsSel.exit().transition().duration(attrs.duration).attr('opacity', 0).remove(); // --------------------------  NODES ----------------------\n      // Get nodes selection\n\n      var nodesSelection = attrs.nodesWrapper.selectAll(\"g.node\").data(nodes, function (_ref23) {\n        var data = _ref23.data;\n        return attrs.nodeId(data);\n      }); // Enter any new nodes at the parent's previous position.\n\n      var nodeEnter = nodesSelection.enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n        if (d == attrs.root) return \"translate(\".concat(x0, \",\").concat(y0, \")\");\n        var xj = attrs.layoutBindings[attrs.layout].nodeJoinX({\n          x: x0,\n          y: y0,\n          width: width,\n          height: height\n        });\n        var yj = attrs.layoutBindings[attrs.layout].nodeJoinY({\n          x: x0,\n          y: y0,\n          width: width,\n          height: height\n        });\n        return \"translate(\".concat(xj, \",\").concat(yj, \")\");\n      }).attr(\"cursor\", \"pointer\").on(\"click\", function (event, _ref24) {\n        var data = _ref24.data;\n\n        if (_toConsumableArray(event.srcElement.classList).includes(\"node-button-foreign-object\")) {\n          return;\n        }\n\n        attrs.onNodeClick(attrs.nodeId(data));\n      }); // Add background rectangle for the nodes\n\n      nodeEnter.patternify({\n        tag: \"rect\",\n        selector: \"node-rect\",\n        data: function data(d) {\n          return [d];\n        }\n      }); // Node update styles\n\n      var nodeUpdate = nodeEnter.merge(nodesSelection).style(\"font\", \"12px sans-serif\"); // Add foreignObject element inside rectangle\n\n      var fo = nodeUpdate.patternify({\n        tag: \"foreignObject\",\n        selector: \"node-foreign-object\",\n        data: function data(d) {\n          return [d];\n        }\n      }).style('overflow', 'visible'); // Add foreign object\n\n      fo.patternify({\n        tag: \"xhtml:div\",\n        selector: \"node-foreign-object-div\",\n        data: function data(d) {\n          return [d];\n        }\n      });\n      this.restyleForeignObjectElements(); // Add Node button circle's group (expand-collapse button)\n\n      var nodeButtonGroups = nodeEnter.patternify({\n        tag: \"g\",\n        selector: \"node-button-g\",\n        data: function data(d) {\n          return [d];\n        }\n      }).on(\"click\", function (event, d) {\n        return _this7.onButtonClick(event, d);\n      });\n      nodeButtonGroups.patternify({\n        tag: 'rect',\n        selector: 'node-button-rect',\n        data: function data(d) {\n          return [d];\n        }\n      }).attr('opacity', 0).attr('pointer-events', 'all').attr('width', 40).attr('height', 40).attr('x', -20).attr('y', -20); // Add expand collapse button content\n\n      var nodeFo = nodeButtonGroups.patternify({\n        tag: \"foreignObject\",\n        selector: \"node-button-foreign-object\",\n        data: function data(d) {\n          return [d];\n        }\n      }).attr('width', 40).attr('height', 40).attr('x', -20).attr('y', -20).style('overflow', 'visible').patternify({\n        tag: \"xhtml:div\",\n        selector: \"node-button-div\",\n        data: function data(d) {\n          return [d];\n        }\n      }).style('pointer-events', 'none').style('display', 'flex').style('width', '100%').style('height', '100%'); // Transition to the proper position for the node\n\n      nodeUpdate.transition().attr(\"opacity\", 0).duration(attrs.duration).attr(\"transform\", function (_ref25) {\n        var x = _ref25.x,\n            y = _ref25.y,\n            width = _ref25.width,\n            height = _ref25.height;\n        return attrs.layoutBindings[attrs.layout].nodeUpdateTransform({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }).attr(\"opacity\", 1); // Style node rectangles\n\n      nodeUpdate.select(\".node-rect\").attr(\"width\", function (_ref26) {\n        var width = _ref26.width;\n        return width;\n      }).attr(\"height\", function (_ref27) {\n        var height = _ref27.height;\n        return height;\n      }).attr(\"x\", function (_ref28) {\n        var width = _ref28.width;\n        return 0;\n      }).attr(\"y\", function (_ref29) {\n        var height = _ref29.height;\n        return 0;\n      }).attr(\"cursor\", \"pointer\").attr('rx', 3).attr(\"fill\", attrs.nodeDefaultBackground); // Move node button group to the desired position\n\n      nodeUpdate.select(\".node-button-g\").attr(\"transform\", function (_ref30) {\n        var data = _ref30.data,\n            width = _ref30.width,\n            height = _ref30.height;\n        var x = attrs.layoutBindings[attrs.layout].buttonX({\n          width: width,\n          height: height\n        });\n        var y = attrs.layoutBindings[attrs.layout].buttonY({\n          width: width,\n          height: height\n        });\n        return \"translate(\".concat(x, \",\").concat(y, \")\");\n      }).attr(\"display\", function (_ref31) {\n        var data = _ref31.data;\n        return data._directSubordinates > 0 ? null : 'none';\n      }).attr(\"opacity\", function (_ref32) {\n        var children = _ref32.children,\n            _children = _ref32._children;\n\n        if (children || _children) {\n          return 1;\n        }\n\n        return 0;\n      }); // Restyle node button circle\n\n      nodeUpdate.select(\".node-button-foreign-object .node-button-div\").html(function (node) {\n        return attrs.buttonContent({\n          node: node,\n          state: attrs\n        });\n      }); // Restyle button texts\n\n      nodeUpdate.select(\".node-button-text\").attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").attr(\"fill\", attrs.defaultTextFill).attr(\"font-size\", function (_ref33) {\n        var children = _ref33.children;\n        if (children) return 40;\n        return 26;\n      }).text(function (_ref34) {\n        var children = _ref34.children;\n        if (children) return \"-\";\n        return \"+\";\n      }).attr(\"y\", this.isEdge() ? 10 : 0);\n      nodeUpdate.each(attrs.nodeUpdate); // Remove any exiting nodes after transition\n\n      var nodeExitTransition = nodesSelection.exit().attr(\"opacity\", 1).transition().duration(attrs.duration).attr(\"transform\", function (d) {\n        var ex = attrs.layoutBindings[attrs.layout].nodeJoinX({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n        var ey = attrs.layoutBindings[attrs.layout].nodeJoinY({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n        return \"translate(\".concat(ex, \",\").concat(ey, \")\");\n      }).on(\"end\", function () {\n        d3.select(this).remove();\n      }).attr(\"opacity\", 0); // Store the old positions for transition.\n\n      nodes.forEach(function (d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      }); // CHECK FOR CENTERING\n\n      var centeredNode = attrs.allNodes.filter(function (d) {\n        return d.data._centered;\n      })[0];\n\n      if (centeredNode) {\n        var centeredNodes = centeredNode.data._centeredWithDescendants ? centeredNode.descendants().filter(function (d, i) {\n          return i < 7;\n        }) : [centeredNode];\n        centeredNode.data._centeredWithDescendants = null;\n        centeredNode.data._centered = null;\n        this.fit({\n          animate: true,\n          scale: false,\n          nodes: centeredNodes\n        });\n      }\n    } // This function detects whether current browser is edge\n\n  }, {\n    key: \"isEdge\",\n    value: function isEdge() {\n      return window.navigator.userAgent.includes(\"Edge\");\n    } // Generate horizontal diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges-horizontal-d3-v3-v4-v5-v6\n\n  }, {\n    key: \"hdiagonal\",\n    value: function hdiagonal(s, t, m) {\n      // Define source and target x,y coordinates\n      var x = s.x;\n      var y = s.y;\n      var ex = t.x;\n      var ey = t.y;\n      var mx = m && m.x || x;\n      var my = m && m.y || y; // Values in case of top reversed and left reversed diagonals\n\n      var xrvs = ex - x < 0 ? -1 : 1;\n      var yrvs = ey - y < 0 ? -1 : 1; // Define preferred curve radius\n\n      var rdef = 35; // Reduce curve radius, if source-target x space is smaller\n\n      var r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef; // Further reduce curve radius, is y space is more small\n\n      r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r; // Defin width and height of link, excluding radius\n\n      var h = Math.abs(ey - y) / 2 - r;\n      var w = Math.abs(ex - x) / 2 - r; // Build and return custom arc command\n\n      return \"\\n                  M \".concat(mx, \" \").concat(my, \"\\n                  L \").concat(mx, \" \").concat(y, \"\\n                  L \").concat(x, \" \").concat(y, \"\\n                  L \").concat(x + w * xrvs, \" \").concat(y, \"\\n                  C \").concat(x + w * xrvs + r * xrvs, \" \").concat(y, \" \\n                    \").concat(x + w * xrvs + r * xrvs, \" \").concat(y, \" \\n                    \").concat(x + w * xrvs + r * xrvs, \" \").concat(y + r * yrvs, \"\\n                  L \").concat(x + w * xrvs + r * xrvs, \" \").concat(ey - r * yrvs, \" \\n                  C \").concat(x + w * xrvs + r * xrvs, \"  \").concat(ey, \" \\n                    \").concat(x + w * xrvs + r * xrvs, \"  \").concat(ey, \" \\n                    \").concat(ex - w * xrvs, \"  \").concat(ey, \"\\n                  L \").concat(ex, \" \").concat(ey, \"\\n       \");\n    } // Generate custom diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges\n\n  }, {\n    key: \"diagonal\",\n    value: function diagonal(s, t, m) {\n      var x = s.x;\n      var y = s.y;\n      var ex = t.x;\n      var ey = t.y;\n      var mx = m && m.x || x;\n      var my = m && m.y || y;\n      var xrvs = ex - x < 0 ? -1 : 1;\n      var yrvs = ey - y < 0 ? -1 : 1;\n      var rdef = 35;\n      var r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n      r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r;\n      var h = Math.abs(ey - y) / 2 - r;\n      var w = Math.abs(ex - x) - r * 2; //w=0;\n\n      var path = \"\\n                  M \".concat(mx, \" \").concat(my, \"\\n                  L \").concat(x, \" \").concat(my, \"\\n                  L \").concat(x, \" \").concat(y, \"\\n                  L \").concat(x, \" \").concat(y + h * yrvs, \"\\n                  C  \").concat(x, \" \").concat(y + h * yrvs + r * yrvs, \" \").concat(x, \" \").concat(y + h * yrvs + r * yrvs, \" \").concat(x + r * xrvs, \" \").concat(y + h * yrvs + r * yrvs, \"\\n                  L \").concat(x + w * xrvs + r * xrvs, \" \").concat(y + h * yrvs + r * yrvs, \"\\n                  C  \").concat(ex, \"  \").concat(y + h * yrvs + r * yrvs, \" \").concat(ex, \"  \").concat(y + h * yrvs + r * yrvs, \" \").concat(ex, \" \").concat(ey - h * yrvs, \"\\n                  L \").concat(ex, \" \").concat(ey, \"\\n       \");\n      return path;\n    }\n  }, {\n    key: \"restyleForeignObjectElements\",\n    value: function restyleForeignObjectElements() {\n      var attrs = this.getChartState();\n      attrs.svg.selectAll(\".node-foreign-object\").attr(\"width\", function (_ref35) {\n        var width = _ref35.width;\n        return width;\n      }).attr(\"height\", function (_ref36) {\n        var height = _ref36.height;\n        return height;\n      }).attr(\"x\", function (_ref37) {\n        var width = _ref37.width;\n        return 0;\n      }).attr(\"y\", function (_ref38) {\n        var height = _ref38.height;\n        return 0;\n      });\n      attrs.svg.selectAll(\".node-foreign-object-div\").style(\"width\", function (_ref39) {\n        var width = _ref39.width;\n        return \"\".concat(width, \"px\");\n      }).style(\"height\", function (_ref40) {\n        var height = _ref40.height;\n        return \"\".concat(height, \"px\");\n      }).html(function (d, i, arr) {\n        return attrs.nodeContent.bind(this)(d, i, arr, attrs);\n      });\n    } // Toggle children on click.\n\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick(event, d) {\n      var attrs = this.getChartState();\n\n      if (attrs.setActiveNodeCentered) {\n        d.data._centered = true;\n        d.data._centeredWithDescendants = true;\n      } // If childrens are expanded\n\n\n      if (d.children) {\n        //Collapse them\n        d._children = d.children;\n        d.children = null; // Set descendants expanded property to false\n\n        this.setExpansionFlagToChildren(d, false);\n      } else {\n        // Expand children\n        d.children = d._children;\n        d._children = null; // Set each children as expanded\n\n        if (d.children) {\n          d.children.forEach(function (_ref41) {\n            var data = _ref41.data;\n            return data._expanded = true;\n          });\n        }\n      } // Redraw Graph\n\n\n      this.update(d);\n    } // This function changes `expanded` property to descendants\n\n  }, {\n    key: \"setExpansionFlagToChildren\",\n    value: function setExpansionFlagToChildren(_ref42, flag) {\n      var _this8 = this;\n\n      var data = _ref42.data,\n          children = _ref42.children,\n          _children = _ref42._children;\n      // Set flag to the current property\n      data._expanded = flag; // Loop over and recursively update expanded children's descendants\n\n      if (children) {\n        children.forEach(function (d) {\n          _this8.setExpansionFlagToChildren(d, flag);\n        });\n      } // Loop over and recursively update collapsed children's descendants\n\n\n      if (_children) {\n        _children.forEach(function (d) {\n          _this8.setExpansionFlagToChildren(d, flag);\n        });\n      }\n    } // Method which only expands nodes, which have property set \"expanded=true\"\n\n  }, {\n    key: \"expandSomeNodes\",\n    value: function expandSomeNodes(d) {\n      var _this9 = this;\n\n      // If node has expanded property set\n      if (d.data._expanded) {\n        // Retrieve node's parent\n        var parent = d.parent; // While we can go up\n\n        while (parent) {\n          // Expand all current parent's children\n          if (parent._children) {\n            parent.children = parent._children;\n          } // Replace current parent holding object\n\n\n          parent = parent.parent;\n        }\n      } // Recursivelly do the same for collapsed nodes\n\n\n      if (d._children) {\n        d._children.forEach(function (ch) {\n          return _this9.expandSomeNodes(ch);\n        });\n      } // Recursivelly do the same for expanded nodes\n\n\n      if (d.children) {\n        d.children.forEach(function (ch) {\n          return _this9.expandSomeNodes(ch);\n        });\n      }\n    } // This function updates nodes state and redraws graph, usually after data change\n\n  }, {\n    key: \"updateNodesState\",\n    value: function updateNodesState() {\n      var attrs = this.getChartState();\n      this.setLayouts({\n        expandNodesFirst: true\n      }); // Redraw Graphs\n\n      this.update(attrs.root);\n    }\n  }, {\n    key: \"setLayouts\",\n    value: function setLayouts(_ref43) {\n      var _this10 = this;\n\n      var _ref43$expandNodesFir = _ref43.expandNodesFirst,\n          expandNodesFirst = _ref43$expandNodesFir === void 0 ? true : _ref43$expandNodesFir;\n      var attrs = this.getChartState(); // Store new root by converting flat data to hierarchy\n\n      attrs.root = d3.stratify().id(function (d) {\n        return attrs.nodeId(d);\n      }).parentId(function (d) {\n        return attrs.parentNodeId(d);\n      })(attrs.data);\n      attrs.root.each(function (node, i, arr) {\n        var width = attrs.nodeWidth(node);\n        var height = attrs.nodeHeight(node);\n        Object.assign(node, {\n          width: width,\n          height: height\n        });\n      }); // Store positions, where children appear during their enter animation\n\n      attrs.root.x0 = 0;\n      attrs.root.y0 = 0;\n      attrs.allNodes = attrs.root.descendants(); // Store direct and total descendants count\n\n      attrs.allNodes.forEach(function (d) {\n        Object.assign(d.data, {\n          _directSubordinates: d.children ? d.children.length : 0,\n          _totalSubordinates: d.descendants().length - 1\n        });\n      });\n\n      if (attrs.root.children) {\n        if (expandNodesFirst) {\n          // Expand all nodes first\n          attrs.root.children.forEach(this.expand);\n        } // Then collapse them all\n\n\n        attrs.root.children.forEach(function (d) {\n          return _this10.collapse(d);\n        }); // Collapse root if level is 0\n\n        if (attrs.expandLevel == 0) {\n          attrs.root._children = attrs.root.children;\n          attrs.root.children = null;\n        } // Then only expand nodes, which have expanded proprty set to true\n\n\n        [attrs.root].forEach(function (ch) {\n          return _this10.expandSomeNodes(ch);\n        });\n      }\n    } // Function which collapses passed node and it's descendants\n\n  }, {\n    key: \"collapse\",\n    value: function collapse(d) {\n      var _this11 = this;\n\n      if (d.children) {\n        d._children = d.children;\n\n        d._children.forEach(function (ch) {\n          return _this11.collapse(ch);\n        });\n\n        d.children = null;\n      }\n    } // Function which expands passed node and it's descendants\n\n  }, {\n    key: \"expand\",\n    value: function expand(d) {\n      var _this12 = this;\n\n      if (d._children) {\n        d.children = d._children;\n        d.children.forEach(function (ch) {\n          return _this12.expand(ch);\n        });\n        d._children = null;\n      }\n    } // Zoom handler function\n\n  }, {\n    key: \"zoomed\",\n    value: function zoomed(event, d) {\n      var attrs = this.getChartState();\n      var chart = attrs.chart; // Get d3 event's transform object\n\n      var transform = event.transform; // Store it\n\n      attrs.lastTransform = transform; // Reposition and rescale chart accordingly\n\n      chart.attr(\"transform\", transform); // Apply new styles to the foreign object element\n\n      if (this.isEdge()) {\n        this.restyleForeignObjectElements();\n      }\n    }\n  }, {\n    key: \"zoomTreeBounds\",\n    value: function zoomTreeBounds(_ref44) {\n      var x0 = _ref44.x0,\n          x1 = _ref44.x1,\n          y0 = _ref44.y0,\n          y1 = _ref44.y1,\n          _ref44$params = _ref44.params,\n          params = _ref44$params === void 0 ? {\n        animate: true,\n        scale: true\n      } : _ref44$params;\n\n      var _this$getChartState = this.getChartState(),\n          centerG = _this$getChartState.centerG,\n          w = _this$getChartState.svgWidth,\n          h = _this$getChartState.svgHeight,\n          svg = _this$getChartState.svg,\n          zoomBehavior = _this$getChartState.zoomBehavior,\n          duration = _this$getChartState.duration,\n          lastTransform = _this$getChartState.lastTransform;\n\n      var scaleVal = Math.min(8, 0.9 / Math.max((x1 - x0) / w, (y1 - y0) / h));\n      var identity = d3.zoomIdentity.translate(w / 2, h / 2);\n      identity = identity.scale(params.scale ? scaleVal : lastTransform.k);\n      identity = identity.translate(-(x0 + x1) / 2, -(y0 + y1) / 2); // Transition zoom wrapper component into specified bounds\n\n      svg.transition().duration(params.animate ? duration : 0).call(zoomBehavior.transform, identity);\n      centerG.transition().duration(params.animate ? duration : 0).attr('transform', 'translate(0,0)');\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var _ref45 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref45$animate = _ref45.animate,\n          animate = _ref45$animate === void 0 ? true : _ref45$animate,\n          nodes = _ref45.nodes,\n          _ref45$scale = _ref45.scale,\n          scale = _ref45$scale === void 0 ? true : _ref45$scale;\n\n      var attrs = this.getChartState();\n      var root = attrs.root;\n      var descendants = nodes ? nodes : root.descendants();\n      var minX = d3.min(descendants, function (d) {\n        return d.x + attrs.layoutBindings[attrs.layout].nodeLeftX(d);\n      });\n      var maxX = d3.max(descendants, function (d) {\n        return d.x + attrs.layoutBindings[attrs.layout].nodeRightX(d);\n      });\n      var minY = d3.min(descendants, function (d) {\n        return d.y + attrs.layoutBindings[attrs.layout].nodeTopY(d);\n      });\n      var maxY = d3.max(descendants, function (d) {\n        return d.y + attrs.layoutBindings[attrs.layout].nodeBottomY(d);\n      });\n      this.zoomTreeBounds({\n        params: {\n          animate: animate,\n          scale: scale\n        },\n        x0: minX - 50,\n        x1: maxX + 50,\n        y0: minY - 50,\n        y1: maxY + 50\n      });\n      return this;\n    } // This function can be invoked via chart.setExpanded API, it expands or collapses particular node\n\n  }, {\n    key: \"setExpanded\",\n    value: function setExpanded(id) {\n      var expandedFlag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var attrs = this.getChartState(); // Retrieve node by node Id\n\n      var node = attrs.allNodes.filter(function (_ref46) {\n        var data = _ref46.data;\n        return attrs.nodeId(data) == id;\n      })[0];\n\n      if (!node) {\n        console.log(\"ORG CHART - \".concat(expandedFlag ? \"EXPAND\" : \"COLLAPSE\", \" - Node with id (\").concat(id, \")  not found in the tree\"));\n        return this;\n      }\n\n      node.data._expanded = expandedFlag;\n      return this;\n    }\n  }, {\n    key: \"setCentered\",\n    value: function setCentered(nodeId) {\n      var attrs = this.getChartState(); // this.setExpanded(nodeId)\n\n      var node = attrs.allNodes.filter(function (d) {\n        return attrs.nodeId(d.data) === nodeId;\n      })[0];\n\n      if (!node) {\n        console.log(\"ORG CHART - CENTER - Node with id (\".concat(nodeId, \") not found in the tree\"));\n        return this;\n      }\n\n      node.data._centered = true;\n      node.data._expanded = true;\n      return this;\n    }\n  }, {\n    key: \"setHighlighted\",\n    value: function setHighlighted(nodeId) {\n      var attrs = this.getChartState();\n      var node = attrs.allNodes.filter(function (d) {\n        return attrs.nodeId(d.data) === nodeId;\n      })[0];\n\n      if (!node) {\n        console.log(\"ORG CHART - HIGHLIGHT - Node with id (\".concat(nodeId, \")  not found in the tree\"));\n        return this;\n      }\n\n      node.data._highlighted = true;\n      node.data._expanded = true;\n      node.data._centered = true;\n      return this;\n    }\n  }, {\n    key: \"setUpToTheRootHighlighted\",\n    value: function setUpToTheRootHighlighted(nodeId) {\n      var attrs = this.getChartState();\n      var node = attrs.allNodes.filter(function (d) {\n        return attrs.nodeId(d.data) === nodeId;\n      })[0];\n\n      if (!node) {\n        console.log(\"ORG CHART - HIGHLIGHTROOT - Node with id (\".concat(nodeId, \") not found in the tree\"));\n        return this;\n      }\n\n      node.data._upToTheRootHighlighted = true;\n      node.data._expanded = true;\n      node.ancestors().forEach(function (d) {\n        return d.data._upToTheRootHighlighted = true;\n      });\n      return this;\n    }\n  }, {\n    key: \"clearHighlighting\",\n    value: function clearHighlighting() {\n      var attrs = this.getChartState();\n      attrs.allNodes.forEach(function (d) {\n        d.data._highlighted = false;\n        d.data._upToTheRootHighlighted = false;\n      });\n      this.update(attrs.root);\n    } // It can take selector which would go fullscreen\n\n  }, {\n    key: \"fullscreen\",\n    value: function fullscreen(elem) {\n      var attrs = this.getChartState();\n      var el = d3.select(elem || attrs.container).node();\n      d3.select(document).on('fullscreenchange.' + attrs.id, function (d) {\n        var fsElement = document.fullscreenElement || document.mozFullscreenElement || document.webkitFullscreenElement;\n\n        if (fsElement == el) {\n          setTimeout(function (d) {\n            attrs.svg.attr('height', window.innerHeight - 40);\n          }, 500);\n        } else {\n          attrs.svg.attr('height', attrs.svgHeight);\n        }\n      });\n\n      if (el.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el.mozRequestFullScreen) {\n        el.mozRequestFullScreen();\n      } else if (el.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      } else if (el.msRequestFullscreen) {\n        el.msRequestFullscreen();\n      }\n    } // Zoom in exposed method\n\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      var _this$getChartState2 = this.getChartState(),\n          svg = _this$getChartState2.svg,\n          zoomBehavior = _this$getChartState2.zoomBehavior;\n\n      svg.transition().call(zoomBehavior.scaleBy, 1.3);\n    } // Zoom out exposed method\n\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      var _this$getChartState3 = this.getChartState(),\n          svg = _this$getChartState3.svg,\n          zoomBehavior = _this$getChartState3.zoomBehavior;\n\n      svg.transition().call(zoomBehavior.scaleBy, 0.78);\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(url, callback) {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n          callback(reader.result);\n        };\n\n        reader.readAsDataURL(xhr.response);\n      };\n\n      xhr.open('GET', url);\n      xhr.responseType = 'blob';\n      xhr.send();\n    }\n  }, {\n    key: \"exportImg\",\n    value: function exportImg() {\n      var _ref47 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref47$full = _ref47.full,\n          full = _ref47$full === void 0 ? false : _ref47$full,\n          _ref47$scale = _ref47.scale,\n          scale = _ref47$scale === void 0 ? 3 : _ref47$scale,\n          _ref47$onLoad = _ref47.onLoad,\n          onLoad = _ref47$onLoad === void 0 ? function (d) {\n        return d;\n      } : _ref47$onLoad,\n          _ref47$save = _ref47.save,\n          save = _ref47$save === void 0 ? true : _ref47$save;\n\n      var that = this;\n      var attrs = this.getChartState();\n      var svgImg = attrs.svg,\n          root = attrs.root;\n      var count = 0;\n      var selection = svgImg.selectAll('img');\n      var total = selection.size();\n\n      var exportImage = function exportImage() {\n        var transform = JSON.parse(JSON.stringify(that.lastTransform()));\n        var duration = that.duration();\n\n        if (full) {\n          that.fit();\n        }\n\n        var _that$getChartState = that.getChartState(),\n            svg = _that$getChartState.svg;\n\n        setTimeout(function (d) {\n          that.downloadImage({\n            node: svg.node(),\n            scale: scale,\n            isSvg: false,\n            onAlreadySerialized: function onAlreadySerialized(d) {\n              that.update(root);\n            },\n            onLoad: onLoad,\n            save: save\n          });\n        }, full ? duration + 10 : 0);\n      };\n\n      if (total > 0) {\n        selection.each(function () {\n          var _this13 = this;\n\n          that.toDataURL(this.src, function (dataUrl) {\n            _this13.src = dataUrl;\n\n            if (++count == total) {\n              exportImage();\n            }\n          });\n        });\n      } else {\n        exportImage();\n      }\n    }\n  }, {\n    key: \"exportSvg\",\n    value: function exportSvg() {\n      var _this$getChartState4 = this.getChartState(),\n          svg = _this$getChartState4.svg;\n\n      this.downloadImage({\n        node: svg.node(),\n        scale: 3,\n        isSvg: true\n      });\n      return this;\n    }\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this$getChartState5 = this.getChartState(),\n          allNodes = _this$getChartState5.allNodes,\n          root = _this$getChartState5.root;\n\n      allNodes.forEach(function (d) {\n        return d.data._expanded = true;\n      });\n      this.render();\n      return this;\n    }\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this$getChartState6 = this.getChartState(),\n          allNodes = _this$getChartState6.allNodes,\n          root = _this$getChartState6.root;\n\n      allNodes.forEach(function (d) {\n        return d.data._expanded = false;\n      });\n      this.expandLevel(0);\n      this.render();\n      return this;\n    }\n  }, {\n    key: \"downloadImage\",\n    value: function downloadImage(_ref48) {\n      var node = _ref48.node,\n          _ref48$scale = _ref48.scale,\n          scale = _ref48$scale === void 0 ? 2 : _ref48$scale,\n          _ref48$isSvg = _ref48.isSvg,\n          isSvg = _ref48$isSvg === void 0 ? false : _ref48$isSvg,\n          _ref48$save = _ref48.save,\n          save = _ref48$save === void 0 ? true : _ref48$save,\n          _ref48$onAlreadySeria = _ref48.onAlreadySerialized,\n          onAlreadySerialized = _ref48$onAlreadySeria === void 0 ? function (d) {} : _ref48$onAlreadySeria,\n          _ref48$onLoad = _ref48.onLoad,\n          onLoad = _ref48$onLoad === void 0 ? function (d) {} : _ref48$onLoad;\n      // Retrieve svg node\n      var svgNode = node;\n\n      if (isSvg) {\n        var source = serializeString(svgNode); //add xml declaration\n\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source; //convert svg source to URI data scheme.\n\n        var url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n        saveAs(url, \"graph.svg\");\n        onAlreadySerialized();\n        return;\n      } // Get image quality index (basically,  index you can zoom in)\n\n\n      var quality = scale; // Create image\n\n      var image = document.createElement('img');\n\n      image.onload = function () {\n        // Create image canvas\n        var canvas = document.createElement('canvas'); // Set width and height based on SVG node\n\n        var rect = svgNode.getBoundingClientRect();\n        canvas.width = rect.width * quality;\n        canvas.height = rect.height * quality; // Draw background\n\n        var context = canvas.getContext('2d');\n        context.fillStyle = '#FAFAFA';\n        context.fillRect(0, 0, rect.width * quality, rect.height * quality);\n        context.drawImage(image, 0, 0, rect.width * quality, rect.height * quality); // Set some image metadata\n\n        var dt = canvas.toDataURL('image/png');\n\n        if (onLoad) {\n          onLoad(dt);\n        }\n\n        if (save) {\n          // Invoke saving function\n          saveAs(dt, 'graph.png');\n        }\n      };\n\n      var url = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(serializeString(svgNode));\n      onAlreadySerialized();\n      image.src = url; // URL.createObjectURL(blob);\n      // This function invokes save window\n\n      function saveAs(uri, filename) {\n        // create link\n        var link = document.createElement('a');\n\n        if (typeof link.download === 'string') {\n          document.body.appendChild(link); // Firefox requires the link to be in the body\n\n          link.download = filename;\n          link.href = uri;\n          link.click();\n          document.body.removeChild(link); // remove the link when done\n        } else {\n          location.replace(uri);\n        }\n      } // This function serializes SVG and sets all necessary attributes\n\n\n      function serializeString(svg) {\n        var xmlns = 'http://www.w3.org/2000/xmlns/';\n        var xlinkns = 'http://www.w3.org/1999/xlink';\n        var svgns = 'http://www.w3.org/2000/svg';\n        svg = svg.cloneNode(true);\n        var fragment = window.location.href + '#';\n        var walker = document.createTreeWalker(svg, NodeFilter.SHOW_ELEMENT, null, false);\n\n        while (walker.nextNode()) {\n          var _iterator = _createForOfIteratorHelper(walker.currentNode.attributes),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var attr = _step.value;\n\n              if (attr.value.includes(fragment)) {\n                attr.value = attr.value.replace(fragment, '#');\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        svg.setAttributeNS(xmlns, 'xmlns', svgns);\n        svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns);\n        var serializer = new XMLSerializer();\n        var string = serializer.serializeToString(svg);\n        return string;\n      }\n    } // Calculate what size text will take\n\n  }, {\n    key: \"getTextWidth\",\n    value: function getTextWidth(text) {\n      var _ref49 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref49$fontSize = _ref49.fontSize,\n          fontSize = _ref49$fontSize === void 0 ? 14 : _ref49$fontSize,\n          _ref49$fontWeight = _ref49.fontWeight,\n          fontWeight = _ref49$fontWeight === void 0 ? 400 : _ref49$fontWeight,\n          _ref49$defaultFont = _ref49.defaultFont,\n          defaultFont = _ref49$defaultFont === void 0 ? \"Helvetice\" : _ref49$defaultFont,\n          ctx = _ref49.ctx;\n\n      ctx.font = \"\".concat(fontWeight || '', \" \").concat(fontSize, \"px \").concat(defaultFont, \" \");\n      var measurement = ctx.measureText(text);\n      return measurement.width;\n    }\n  }]);\n\n  return OrgChart;\n}();","map":{"version":3,"names":["selection","select","max","min","sum","cumsum","tree","stratify","zoom","zoomIdentity","flextree","linkHorizontal","d3","OrgChart","attrs","id","Math","floor","random","firstDraw","svgWidth","svgHeight","window","innerHeight","scaleExtent","container","defaultTextFill","defaultFont","ctx","document","createElement","getContext","data","duration","setActiveNodeCentered","expandLevel","compact","rootMargin","nodeDefaultBackground","connections","lastTransform","x","y","k","nodeId","d","parentNodeId","parentId","backgroundColor","zoomBehavior","defs","state","visibleConnections","map","conn","labelWidth","getTextWidth","label","fontSize","from","to","_source","_target","join","connectionsUpdate","i","arr","attr","linkUpdate","_upToTheRootHighlighted","raise","nodeUpdate","_highlighted","nodeWidth","d3Node","nodeHeight","siblingsMargin","childrenMargin","neightbourMargin","n1","n2","compactMarginPair","compactMarginBetween","onNodeClick","linkGroupArc","nodeContent","layout","buttonContent","node","icons","children","layoutBindings","width","height","compactEven","firstCompactNode","flexCompactDim","parent","root","centerY","scale","centerX","sizeColumn","sizeRow","reverse","slice","result","hdiagonal","bind","compactViewIndex","diagonal","chartHeight","chartWidth","getChartState","Object","keys","forEach","key","_","arguments","length","initializeEnterExitUpdatePattern","prototype","patternify","params","selector","elementTag","tag","selectAll","exit","remove","enter","append","merge","nodeStore","_children","push","getNodeChildren","zoomLevel","console","log","containerRect","getBoundingClientRect","calc","behaviors","on","event","zoomed","flexTreeLayout","nodeSize","nodeFlexSize","spacing","nodeA","nodeB","setLayouts","expandNodesFirst","svg","style","call","chart","centerG","linksWrapper","nodesWrapper","connectionsWrapper","defsWrapper","centerTransform","update","obj","nodeFound","allNodes","filter","parentFound","_centered","_expanded","updateNodesState","descendants","_filteredOut","_filtered","array","accessor","aggegator","grouped","item","entries","eachBefore","firstCompact","compactChildren","child","row","evenMaxColumnDimension","compactDimension","oddMaxColumnDimension","columnSize","rowsMapNew","groupBy","reducedGroup","rowSize","v","fch","offsetX","abs","cumSum","x0","y0","calculateCompactFlexDimensions","treeData","calculateCompactFlexPositions","nodes","links","swap","allNodesMap","visibleNodesMap","connection","source","target","defsString","existingString","html","linkSelection","linkEnter","insert","xo","linkJoinX","yo","linkJoinY","o","each","transition","n","compactLinkMidX","compactLinkMidY","linkX","linkY","p","linkParentX","linkParentY","m","linkCompactXStart","linkCompactYStart","linkExit","connectionsSel","connEnter","connUpdate","xs","ys","xt","yt","connExit","nodesSelection","nodeEnter","xj","nodeJoinX","yj","nodeJoinY","srcElement","classList","includes","fo","restyleForeignObjectElements","nodeButtonGroups","onButtonClick","nodeFo","nodeUpdateTransform","buttonX","buttonY","_directSubordinates","text","isEdge","nodeExitTransition","ex","ey","centeredNode","centeredNodes","_centeredWithDescendants","fit","animate","navigator","userAgent","s","t","mx","my","xrvs","yrvs","rdef","r","h","w","path","setExpansionFlagToChildren","flag","ch","expandSomeNodes","assign","_totalSubordinates","expand","collapse","transform","x1","y1","scaleVal","identity","translate","minX","nodeLeftX","maxX","nodeRightX","minY","nodeTopY","maxY","nodeBottomY","zoomTreeBounds","expandedFlag","ancestors","elem","el","fsElement","fullscreenElement","mozFullscreenElement","webkitFullscreenElement","setTimeout","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","scaleBy","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","response","open","responseType","send","full","onLoad","save","that","svgImg","count","total","size","exportImage","JSON","parse","stringify","downloadImage","isSvg","onAlreadySerialized","toDataURL","src","dataUrl","render","svgNode","serializeString","encodeURIComponent","saveAs","quality","image","canvas","rect","context","fillStyle","fillRect","drawImage","dt","uri","filename","link","download","body","appendChild","href","click","removeChild","location","replace","xmlns","xlinkns","svgns","cloneNode","fragment","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","value","setAttributeNS","serializer","XMLSerializer","string","serializeToString","fontWeight","font","measurement","measureText"],"sources":["/Users/marcomazzucato/Desktop/org-chart/node_modules/d3-org-chart/src/d3-org-chart.js"],"sourcesContent":["import { selection, select } from \"d3-selection\";\nimport { max, min, sum, cumsum } from \"d3-array\";\nimport { tree, stratify } from \"d3-hierarchy\";\nimport { zoom, zoomIdentity } from \"d3-zoom\";\nimport { flextree } from 'd3-flextree';\nimport { linkHorizontal } from 'd3-shape';\n\nconst d3 = {\n    selection,\n    select,\n    max,\n    min,\n    sum,\n    cumsum,\n    tree,\n    stratify,\n    zoom,\n    zoomIdentity,\n    linkHorizontal,\n}\nexport class OrgChart {\n    constructor() {\n        // Exposed variables \n        const attrs = {\n            id: `ID${Math.floor(Math.random() * 1000000)}`, // Id for event handlings\n            firstDraw: true,\n            svgWidth: 800,\n            svgHeight: window.innerHeight - 100,\n            scaleExtent:[0.001, 20],\n            container: \"body\",\n            defaultTextFill: \"#2C3E50\",\n            defaultFont: \"Helvetica\",\n            ctx: document.createElement('canvas').getContext('2d'),\n            data: null,\n            duration: 400,\n            setActiveNodeCentered: true,\n            expandLevel: 1,\n            compact: true,\n            rootMargin: 40,\n            nodeDefaultBackground: 'none',\n            connections: [],\n            lastTransform: { x: 0, y: 0, k: 1 },\n            nodeId: d => d.nodeId || d.id,\n            parentNodeId: d => d.parentNodeId || d.parentId,\n            backgroundColor: 'none',\n            zoomBehavior: null,\n            defs: function (state, visibleConnections) {\n                return `<defs>\n                    ${visibleConnections.map(conn => {\n                    const labelWidth = this.getTextWidth(conn.label, { ctx: state.ctx, fontSize: 2, defaultFont: state.defaultFont });\n                    return `\n                       <marker id=\"${conn.from + \"_\" + conn.to}\" refX=\"${conn._source.x < conn._target.x ? -7 : 7}\" refY=\"5\" markerWidth=\"500\"  markerHeight=\"500\"  orient=\"${conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\"}\" >\n                       <rect rx=0.5 width=${conn.label ? labelWidth + 3 : 0} height=3 y=1  fill=\"#152785\"></rect>\n                       <text font-size=\"2px\" x=1 fill=\"white\" y=3>${conn.label || ''}</text>\n                       </marker>\n\n                       <marker id=\"arrow-${conn.from + \"_\" + conn.to}\"  markerWidth=\"500\"  markerHeight=\"500\"  refY=\"2\"  refX=\"1\" orient=\"${conn._source.x < conn._target.x ? \"auto\" : \"auto-start-reverse\"}\" >\n                       <path transform=\"translate(0)\" d='M0,0 V4 L2,2 Z' fill='#152785' />\n                       </marker>\n                    `}).join(\"\")}\n                    </defs>\n                    `},\n            connectionsUpdate: function (d, i, arr) {\n                d3.select(this)\n                    .attr(\"stroke\", d => '#152785')\n                    .attr('stroke-linecap', 'round')\n                    .attr(\"stroke-width\", d => '5')\n                    .attr('pointer-events', 'none')\n                    .attr(\"marker-start\", d => `url(#${d.from + \"_\" + d.to})`)\n                    .attr(\"marker-end\", d => `url(#arrow-${d.from + \"_\" + d.to})`)\n            },\n            linkUpdate: function (d, i, arr) {\n                d3.select(this)\n                    .attr(\"stroke\", d => d.data._upToTheRootHighlighted ? '#152785' : 'lightgray')\n                    .attr(\"stroke-width\", d => d.data._upToTheRootHighlighted ? 5 : 2)\n\n                if (d.data._upToTheRootHighlighted) {\n                    d3.select(this).raise()\n                }\n            },\n            nodeUpdate: function (d, i, arr) {\n                d3.select(this)\n                    .select('.node-rect')\n                    .attr(\"stroke\", d => d.data._highlighted || d.data._upToTheRootHighlighted ? '#152785' : 'none')\n                    .attr(\"stroke-width\", d.data._highlighted || d.data._upToTheRootHighlighted ? 10 : 1)\n            },\n\n            nodeWidth: d3Node => 250,\n            nodeHeight: d => 150,\n            siblingsMargin: d3Node => 20,\n            childrenMargin: d => 60,\n            neightbourMargin: (n1, n2) => 80,\n            compactMarginPair: d => 100,\n            compactMarginBetween: (d3Node => 20),\n            onNodeClick: (d) => d,\n            linkGroupArc: d3.linkHorizontal().x(d => d.x).y(d => d.y),\n            // ({ source, target }) => {\n            //     return \n            //     return `M ${source.x} , ${source.y} Q ${(source.x + target.x) / 2 + 100},${source.y-100}  ${target.x}, ${target.y}`;\n            // },\n            nodeContent: d => `<div style=\"padding:5px;font-size:10px;\">Sample Node(id=${d.id}), override using <br/> <br/> \n            <code>chart<br/>\n            &nbsp;.nodeContent({data}=>{ <br/>\n             &nbsp;&nbsp;&nbsp;&nbsp;return '' // Custom HTML <br/>\n             &nbsp;})</code>\n             <br/> <br/>\n             Or check different <a href=\"https://github.com/bumbeishvili/org-chart#jump-to-examples\" target=\"_blank\">layout examples</a>\n             \n             </div>`,\n            layout: \"top\",// top, left,right, bottom\n            buttonContent: ({ node, state }) => {\n                const icons = {\n                    \"left\": d => d ? `<div style=\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\">‹</div>` : `<div style=\"margin-top:-10px;font-size:25px;height:23px\">›</div>`,\n                    \"bottom\": d => d ? `<div style=\"margin-top:-20px;font-size:25px\">ˬ</div>` : `<div style=\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\">ˆ</div>`,\n                    \"right\": d => d ? `<div style=\"margin-top:-10px;font-size:25px;height:23px\">›</div>` : `<div style=\"margin-top:-10px;line-height:1.2;font-size:25px;height:22px\">‹</div>`,\n                    \"top\": d => d ? `<div style=\"margin-top:0px;line-height:1.2;height:11px;font-size:25px\">ˆ</div>` : `<div style=\"margin-top:-20px;font-size:25px\">ˬ</div>`,\n                }\n                return `<div style=\"border-radius:3px;padding:3px;font-size:10px;margin:auto auto;background-color:lightgray\"> ${icons[state.layout](node.children)}  </div>`\n            },\n            layoutBindings: {\n                \"left\": {\n                    \"nodeLeftX\": node => 0,\n                    \"nodeRightX\": node => node.width,\n                    \"nodeTopY\": node => - node.height / 2,\n                    \"nodeBottomY\": node => node.height / 2,\n                    \"nodeJoinX\": node => node.x + node.width,\n                    \"nodeJoinY\": node => node.y - node.height / 2,\n                    \"linkJoinX\": node => node.x + node.width,\n                    \"linkJoinY\": node => node.y,\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"linkCompactXStart\": node => node.x + node.width / 2,//node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y + (node.compactEven ? node.height / 2 : -node.height / 2),\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x,// node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": (node, state) => node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"linkParentX\": node => node.parent.x + node.parent.width,\n                    \"linkParentY\": node => node.parent.y,\n                    \"buttonX\": node => node.width,\n                    \"buttonY\": node => node.height / 2,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX }) => `translate(${rootMargin},${centerY}) scale(${scale})`,\n                    \"compactDimension\": {\n                        sizeColumn: node => node.height,\n                        sizeRow: node => node.width,\n                        reverse: arr => arr.slice().reverse()\n                    },\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [height + siblingsMargin, width + childrenMargin]\n                    },\n                    \"zoomTransform\": ({ centerY, scale }) => `translate(${0},${centerY}) scale(${scale})`,\n                    \"diagonal\": this.hdiagonal.bind(this),\n                    \"swap\": d => { const x = d.x; d.x = d.y; d.y = x; },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x},${y - height / 2})`,\n                },\n                \"top\": {\n                    \"nodeLeftX\": node => -node.width / 2,\n                    \"nodeRightX\": node => node.width / 2,\n                    \"nodeTopY\": node => 0,\n                    \"nodeBottomY\": node => node.height,\n                    \"nodeJoinX\": node => node.x - node.width / 2,\n                    \"nodeJoinY\": node => node.y + node.height,\n                    \"linkJoinX\": node => node.x,\n                    \"linkJoinY\": node => node.y + node.height,\n                    \"linkCompactXStart\": node => node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y + node.height / 2,\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": node => node.firstCompactNode.y,\n                    \"compactDimension\": {\n                        sizeColumn: node => node.width,\n                        sizeRow: node => node.height,\n                        reverse: arr => arr,\n                    },\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"linkParentX\": node => node.parent.x,\n                    \"linkParentY\": node => node.parent.y + node.parent.height,\n                    \"buttonX\": node => node.width / 2,\n                    \"buttonY\": node => node.height,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX }) => `translate(${centerX},${rootMargin}) scale(${scale})`,\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node, compactViewIndex }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [width + siblingsMargin, height + childrenMargin];\n                    },\n                    \"zoomTransform\": ({ centerX, scale }) => `translate(${centerX},0}) scale(${scale})`,\n                    \"diagonal\": this.diagonal.bind(this),\n                    \"swap\": d => { },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x - width / 2},${y})`,\n\n                },\n                \"bottom\": {\n                    \"nodeLeftX\": node => -node.width / 2,\n                    \"nodeRightX\": node => node.width / 2,\n                    \"nodeTopY\": node => -node.height,\n                    \"nodeBottomY\": node => 0,\n                    \"nodeJoinX\": node => node.x - node.width / 2,\n                    \"nodeJoinY\": node => node.y - node.height - node.height,\n                    \"linkJoinX\": node => node.x,\n                    \"linkJoinY\": node => node.y - node.height,\n                    \"linkCompactXStart\": node => node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y - node.height / 2,\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": node => node.firstCompactNode.y,\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"compactDimension\": {\n                        sizeColumn: node => node.width,\n                        sizeRow: node => node.height,\n                        reverse: arr => arr,\n                    },\n                    \"linkParentX\": node => node.parent.x,\n                    \"linkParentY\": node => node.parent.y - node.parent.height,\n                    \"buttonX\": node => node.width / 2,\n                    \"buttonY\": node => 0,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX, chartHeight }) => `translate(${centerX},${chartHeight - rootMargin}) scale(${scale})`,\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [width + siblingsMargin, height + childrenMargin]\n                    },\n                    \"zoomTransform\": ({ centerX, scale }) => `translate(${centerX},0}) scale(${scale})`,\n                    \"diagonal\": this.diagonal.bind(this),\n                    \"swap\": d => { d.y = -d.y; },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x - width / 2},${y - height})`,\n                },\n                \"right\": {\n                    \"nodeLeftX\": node => -node.width,\n                    \"nodeRightX\": node => 0,\n                    \"nodeTopY\": node => - node.height / 2,\n                    \"nodeBottomY\": node => node.height / 2,\n                    \"nodeJoinX\": node => node.x - node.width - node.width,\n                    \"nodeJoinY\": node => node.y - node.height / 2,\n                    \"linkJoinX\": node => node.x - node.width,\n                    \"linkJoinY\": node => node.y,\n                    \"linkX\": node => node.x,\n                    \"linkY\": node => node.y,\n                    \"linkParentX\": node => node.parent.x - node.parent.width,\n                    \"linkParentY\": node => node.parent.y,\n                    \"buttonX\": node => 0,\n                    \"buttonY\": node => node.height / 2,\n                    \"linkCompactXStart\": node => node.x - node.width / 2,//node.x + (node.compactEven ? node.width / 2 : -node.width / 2),\n                    \"linkCompactYStart\": node => node.y + (node.compactEven ? node.height / 2 : -node.height / 2),\n                    \"compactLinkMidX\": (node, state) => node.firstCompactNode.x,// node.firstCompactNode.x + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"compactLinkMidY\": (node, state) => node.firstCompactNode.y + node.firstCompactNode.flexCompactDim[0] / 4 + state.compactMarginPair(node) / 4,\n                    \"centerTransform\": ({ root, rootMargin, centerY, scale, centerX, chartWidth }) => `translate(${chartWidth - rootMargin},${centerY}) scale(${scale})`,\n                    \"nodeFlexSize\": ({ height, width, siblingsMargin, childrenMargin, state, node }) => {\n                        if (state.compact && node.flexCompactDim) {\n                            const result = [node.flexCompactDim[0], node.flexCompactDim[1]]\n                            return result;\n                        };\n                        return [height + siblingsMargin, width + childrenMargin]\n                    },\n                    \"compactDimension\": {\n                        sizeColumn: node => node.height,\n                        sizeRow: node => node.width,\n                        reverse: arr => arr.slice().reverse()\n                    },\n                    \"zoomTransform\": ({ centerY, scale }) => `translate(${0},${centerY}) scale(${scale})`,\n                    \"diagonal\": this.hdiagonal.bind(this),\n                    \"swap\": d => { const x = d.x; d.x = -d.y; d.y = x; },\n                    \"nodeUpdateTransform\": ({ x, y, width, height }) => `translate(${x - width},${y - height / 2})`,\n                },\n            }\n        };\n\n        this.getChartState = () => attrs;\n\n        // Dynamically set getter and setter functions for Chart class\n        Object.keys(attrs).forEach((key) => {\n            //@ts-ignore\n            this[key] = function (_) {\n                if (!arguments.length) {\n                    return attrs[key];\n                } else {\n                    attrs[key] = _;\n                }\n                return this;\n            };\n        });\n\n        this.initializeEnterExitUpdatePattern();\n    }\n\n    initializeEnterExitUpdatePattern() {\n        d3.selection.prototype.patternify = function (params) {\n            var container = this;\n            var selector = params.selector;\n            var elementTag = params.tag;\n            var data = params.data || [selector];\n\n            // Pattern in action\n            var selection = container.selectAll(\".\" + selector).data(data, (d, i) => {\n                if (typeof d === \"object\") {\n                    if (d.id) { return d.id; }\n                }\n                return i;\n            });\n            selection.exit().remove();\n            selection = selection.enter().append(elementTag).merge(selection);\n            selection.attr(\"class\", selector);\n            return selection;\n        };\n    }\n\n    // This method retrieves passed node's children IDs (including node)\n    getNodeChildren({ data, children, _children }, nodeStore) {\n        // Store current node ID\n        nodeStore.push(data);\n\n        // Loop over children and recursively store descendants id (expanded nodes)\n        if (children) {\n            children.forEach((d) => {\n                this.getNodeChildren(d, nodeStore);\n            });\n        }\n\n        // Loop over _children and recursively store descendants id (collapsed nodes)\n        if (_children) {\n            _children.forEach((d) => {\n                this.getNodeChildren(d, nodeStore);\n            });\n        }\n\n        // Return result\n        return nodeStore;\n    }\n\n    // This method can be invoked via chart.setZoomFactor API, it zooms to particulat scale\n    initialZoom(zoomLevel) {\n        const attrs = this.getChartState();\n        attrs.lastTransform.k = zoomLevel;\n        return this;\n    }\n\n    render() {\n        //InnerFunctions which will update visuals\n        const attrs = this.getChartState();\n        if (!attrs.data || attrs.data.length == 0) {\n            console.log('ORG CHART - Data is empty')\n            return this;\n        }\n\n        //Drawing containers\n        const container = d3.select(attrs.container);\n        const containerRect = container.node().getBoundingClientRect();\n        if (containerRect.width > 0) attrs.svgWidth = containerRect.width;\n\n        //Calculated properties\n        const calc = {\n            id: `ID${Math.floor(Math.random() * 1000000)}`, // id for event handlings,\n            chartWidth: attrs.svgWidth,\n            chartHeight: attrs.svgHeight\n        };\n        attrs.calc = calc;\n\n        // Calculate max node depth (it's needed for layout heights calculation)\n        calc.centerX = calc.chartWidth / 2;\n        calc.centerY = calc.chartHeight / 2;\n\n        // ******************* BEHAVIORS  **********************\n        if (attrs.firstDraw) {\n            const behaviors = {\n                zoom: null\n            };\n\n            // Get zooming function\n            behaviors.zoom = d3.zoom().on(\"zoom\", (event, d) => this.zoomed(event, d)).scaleExtent(attrs.scaleExtent)\n            attrs.zoomBehavior = behaviors.zoom;\n        }\n\n        //****************** ROOT node work ************************\n\n        attrs.flexTreeLayout = flextree({\n            nodeSize: node => {\n                const width = attrs.nodeWidth(node);;\n                const height = attrs.nodeHeight(node);\n                const siblingsMargin = attrs.siblingsMargin(node)\n                const childrenMargin = attrs.childrenMargin(node);\n                return attrs.layoutBindings[attrs.layout].nodeFlexSize({\n                    state: attrs,\n                    node: node,\n                    width,\n                    height,\n                    siblingsMargin,\n                    childrenMargin\n                });\n            }\n        })\n            .spacing((nodeA, nodeB) => nodeA.parent == nodeB.parent ? 0 : attrs.neightbourMargin(nodeA, nodeB));\n\n        this.setLayouts({ expandNodesFirst: false });\n\n        // *************************  DRAWING **************************\n        //Add svg\n        const svg = container\n            .patternify({\n                tag: \"svg\",\n                selector: \"svg-chart-container\"\n            })\n            .style('background-color', attrs.backgroundColor)\n            .attr(\"width\", attrs.svgWidth)\n            .attr(\"height\", attrs.svgHeight)\n            .attr(\"font-family\", attrs.defaultFont)\n\n        if (attrs.firstDraw) {\n            svg.call(attrs.zoomBehavior)\n                .on(\"dblclick.zoom\", null)\n                .attr(\"cursor\", \"move\")\n        }\n\n        attrs.svg = svg;\n\n        //Add container g element\n        const chart = svg\n            .patternify({\n                tag: \"g\",\n                selector: \"chart\"\n            })\n\n        // Add one more container g element, for better positioning controls\n        attrs.centerG = chart\n            .patternify({\n                tag: \"g\",\n                selector: \"center-group\"\n            })\n\n        attrs.linksWrapper = attrs.centerG.patternify({\n            tag: \"g\",\n            selector: \"links-wrapper\"\n        })\n\n        attrs.nodesWrapper = attrs.centerG.patternify({\n            tag: \"g\",\n            selector: \"nodes-wrapper\"\n        })\n\n        attrs.connectionsWrapper = attrs.centerG.patternify({\n            tag: \"g\",\n            selector: \"connections-wrapper\"\n        })\n\n        attrs.defsWrapper = svg.patternify({\n            tag: \"g\",\n            selector: \"defs-wrapper\"\n        })\n\n        if (attrs.firstDraw) {\n            attrs.centerG.attr(\"transform\", () => {\n                return attrs.layoutBindings[attrs.layout].centerTransform({\n                    centerX: calc.centerX,\n                    centerY: calc.centerY,\n                    scale: attrs.lastTransform.k,\n                    rootMargin: attrs.rootMargin,\n                    root: attrs.root,\n                    chartHeight: calc.chartHeight,\n                    chartWidth: calc.chartWidth\n                })\n            });\n        }\n\n        attrs.chart = chart;\n\n        // Display tree contenrs\n        this.update(attrs.root);\n\n\n        //#########################################  UTIL FUNCS ##################################\n        // This function restyles foreign object elements ()\n\n        d3.select(window).on(`resize.${attrs.id}`, () => {\n            const containerRect = d3.select(attrs.container).node().getBoundingClientRect();\n            attrs.svg.attr('width', containerRect.width)\n        });\n\n        if (attrs.firstDraw) {\n            attrs.firstDraw = false;\n        }\n\n        return this;\n    }\n\n    // This function can be invoked via chart.addNode API, and it adds node in tree at runtime\n    addNode(obj) {\n        const attrs = this.getChartState();\n        const nodeFound = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) === attrs.nodeId(obj))[0];\n        const parentFound = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) === attrs.parentNodeId(obj))[0];\n        if (nodeFound) {\n            console.log(`ORG CHART - ADD - Node with id \"${attrs.nodeId(obj)}\" already exists in tree`)\n            return this;\n        }\n        if (!parentFound) {\n            console.log(`ORG CHART - ADD - Parent node with id \"${attrs.parentNodeId(obj)}\" not found in the tree`)\n            return this;\n        }\n        if (obj._centered && !obj._expanded) obj._expanded = true;\n        attrs.data.push(obj);\n\n        // Update state of nodes and redraw graph\n        this.updateNodesState();\n\n        return this;\n    }\n\n    // This function can be invoked via chart.removeNode API, and it removes node from tree at runtime\n    removeNode(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) == nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - REMOVE - Node with id \"${nodeId}\" not found in the tree`);\n            return this;\n        }\n\n        // Remove all node childs\n        // Retrieve all children nodes ids (including current node itself)\n        node.descendants()\n            .forEach(d => d.data._filteredOut = true)\n\n        const descendants = this.getNodeChildren(node, [], attrs.nodeId);\n        descendants.forEach(d => d._filtered = true)\n\n        // Filter out retrieved nodes and reassign data\n        attrs.data = attrs.data.filter(d => !d._filtered);\n\n        const updateNodesState = this.updateNodesState.bind(this);\n        // Update state of nodes and redraw graph\n        updateNodesState();\n\n        return this;\n    }\n\n    groupBy(array, accessor, aggegator) {\n        const grouped = {}\n        array.forEach(item => {\n            const key = accessor(item)\n            if (!grouped[key]) {\n                grouped[key] = []\n            }\n            grouped[key].push(item)\n        })\n\n        Object.keys(grouped).forEach(key => {\n            grouped[key] = aggegator(grouped[key])\n        })\n        return Object.entries(grouped);\n    }\n    calculateCompactFlexDimensions(root) {\n        const attrs = this.getChartState();\n        root.eachBefore(node => {\n            node.firstCompact = null;\n            node.compactEven = null;\n            node.flexCompactDim = null;\n            node.firstCompactNode = null;\n        })\n        root.eachBefore(node => {\n            if (node.children && node.children.length > 1) {\n                const compactChildren = node.children.filter(d => !d.children);\n                if (compactChildren.length < 2) return;\n                compactChildren.forEach((child, i) => {\n                    if (!i) child.firstCompact = true;\n                    if (i % 2) child.compactEven = false;\n                    else child.compactEven = true;\n                    child.row = Math.floor(i / 2);\n                })\n                const evenMaxColumnDimension = d3.max(compactChildren.filter(d => d.compactEven), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n                const oddMaxColumnDimension = d3.max(compactChildren.filter(d => !d.compactEven), attrs.layoutBindings[attrs.layout].compactDimension.sizeColumn);\n                const columnSize = Math.max(evenMaxColumnDimension, oddMaxColumnDimension) * 2;\n                const rowsMapNew = this.groupBy(compactChildren, d => d.row, reducedGroup => d3.max(reducedGroup, d => attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d) + attrs.compactMarginBetween(d)));\n                const rowSize = d3.sum(rowsMapNew.map(v => v[1]))\n                compactChildren.forEach(node => {\n                    node.firstCompactNode = compactChildren[0];\n                    if (node.firstCompact) {\n                        node.flexCompactDim = [\n                            columnSize + attrs.compactMarginPair(node),\n                            rowSize - attrs.compactMarginBetween(node)\n                        ];\n                    } else {\n                        node.flexCompactDim = [0, 0];\n                    }\n                })\n                node.flexCompactDim = null;\n            }\n        })\n    }\n\n    calculateCompactFlexPositions(root) {\n        const attrs = this.getChartState();\n        root.eachBefore(node => {\n            if (node.children) {\n                const compactChildren = node.children.filter(d => d.flexCompactDim);\n                const fch = compactChildren[0];\n                if (!fch) return;\n                compactChildren.forEach((child, i, arr) => {\n                    if (i == 0) fch.x -= fch.flexCompactDim[0] / 2;\n                    if (i & i % 2 - 1) child.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(child) / 4;\n                    else if (i) child.x = fch.x + fch.flexCompactDim[0] * 0.75 + attrs.compactMarginPair(child) / 4;\n                })\n                const centerX = fch.x + fch.flexCompactDim[0] * 0.5;\n                fch.x = fch.x + fch.flexCompactDim[0] * 0.25 - attrs.compactMarginPair(fch) / 4;\n                const offsetX = node.x - centerX;\n                if (Math.abs(offsetX) < 10) {\n                    compactChildren.forEach(d => d.x += offsetX);\n                }\n\n                const rowsMapNew = this.groupBy(compactChildren, d => d.row, reducedGroup => d3.max(reducedGroup, d => attrs.layoutBindings[attrs.layout].compactDimension.sizeRow(d)));\n                const cumSum = d3.cumsum(rowsMapNew.map(d => d[1] + attrs.compactMarginBetween(d)));\n                compactChildren\n                    .forEach((node, i) => {\n                        if (node.row) {\n                            node.y = fch.y + cumSum[node.row - 1]\n                        } else {\n                            node.y = fch.y;\n                        }\n                    })\n\n            }\n        })\n    }\n\n    // This function basically redraws visible graph, based on nodes state\n    update({ x0, y0, x = 0, y = 0, width, height }) {\n        const attrs = this.getChartState();\n        const calc = attrs.calc;\n\n\n        if (attrs.compact) {\n            this.calculateCompactFlexDimensions(attrs.root);\n        }\n\n        //  Assigns the x and y position for the nodes\n        const treeData = attrs.flexTreeLayout(attrs.root);\n\n        // Reassigns the x and y position for the based on the compact layout\n        if (attrs.compact) {\n            this.calculateCompactFlexPositions(attrs.root);\n        }\n\n        const nodes = treeData.descendants();\n\n        // console.table(nodes.map(d => ({ x: d.x, y: d.y, width: d.width, height: d.height, flexCompactDim: d.flexCompactDim + \"\" })))\n\n        // Get all links\n        const links = treeData.descendants().slice(1);\n        nodes.forEach(attrs.layoutBindings[attrs.layout].swap)\n\n        // Connections\n        const connections = attrs.connections;\n        const allNodesMap = {};\n        attrs.allNodes.forEach(d => allNodesMap[attrs.nodeId(d.data)] = d);\n\n        const visibleNodesMap = {}\n        nodes.forEach(d => visibleNodesMap[attrs.nodeId(d.data)] = d);\n\n        connections.forEach(connection => {\n            const source = allNodesMap[connection.from];\n            const target = allNodesMap[connection.to];\n            connection._source = source;\n            connection._target = target;\n        })\n        const visibleConnections = connections.filter(d => visibleNodesMap[d.from] && visibleNodesMap[d.to]);\n        const defsString = attrs.defs.bind(this)(attrs, visibleConnections);\n        const existingString = attrs.defsWrapper.html();\n        if (defsString !== existingString) {\n            attrs.defsWrapper.html(defsString)\n        }\n\n        // --------------------------  LINKS ----------------------\n        // Get links selection\n        const linkSelection = attrs.linksWrapper\n            .selectAll(\"path.link\")\n            .data(links, (d) => attrs.nodeId(d.data));\n\n        // Enter any new links at the parent's previous position.\n        const linkEnter = linkSelection\n            .enter()\n            .insert(\"path\", \"g\")\n            .attr(\"class\", \"link\")\n            .attr(\"d\", (d) => {\n                const xo = attrs.layoutBindings[attrs.layout].linkJoinX({ x: x0, y: y0, width, height });\n                const yo = attrs.layoutBindings[attrs.layout].linkJoinY({ x: x0, y: y0, width, height });\n                const o = { x: xo, y: yo };\n                return attrs.layoutBindings[attrs.layout].diagonal(o, o, o);\n            });\n\n        // Get links update selection\n        const linkUpdate = linkEnter.merge(linkSelection);\n\n        // Styling links\n        linkUpdate\n            .attr(\"fill\", \"none\")\n\n        // Allow external modifications\n        linkUpdate.each(attrs.linkUpdate);\n\n        // Transition back to the parent element position\n        linkUpdate\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"d\", (d) => {\n                const n = attrs.compact && d.flexCompactDim ?\n                    {\n                        x: attrs.layoutBindings[attrs.layout].compactLinkMidX(d, attrs),\n                        y: attrs.layoutBindings[attrs.layout].compactLinkMidY(d, attrs)\n                    } :\n                    {\n                        x: attrs.layoutBindings[attrs.layout].linkX(d),\n                        y: attrs.layoutBindings[attrs.layout].linkY(d)\n                    };\n\n                const p = {\n                    x: attrs.layoutBindings[attrs.layout].linkParentX(d),\n                    y: attrs.layoutBindings[attrs.layout].linkParentY(d),\n                };\n\n                const m = attrs.compact && d.flexCompactDim ? {\n                    x: attrs.layoutBindings[attrs.layout].linkCompactXStart(d),\n                    y: attrs.layoutBindings[attrs.layout].linkCompactYStart(d),\n                } : n;\n                return attrs.layoutBindings[attrs.layout].diagonal(n, p, m);\n            });\n\n        // Remove any  links which is exiting after animation\n        const linkExit = linkSelection\n            .exit()\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"d\", (d) => {\n                const xo = attrs.layoutBindings[attrs.layout].linkJoinX({ x, y, width, height });\n                const yo = attrs.layoutBindings[attrs.layout].linkJoinY({ x, y, width, height });\n                const o = { x: xo, y: yo };\n                return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n            })\n            .remove();\n\n\n        // --------------------------  CONNECTIONS ----------------------\n\n        const connectionsSel = attrs.connectionsWrapper\n            .selectAll(\"path.connection\")\n            .data(visibleConnections)\n\n        // Enter any new connections at the parent's previous position.\n        const connEnter = connectionsSel\n            .enter()\n            .insert(\"path\", \"g\")\n            .attr(\"class\", \"connection\")\n            .attr(\"d\", (d) => {\n                const xo = attrs.layoutBindings[attrs.layout].linkJoinX({ x: x0, y: y0, width, height });\n                const yo = attrs.layoutBindings[attrs.layout].linkJoinY({ x: x0, y: y0, width, height });\n                const o = { x: xo, y: yo };\n                return attrs.layoutBindings[attrs.layout].diagonal(o, o);\n            });\n\n\n        // Get connections update selection\n        const connUpdate = connEnter.merge(connectionsSel);\n\n        // Styling connections\n        connUpdate.attr(\"fill\", \"none\")\n\n        // Transition back to the parent element position\n        connUpdate\n            .transition()\n            .duration(attrs.duration)\n            .attr('d', (d) => {\n                const xs = attrs.layoutBindings[attrs.layout].linkX({ x: d._source.x, y: d._source.y, width: d._source.width, height: d._source.height });\n                const ys = attrs.layoutBindings[attrs.layout].linkY({ x: d._source.x, y: d._source.y, width: d._source.width, height: d._source.height });\n                const xt = attrs.layoutBindings[attrs.layout].linkJoinX({ x: d._target.x, y: d._target.y, width: d._target.width, height: d._target.height });\n                const yt = attrs.layoutBindings[attrs.layout].linkJoinY({ x: d._target.x, y: d._target.y, width: d._target.width, height: d._target.height });\n                return attrs.linkGroupArc({ source: { x: xs, y: ys }, target: { x: xt, y: yt } })\n            })\n\n        // Allow external modifications\n        connUpdate.each(attrs.connectionsUpdate);\n\n        // Remove any  links which is exiting after animation\n        const connExit = connectionsSel\n            .exit()\n            .transition()\n            .duration(attrs.duration)\n            .attr('opacity', 0)\n            .remove();\n\n        // --------------------------  NODES ----------------------\n        // Get nodes selection\n        const nodesSelection = attrs.nodesWrapper\n            .selectAll(\"g.node\")\n            .data(nodes, ({ data }) => attrs.nodeId(data));\n\n        // Enter any new nodes at the parent's previous position.\n        const nodeEnter = nodesSelection\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"node\")\n            .attr(\"transform\", (d) => {\n                if (d == attrs.root) return `translate(${x0},${y0})`\n                const xj = attrs.layoutBindings[attrs.layout].nodeJoinX({ x: x0, y: y0, width, height });\n                const yj = attrs.layoutBindings[attrs.layout].nodeJoinY({ x: x0, y: y0, width, height });\n                return `translate(${xj},${yj})`\n            })\n            .attr(\"cursor\", \"pointer\")\n            .on(\"click\", (event, { data }) => {\n                if ([...event.srcElement.classList].includes(\"node-button-foreign-object\")) {\n                    return;\n                }\n                attrs.onNodeClick(attrs.nodeId(data));\n            });\n\n        // Add background rectangle for the nodes\n        nodeEnter\n            .patternify({\n                tag: \"rect\",\n                selector: \"node-rect\",\n                data: (d) => [d]\n            })\n\n        // Node update styles\n        const nodeUpdate = nodeEnter\n            .merge(nodesSelection)\n            .style(\"font\", \"12px sans-serif\");\n\n        // Add foreignObject element inside rectangle\n        const fo = nodeUpdate.patternify({\n            tag: \"foreignObject\",\n            selector: \"node-foreign-object\",\n            data: (d) => [d]\n        })\n            .style('overflow', 'visible')\n\n        // Add foreign object\n        fo.patternify({\n            tag: \"xhtml:div\",\n            selector: \"node-foreign-object-div\",\n            data: (d) => [d]\n        })\n\n        this.restyleForeignObjectElements();\n\n        // Add Node button circle's group (expand-collapse button)\n        const nodeButtonGroups = nodeEnter\n            .patternify({\n                tag: \"g\",\n                selector: \"node-button-g\",\n                data: (d) => [d]\n            })\n            .on(\"click\", (event, d) => this.onButtonClick(event, d));\n\n        nodeButtonGroups.patternify({\n            tag: 'rect',\n            selector: 'node-button-rect',\n            data: (d) => [d]\n        })\n            .attr('opacity', 0)\n            .attr('pointer-events', 'all')\n            .attr('width', 40)\n            .attr('height', 40)\n            .attr('x', -20)\n            .attr('y', -20)\n\n        // Add expand collapse button content\n        const nodeFo = nodeButtonGroups\n            .patternify({\n                tag: \"foreignObject\",\n                selector: \"node-button-foreign-object\",\n                data: (d) => [d]\n            })\n            .attr('width', 40)\n            .attr('height', 40)\n            .attr('x', -20)\n            .attr('y', -20)\n            .style('overflow', 'visible')\n            .patternify({\n                tag: \"xhtml:div\",\n                selector: \"node-button-div\",\n                data: (d) => [d]\n            })\n            .style('pointer-events', 'none')\n            .style('display', 'flex')\n            .style('width', '100%')\n            .style('height', '100%')\n\n\n\n        // Transition to the proper position for the node\n        nodeUpdate\n            .transition()\n            .attr(\"opacity\", 0)\n            .duration(attrs.duration)\n            .attr(\"transform\", ({ x, y, width, height }) => {\n                return attrs.layoutBindings[attrs.layout].nodeUpdateTransform({ x, y, width, height });\n\n            })\n            .attr(\"opacity\", 1);\n\n        // Style node rectangles\n        nodeUpdate\n            .select(\".node-rect\")\n            .attr(\"width\", ({ width }) => width)\n            .attr(\"height\", ({ height }) => height)\n            .attr(\"x\", ({ width }) => 0)\n            .attr(\"y\", ({ height }) => 0)\n            .attr(\"cursor\", \"pointer\")\n            .attr('rx', 3)\n            .attr(\"fill\", attrs.nodeDefaultBackground)\n\n        // Move node button group to the desired position\n        nodeUpdate\n            .select(\".node-button-g\")\n            .attr(\"transform\", ({ data, width, height }) => {\n                const x = attrs.layoutBindings[attrs.layout].buttonX({ width, height });\n                const y = attrs.layoutBindings[attrs.layout].buttonY({ width, height });\n                return `translate(${x},${y})`\n            })\n            .attr(\"display\", ({ data }) => {\n                return data._directSubordinates > 0 ? null : 'none';\n            })\n            .attr(\"opacity\", ({ children, _children }) => {\n                if (children || _children) {\n                    return 1;\n                }\n                return 0;\n            });\n\n        // Restyle node button circle\n        nodeUpdate\n            .select(\".node-button-foreign-object .node-button-div\")\n            .html((node) => {\n                return attrs.buttonContent({ node, state: attrs })\n            })\n\n        // Restyle button texts\n        nodeUpdate\n            .select(\".node-button-text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"alignment-baseline\", \"middle\")\n            .attr(\"fill\", attrs.defaultTextFill)\n            .attr(\"font-size\", ({ children }) => {\n                if (children) return 40;\n                return 26;\n            })\n            .text(({ children }) => {\n                if (children) return \"-\";\n                return \"+\";\n            })\n            .attr(\"y\", this.isEdge() ? 10 : 0);\n\n        nodeUpdate.each(attrs.nodeUpdate)\n\n        // Remove any exiting nodes after transition\n        const nodeExitTransition = nodesSelection\n            .exit()\n            .attr(\"opacity\", 1)\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"transform\", (d) => {\n                const ex = attrs.layoutBindings[attrs.layout].nodeJoinX({ x, y, width, height });\n                const ey = attrs.layoutBindings[attrs.layout].nodeJoinY({ x, y, width, height });\n                return `translate(${ex},${ey})`\n            })\n            .on(\"end\", function () {\n                d3.select(this).remove();\n            })\n            .attr(\"opacity\", 0);\n\n        // Store the old positions for transition.\n        nodes.forEach((d) => {\n            d.x0 = d.x;\n            d.y0 = d.y;\n        });\n\n        // CHECK FOR CENTERING\n        const centeredNode = attrs.allNodes.filter(d => d.data._centered)[0]\n        if (centeredNode) {\n            const centeredNodes = centeredNode.data._centeredWithDescendants ? centeredNode.descendants().filter((d, i) => i < 7) : [centeredNode]\n            centeredNode.data._centeredWithDescendants = null;\n            centeredNode.data._centered = null;\n            this.fit({\n                animate: true,\n                scale: false,\n                nodes: centeredNodes\n            })\n        }\n\n    }\n\n    // This function detects whether current browser is edge\n    isEdge() {\n        return window.navigator.userAgent.includes(\"Edge\");\n    }\n\n    // Generate horizontal diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges-horizontal-d3-v3-v4-v5-v6\n    hdiagonal(s, t, m) {\n        // Define source and target x,y coordinates\n        const x = s.x;\n        const y = s.y;\n        const ex = t.x;\n        const ey = t.y;\n\n        let mx = m && m.x || x;\n        let my = m && m.y || y;\n\n        // Values in case of top reversed and left reversed diagonals\n        let xrvs = ex - x < 0 ? -1 : 1;\n        let yrvs = ey - y < 0 ? -1 : 1;\n\n        // Define preferred curve radius\n        let rdef = 35;\n\n        // Reduce curve radius, if source-target x space is smaller\n        let r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n\n        // Further reduce curve radius, is y space is more small\n        r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r;\n\n        // Defin width and height of link, excluding radius\n        let h = Math.abs(ey - y) / 2 - r;\n        let w = Math.abs(ex - x) / 2 - r;\n\n        // Build and return custom arc command\n        return `\n                  M ${mx} ${my}\n                  L ${mx} ${y}\n                  L ${x} ${y}\n                  L ${x + w * xrvs} ${y}\n                  C ${x + w * xrvs + r * xrvs} ${y} \n                    ${x + w * xrvs + r * xrvs} ${y} \n                    ${x + w * xrvs + r * xrvs} ${y + r * yrvs}\n                  L ${x + w * xrvs + r * xrvs} ${ey - r * yrvs} \n                  C ${x + w * xrvs + r * xrvs}  ${ey} \n                    ${x + w * xrvs + r * xrvs}  ${ey} \n                    ${ex - w * xrvs}  ${ey}\n                  L ${ex} ${ey}\n       `;\n    }\n\n    // Generate custom diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges\n    diagonal(s, t, m) {\n        const x = s.x;\n        const y = s.y;\n        const ex = t.x;\n        const ey = t.y;\n\n        let mx = m && m.x || x;\n        let my = m && m.y || y;\n\n        let xrvs = ex - x < 0 ? -1 : 1;\n        let yrvs = ey - y < 0 ? -1 : 1;\n\n        let rdef = 35;\n        let r = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n\n        r = Math.abs(ey - y) / 2 < r ? Math.abs(ey - y) / 2 : r;\n\n        let h = Math.abs(ey - y) / 2 - r;\n        let w = Math.abs(ex - x) - r * 2;\n        //w=0;\n        const path = `\n                  M ${mx} ${my}\n                  L ${x} ${my}\n                  L ${x} ${y}\n                  L ${x} ${y + h * yrvs}\n                  C  ${x} ${y + h * yrvs + r * yrvs} ${x} ${y + h * yrvs + r * yrvs\n            } ${x + r * xrvs} ${y + h * yrvs + r * yrvs}\n                  L ${x + w * xrvs + r * xrvs} ${y + h * yrvs + r * yrvs}\n                  C  ${ex}  ${y + h * yrvs + r * yrvs} ${ex}  ${y + h * yrvs + r * yrvs\n            } ${ex} ${ey - h * yrvs}\n                  L ${ex} ${ey}\n       `;\n        return path;\n    }\n\n    restyleForeignObjectElements() {\n        const attrs = this.getChartState();\n\n        attrs.svg\n            .selectAll(\".node-foreign-object\")\n            .attr(\"width\", ({ width }) => width)\n            .attr(\"height\", ({ height }) => height)\n            .attr(\"x\", ({ width }) => 0)\n            .attr(\"y\", ({ height }) => 0);\n        attrs.svg\n            .selectAll(\".node-foreign-object-div\")\n            .style(\"width\", ({ width }) => `${width}px`)\n            .style(\"height\", ({ height }) => `${height}px`)\n            .html(function (d, i, arr) { return attrs.nodeContent.bind(this)(d, i, arr, attrs) })\n    }\n\n    // Toggle children on click.\n    onButtonClick(event, d) {\n        const attrs = this.getChartState();\n        if (attrs.setActiveNodeCentered) {\n            d.data._centered = true;\n            d.data._centeredWithDescendants = true;\n        }\n\n        // If childrens are expanded\n        if (d.children) {\n            //Collapse them\n            d._children = d.children;\n            d.children = null;\n\n            // Set descendants expanded property to false\n            this.setExpansionFlagToChildren(d, false);\n        } else {\n            // Expand children\n            d.children = d._children;\n            d._children = null;\n\n            // Set each children as expanded\n            if (d.children) {\n                d.children.forEach(({ data }) => (data._expanded = true));\n            }\n        }\n\n        // Redraw Graph\n        this.update(d);\n    }\n\n    // This function changes `expanded` property to descendants\n    setExpansionFlagToChildren({ data, children, _children }, flag) {\n        // Set flag to the current property\n        data._expanded = flag;\n\n        // Loop over and recursively update expanded children's descendants\n        if (children) {\n            children.forEach((d) => {\n                this.setExpansionFlagToChildren(d, flag);\n            });\n        }\n\n        // Loop over and recursively update collapsed children's descendants\n        if (_children) {\n            _children.forEach((d) => {\n                this.setExpansionFlagToChildren(d, flag);\n            });\n        }\n    }\n\n\n    // Method which only expands nodes, which have property set \"expanded=true\"\n    expandSomeNodes(d) {\n        // If node has expanded property set\n        if (d.data._expanded) {\n            // Retrieve node's parent\n            let parent = d.parent;\n\n            // While we can go up\n            while (parent) {\n                // Expand all current parent's children\n                if (parent._children) {\n                    parent.children = parent._children;\n                }\n\n                // Replace current parent holding object\n                parent = parent.parent;\n            }\n        }\n\n        // Recursivelly do the same for collapsed nodes\n        if (d._children) {\n            d._children.forEach((ch) => this.expandSomeNodes(ch));\n        }\n\n        // Recursivelly do the same for expanded nodes\n        if (d.children) {\n            d.children.forEach((ch) => this.expandSomeNodes(ch));\n        }\n    }\n\n    // This function updates nodes state and redraws graph, usually after data change\n    updateNodesState() {\n        const attrs = this.getChartState();\n\n        this.setLayouts({ expandNodesFirst: true });\n\n        // Redraw Graphs\n        this.update(attrs.root);\n    }\n\n    setLayouts({ expandNodesFirst = true }) {\n        const attrs = this.getChartState();\n        // Store new root by converting flat data to hierarchy\n        attrs.root = d3\n            .stratify()\n            .id((d) => attrs.nodeId(d))\n            .parentId(d => attrs.parentNodeId(d))(attrs.data);\n\n        attrs.root.each((node, i, arr) => {\n            let width = attrs.nodeWidth(node);\n            let height = attrs.nodeHeight(node);\n            Object.assign(node, { width, height })\n        })\n\n        // Store positions, where children appear during their enter animation\n        attrs.root.x0 = 0;\n        attrs.root.y0 = 0;\n        attrs.allNodes = attrs.root.descendants();\n\n        // Store direct and total descendants count\n        attrs.allNodes.forEach((d) => {\n            Object.assign(d.data, {\n                _directSubordinates: d.children ? d.children.length : 0,\n                _totalSubordinates: d.descendants().length - 1\n            });\n        });\n\n        if (attrs.root.children) {\n            if (expandNodesFirst) {\n                // Expand all nodes first\n                attrs.root.children.forEach(this.expand);\n            }\n            // Then collapse them all\n            attrs.root.children.forEach((d) => this.collapse(d));\n\n            // Collapse root if level is 0\n            if (attrs.expandLevel == 0) {\n                attrs.root._children = attrs.root.children;\n                attrs.root.children = null;\n            }\n\n            // Then only expand nodes, which have expanded proprty set to true\n            [attrs.root].forEach((ch) => this.expandSomeNodes(ch));\n        }\n    }\n\n    // Function which collapses passed node and it's descendants\n    collapse(d) {\n        if (d.children) {\n            d._children = d.children;\n            d._children.forEach((ch) => this.collapse(ch));\n            d.children = null;\n        }\n    }\n\n    // Function which expands passed node and it's descendants\n    expand(d) {\n        if (d._children) {\n            d.children = d._children;\n            d.children.forEach((ch) => this.expand(ch));\n            d._children = null;\n        }\n    }\n\n    // Zoom handler function\n    zoomed(event, d) {\n        const attrs = this.getChartState();\n        const chart = attrs.chart;\n\n        // Get d3 event's transform object\n        const transform = event.transform;\n\n        // Store it\n        attrs.lastTransform = transform;\n\n        // Reposition and rescale chart accordingly\n        chart.attr(\"transform\", transform);\n\n        // Apply new styles to the foreign object element\n        if (this.isEdge()) {\n            this.restyleForeignObjectElements();\n        }\n    }\n\n    zoomTreeBounds({ x0, x1, y0, y1, params = { animate: true, scale: true } }) {\n        const { centerG, svgWidth: w, svgHeight: h, svg, zoomBehavior, duration, lastTransform } = this.getChartState()\n        let scaleVal = Math.min(8, 0.9 / Math.max((x1 - x0) / w, (y1 - y0) / h));\n        let identity = d3.zoomIdentity.translate(w / 2, h / 2)\n        identity = identity.scale(params.scale ? scaleVal : lastTransform.k)\n\n        identity = identity.translate(-(x0 + x1) / 2, -(y0 + y1) / 2);\n        // Transition zoom wrapper component into specified bounds\n        svg.transition().duration(params.animate ? duration : 0).call(zoomBehavior.transform, identity);\n        centerG.transition().duration(params.animate ? duration : 0).attr('transform', 'translate(0,0)')\n    }\n\n    fit({ animate = true, nodes, scale = true } = {}) {\n        const attrs = this.getChartState();\n        const { root } = attrs;\n        let descendants = nodes ? nodes : root.descendants();\n        const minX = d3.min(descendants, d => d.x + attrs.layoutBindings[attrs.layout].nodeLeftX(d))\n        const maxX = d3.max(descendants, d => d.x + attrs.layoutBindings[attrs.layout].nodeRightX(d))\n        const minY = d3.min(descendants, d => d.y + attrs.layoutBindings[attrs.layout].nodeTopY(d))\n        const maxY = d3.max(descendants, d => d.y + attrs.layoutBindings[attrs.layout].nodeBottomY(d))\n\n        this.zoomTreeBounds({\n            params: { animate: animate, scale },\n            x0: minX - 50,\n            x1: maxX + 50,\n            y0: minY - 50,\n            y1: maxY + 50,\n        });\n        return this;\n    }\n\n    // This function can be invoked via chart.setExpanded API, it expands or collapses particular node\n    setExpanded(id, expandedFlag = true) {\n\n        const attrs = this.getChartState();\n        // Retrieve node by node Id\n        const node = attrs.allNodes.filter(({ data }) => attrs.nodeId(data) == id)[0];\n\n        if (!node) {\n            console.log(`ORG CHART - ${expandedFlag ? \"EXPAND\" : \"COLLAPSE\"} - Node with id (${id})  not found in the tree`)\n            return this;\n        }\n        node.data._expanded = expandedFlag;\n        return this;\n    }\n\n    setCentered(nodeId) {\n        const attrs = this.getChartState();\n        // this.setExpanded(nodeId)\n        const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - CENTER - Node with id (${nodeId}) not found in the tree`)\n            return this;\n        }\n        node.data._centered = true;\n        node.data._expanded = true;\n        return this;\n    }\n\n    setHighlighted(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - HIGHLIGHT - Node with id (${nodeId})  not found in the tree`);\n            return this\n        }\n        node.data._highlighted = true;\n        node.data._expanded = true;\n        node.data._centered = true;\n        return this;\n    }\n\n    setUpToTheRootHighlighted(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(d => attrs.nodeId(d.data) === nodeId)[0];\n        if (!node) {\n            console.log(`ORG CHART - HIGHLIGHTROOT - Node with id (${nodeId}) not found in the tree`)\n            return this;\n        }\n        node.data._upToTheRootHighlighted = true;\n        node.data._expanded = true;\n        node.ancestors().forEach(d => d.data._upToTheRootHighlighted = true)\n        return this;\n    }\n\n    clearHighlighting() {\n        const attrs = this.getChartState();\n        attrs.allNodes.forEach(d => {\n            d.data._highlighted = false;\n            d.data._upToTheRootHighlighted = false;\n        })\n        this.update(attrs.root)\n    }\n\n    // It can take selector which would go fullscreen\n    fullscreen(elem) {\n        const attrs = this.getChartState();\n        const el = d3.select(elem || attrs.container).node();\n\n        d3.select(document).on('fullscreenchange.' + attrs.id, function (d) {\n            const fsElement = document.fullscreenElement || document.mozFullscreenElement || document.webkitFullscreenElement;\n            if (fsElement == el) {\n                setTimeout(d => {\n                    attrs.svg.attr('height', window.innerHeight - 40);\n                }, 500)\n            } else {\n                attrs.svg.attr('height', attrs.svgHeight)\n            }\n        })\n\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        }\n    }\n\n    // Zoom in exposed method\n    zoomIn() {\n        const { svg, zoomBehavior } = this.getChartState();\n        svg.transition().call(zoomBehavior.scaleBy, 1.3);\n    }\n\n    // Zoom out exposed method\n    zoomOut() {\n        const { svg, zoomBehavior } = this.getChartState();\n        svg.transition().call(zoomBehavior.scaleBy, 0.78);\n    }\n\n    toDataURL(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                callback(reader.result);\n            }\n            reader.readAsDataURL(xhr.response);\n        };\n        xhr.open('GET', url);\n        xhr.responseType = 'blob';\n        xhr.send();\n    }\n\n    exportImg({ full = false, scale = 3, onLoad = d => d, save = true } = {}) {\n        const that = this;\n        const attrs = this.getChartState();\n        const { svg: svgImg, root } = attrs\n        let count = 0;\n        const selection = svgImg.selectAll('img')\n        let total = selection.size()\n\n        const exportImage = () => {\n            const transform = JSON.parse(JSON.stringify(that.lastTransform()));\n            const duration = that.duration();\n            if (full) {\n                that.fit();\n            }\n            const { svg } = that.getChartState()\n\n            setTimeout(d => {\n                that.downloadImage({\n                    node: svg.node(), scale, isSvg: false,\n                    onAlreadySerialized: d => {\n                        that.update(root)\n                    },\n                    onLoad: onLoad,\n                    save\n                })\n            }, full ? duration + 10 : 0)\n        }\n\n        if (total > 0) {\n            selection\n                .each(function () {\n                    that.toDataURL(this.src, (dataUrl) => {\n                        this.src = dataUrl;\n                        if (++count == total) {\n                            exportImage();\n                        }\n                    })\n                })\n        } else {\n            exportImage();\n        }\n\n\n    }\n\n\n\n    exportSvg() {\n        const { svg } = this.getChartState();\n        this.downloadImage({ node: svg.node(), scale: 3, isSvg: true })\n        return this;\n    }\n\n    expandAll() {\n        const { allNodes, root } = this.getChartState();\n        allNodes.forEach(d => d.data._expanded = true);\n        this.render()\n        return this;\n    }\n\n    collapseAll() {\n        const { allNodes, root } = this.getChartState();\n        allNodes.forEach(d => d.data._expanded = false);\n        this.expandLevel(0)\n        this.render();\n        return this;\n    }\n\n    downloadImage({ node, scale = 2, isSvg = false, save = true, onAlreadySerialized = d => { }, onLoad = d => { } }) {\n        // Retrieve svg node\n        const svgNode = node;\n\n        if (isSvg) {\n            let source = serializeString(svgNode);\n            //add xml declaration\n            source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n            //convert svg source to URI data scheme.\n            var url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n            saveAs(url, \"graph.svg\");\n            onAlreadySerialized()\n            return;\n        }\n        // Get image quality index (basically,  index you can zoom in)\n        const quality = scale\n        // Create image\n        const image = document.createElement('img');\n        image.onload = function () {\n            // Create image canvas\n            const canvas = document.createElement('canvas');\n            // Set width and height based on SVG node\n            const rect = svgNode.getBoundingClientRect();\n            canvas.width = rect.width * quality;\n            canvas.height = rect.height * quality;\n            // Draw background\n            const context = canvas.getContext('2d');\n            context.fillStyle = '#FAFAFA';\n            context.fillRect(0, 0, rect.width * quality, rect.height * quality);\n            context.drawImage(image, 0, 0, rect.width * quality, rect.height * quality);\n            // Set some image metadata\n            let dt = canvas.toDataURL('image/png');\n            if (onLoad) {\n                onLoad(dt)\n            }\n            if (save) {\n                // Invoke saving function\n                saveAs(dt, 'graph.png');\n            }\n\n        };\n\n        var url = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(serializeString(svgNode));\n\n        onAlreadySerialized()\n\n        image.src = url// URL.createObjectURL(blob);\n        // This function invokes save window\n        function saveAs(uri, filename) {\n            // create link\n            var link = document.createElement('a');\n            if (typeof link.download === 'string') {\n                document.body.appendChild(link); // Firefox requires the link to be in the body\n                link.download = filename;\n                link.href = uri;\n                link.click();\n                document.body.removeChild(link); // remove the link when done\n            } else {\n                location.replace(uri);\n            }\n        }\n        // This function serializes SVG and sets all necessary attributes\n        function serializeString(svg) {\n            const xmlns = 'http://www.w3.org/2000/xmlns/';\n            const xlinkns = 'http://www.w3.org/1999/xlink';\n            const svgns = 'http://www.w3.org/2000/svg';\n            svg = svg.cloneNode(true);\n            const fragment = window.location.href + '#';\n            const walker = document.createTreeWalker(svg, NodeFilter.SHOW_ELEMENT, null, false);\n            while (walker.nextNode()) {\n                for (const attr of walker.currentNode.attributes) {\n                    if (attr.value.includes(fragment)) {\n                        attr.value = attr.value.replace(fragment, '#');\n                    }\n                }\n            }\n            svg.setAttributeNS(xmlns, 'xmlns', svgns);\n            svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns);\n            const serializer = new XMLSerializer();\n            const string = serializer.serializeToString(svg);\n            return string;\n        }\n    }\n\n    // Calculate what size text will take\n    getTextWidth(text, {\n        fontSize = 14,\n        fontWeight = 400,\n        defaultFont = \"Helvetice\",\n        ctx\n    } = {}) {\n        ctx.font = `${fontWeight || ''} ${fontSize}px ${defaultFont} `\n        const measurement = ctx.measureText(text);\n        return measurement.width;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}